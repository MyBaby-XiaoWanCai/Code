Component: ARM Compiler 6.14 Tool: armlink [5db06800]

==============================================================================

Section Cross References

    startup_stm32f427xx.o(RESET) refers to startup_stm32f427xx.o(STACK) for __initial_sp
    startup_stm32f427xx.o(RESET) refers to startup_stm32f427xx.o(.text) for Reset_Handler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f427xx.o(RESET) refers to irq_cm4f.o(.text) for SVC_Handler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler) for CAN1_RX0_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.CAN1_RX1_IRQHandler) for CAN1_RX1_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.EXTI9_5_IRQHandler) for EXTI9_5_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.TIM4_IRQHandler) for TIM4_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.TIM8_TRG_COM_TIM14_IRQHandler) for TIM8_TRG_COM_TIM14_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.TIM5_IRQHandler) for TIM5_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.CAN2_RX0_IRQHandler) for CAN2_RX0_IRQHandler
    startup_stm32f427xx.o(RESET) refers to stm32f4xx_it.o(.text.CAN2_RX1_IRQHandler) for CAN2_RX1_IRQHandler
    startup_stm32f427xx.o(.text) refers to system_stm32f4xx.o(.text.SystemInit) for SystemInit
    startup_stm32f427xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    main.o(.text.main) refers to stm32f4xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to gpio.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to rng.o(.text.MX_RNG_Init) for MX_RNG_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI1_Init) for MX_SPI1_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI2_Init) for MX_SPI2_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI3_Init) for MX_SPI3_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI4_Init) for MX_SPI4_Init
    main.o(.text.main) refers to usart.o(.text.MX_USART1_UART_Init) for MX_USART1_UART_Init
    main.o(.text.main) refers to usart.o(.text.MX_USART2_UART_Init) for MX_USART2_UART_Init
    main.o(.text.main) refers to tim.o(.text.MX_TIM2_Init) for MX_TIM2_Init
    main.o(.text.main) refers to bsp.o(.text.BspInit) for BspInit
    main.o(.text.main) refers to can.o(.text.MX_CAN1_Init) for MX_CAN1_Init
    main.o(.text.main) refers to can.o(.text.MX_CAN2_Init) for MX_CAN2_Init
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to task_start.o(.text.AppTaskStart) for AppTaskStart
    main.o(.text.main) refers to main.o(.rodata.ThreadStart_Attr) for ThreadStart_Attr
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to main.o(.bss.ThreadIdStart) for ThreadIdStart
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for HAL_PWREx_EnableOverDrive
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.text.HAL_TIM_PeriodElapsedCallback) refers to stm32f4xx_hal.o(.text.HAL_IncTick) for HAL_IncTick
    main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    main.o(.rodata.ThreadStart_Attr) refers to main.o(.rodata.str1.1) for .L.str
    gpio.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    gpio.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    gpio.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    gpio.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    gpio.o(.ARM.exidx.text.MX_GPIO_Init) refers to gpio.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    can.o(.text.MX_CAN1_Init) refers to can.o(.bss.hcan1) for hcan1
    can.o(.text.MX_CAN1_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_Init) for HAL_CAN_Init
    can.o(.text.MX_CAN1_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    can.o(.text.MX_CAN1_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ConfigFilter) for HAL_CAN_ConfigFilter
    can.o(.text.MX_CAN1_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ActivateNotification) for HAL_CAN_ActivateNotification
    can.o(.text.MX_CAN1_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_Start) for HAL_CAN_Start
    can.o(.ARM.exidx.text.MX_CAN1_Init) refers to can.o(.text.MX_CAN1_Init) for [Anonymous Symbol]
    can.o(.text.MX_CAN2_Init) refers to can.o(.bss.hcan2) for hcan2
    can.o(.text.MX_CAN2_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_Init) for HAL_CAN_Init
    can.o(.text.MX_CAN2_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    can.o(.text.MX_CAN2_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ConfigFilter) for HAL_CAN_ConfigFilter
    can.o(.text.MX_CAN2_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ActivateNotification) for HAL_CAN_ActivateNotification
    can.o(.text.MX_CAN2_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_Start) for HAL_CAN_Start
    can.o(.ARM.exidx.text.MX_CAN2_Init) refers to can.o(.text.MX_CAN2_Init) for [Anonymous Symbol]
    can.o(.text.HAL_CAN_MspInit) refers to can.o(.bss.HAL_RCC_CAN1_CLK_ENABLED) for HAL_RCC_CAN1_CLK_ENABLED
    can.o(.text.HAL_CAN_MspInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    can.o(.text.HAL_CAN_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    can.o(.text.HAL_CAN_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    can.o(.ARM.exidx.text.HAL_CAN_MspInit) refers to can.o(.text.HAL_CAN_MspInit) for [Anonymous Symbol]
    can.o(.text.HAL_CAN_MspDeInit) refers to can.o(.bss.HAL_RCC_CAN1_CLK_ENABLED) for HAL_RCC_CAN1_CLK_ENABLED
    can.o(.text.HAL_CAN_MspDeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    can.o(.text.HAL_CAN_MspDeInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    can.o(.ARM.exidx.text.HAL_CAN_MspDeInit) refers to can.o(.text.HAL_CAN_MspDeInit) for [Anonymous Symbol]
    rng.o(.text.MX_RNG_Init) refers to rng.o(.bss.hrng) for hrng
    rng.o(.text.MX_RNG_Init) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_Init) for HAL_RNG_Init
    rng.o(.text.MX_RNG_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    rng.o(.ARM.exidx.text.MX_RNG_Init) refers to rng.o(.text.MX_RNG_Init) for [Anonymous Symbol]
    rng.o(.ARM.exidx.text.HAL_RNG_MspInit) refers to rng.o(.text.HAL_RNG_MspInit) for [Anonymous Symbol]
    rng.o(.ARM.exidx.text.HAL_RNG_MspDeInit) refers to rng.o(.text.HAL_RNG_MspDeInit) for [Anonymous Symbol]
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.bss.hspi1) for hspi1
    spi.o(.text.MX_SPI1_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for HAL_SPI_Init
    spi.o(.text.MX_SPI1_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    spi.o(.ARM.exidx.text.MX_SPI1_Init) refers to spi.o(.text.MX_SPI1_Init) for [Anonymous Symbol]
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.bss.hspi2) for hspi2
    spi.o(.text.MX_SPI2_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for HAL_SPI_Init
    spi.o(.text.MX_SPI2_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    spi.o(.ARM.exidx.text.MX_SPI2_Init) refers to spi.o(.text.MX_SPI2_Init) for [Anonymous Symbol]
    spi.o(.text.MX_SPI3_Init) refers to spi.o(.bss.hspi3) for hspi3
    spi.o(.text.MX_SPI3_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for HAL_SPI_Init
    spi.o(.text.MX_SPI3_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    spi.o(.ARM.exidx.text.MX_SPI3_Init) refers to spi.o(.text.MX_SPI3_Init) for [Anonymous Symbol]
    spi.o(.text.MX_SPI4_Init) refers to spi.o(.bss.hspi4) for hspi4
    spi.o(.text.MX_SPI4_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for HAL_SPI_Init
    spi.o(.text.MX_SPI4_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    spi.o(.ARM.exidx.text.MX_SPI4_Init) refers to spi.o(.text.MX_SPI4_Init) for [Anonymous Symbol]
    spi.o(.text.HAL_SPI_MspInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    spi.o(.ARM.exidx.text.HAL_SPI_MspInit) refers to spi.o(.text.HAL_SPI_MspInit) for [Anonymous Symbol]
    spi.o(.text.HAL_SPI_MspDeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit) refers to spi.o(.text.HAL_SPI_MspDeInit) for [Anonymous Symbol]
    tim.o(.text.MX_TIM2_Init) refers to tim.o(.bss.htim2) for htim2
    tim.o(.text.MX_TIM2_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for HAL_TIM_PWM_Init
    tim.o(.text.MX_TIM2_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    tim.o(.text.MX_TIM2_Init) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for HAL_TIMEx_MasterConfigSynchronization
    tim.o(.text.MX_TIM2_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for HAL_TIM_PWM_ConfigChannel
    tim.o(.text.MX_TIM2_Init) refers to tim.o(.text.HAL_TIM_MspPostInit) for HAL_TIM_MspPostInit
    tim.o(.ARM.exidx.text.MX_TIM2_Init) refers to tim.o(.text.MX_TIM2_Init) for [Anonymous Symbol]
    tim.o(.text.HAL_TIM_MspPostInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    tim.o(.ARM.exidx.text.HAL_TIM_MspPostInit) refers to tim.o(.text.HAL_TIM_MspPostInit) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    usart.o(.text.MX_USART1_UART_Init) refers to usart.o(.bss.huart1) for huart1
    usart.o(.text.MX_USART1_UART_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    usart.o(.text.MX_USART1_UART_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    usart.o(.ARM.exidx.text.MX_USART1_UART_Init) refers to usart.o(.text.MX_USART1_UART_Init) for [Anonymous Symbol]
    usart.o(.text.MX_USART2_UART_Init) refers to usart.o(.bss.huart2) for huart2
    usart.o(.text.MX_USART2_UART_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    usart.o(.text.MX_USART2_UART_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    usart.o(.ARM.exidx.text.MX_USART2_UART_Init) refers to usart.o(.text.MX_USART2_UART_Init) for [Anonymous Symbol]
    usart.o(.text.HAL_UART_MspInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    usart.o(.text.HAL_UART_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    usart.o(.text.HAL_UART_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    usart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to usart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    usart.o(.text.HAL_UART_MspDeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    usart.o(.text.HAL_UART_MspDeInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    usart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to usart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f4xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f4xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f4xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f4xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f4xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f4xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler) refers to can.o(.bss.hcan1) for hcan1
    stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) for HAL_CAN_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.CAN1_RX0_IRQHandler) refers to stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.CAN1_RX1_IRQHandler) refers to can.o(.bss.hcan1) for hcan1
    stm32f4xx_it.o(.text.CAN1_RX1_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) for HAL_CAN_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.CAN1_RX1_IRQHandler) refers to stm32f4xx_it.o(.text.CAN1_RX1_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.EXTI9_5_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for HAL_GPIO_EXTI_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.EXTI9_5_IRQHandler) refers to stm32f4xx_it.o(.text.EXTI9_5_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.USART1_IRQHandler) refers to usart.o(.bss.huart1) for huart1
    stm32f4xx_it.o(.text.USART1_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.USART1_IRQHandler) refers to stm32f4xx_it.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.USART2_IRQHandler) refers to usart.o(.bss.huart2) for huart2
    stm32f4xx_it.o(.text.USART2_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.USART2_IRQHandler) refers to stm32f4xx_it.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.EXTI15_10_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for HAL_GPIO_EXTI_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.EXTI15_10_IRQHandler) refers to stm32f4xx_it.o(.text.EXTI15_10_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.TIM8_TRG_COM_TIM14_IRQHandler) refers to stm32f4xx_hal_timebase_tim.o(.bss.htim14) for htim14
    stm32f4xx_it.o(.text.TIM8_TRG_COM_TIM14_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.TIM8_TRG_COM_TIM14_IRQHandler) refers to stm32f4xx_it.o(.text.TIM8_TRG_COM_TIM14_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.CAN2_RX0_IRQHandler) refers to can.o(.bss.hcan2) for hcan2
    stm32f4xx_it.o(.text.CAN2_RX0_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) for HAL_CAN_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.CAN2_RX0_IRQHandler) refers to stm32f4xx_it.o(.text.CAN2_RX0_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.CAN2_RX1_IRQHandler) refers to can.o(.bss.hcan2) for hcan2
    stm32f4xx_it.o(.text.CAN2_RX1_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) for HAL_CAN_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.CAN2_RX1_IRQHandler) refers to stm32f4xx_it.o(.text.CAN2_RX1_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.TIM4_IRQHandler) refers to bsp_canlink.o(.bss.ErrCnt) for ErrCnt
    stm32f4xx_it.o(.text.TIM4_IRQHandler) refers to stm32f4xx_it.o(.bss.time4_cnt) for time4_cnt
    stm32f4xx_it.o(.text.TIM4_IRQHandler) refers to task_protection.o(.text.IntelProtectRunParmCheck) for IntelProtectRunParmCheck
    stm32f4xx_it.o(.text.TIM4_IRQHandler) refers to task_protection.o(.text.GlobleProtectRunParmCheck) for GlobleProtectRunParmCheck
    stm32f4xx_it.o(.text.TIM4_IRQHandler) refers to task_protection.o(.bss.IP_Alarm_Flag) for IP_Alarm_Flag
    stm32f4xx_it.o(.text.TIM4_IRQHandler) refers to task_protection.o(.bss.GP_Alarm_Flag) for GP_Alarm_Flag
    stm32f4xx_it.o(.text.TIM4_IRQHandler) refers to task_start.o(.bss.SemaProtection) for SemaProtection
    stm32f4xx_it.o(.text.TIM4_IRQHandler) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    stm32f4xx_it.o(.ARM.exidx.text.TIM4_IRQHandler) refers to stm32f4xx_it.o(.text.TIM4_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_protocol.o(.bss.Tstamp) for Tstamp
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to ldiv.o(.text) for __aeabi_ldivmod
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_dcdc.o(.text.DcdcParaInq) for DcdcParaInq
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_dcdc.o(.bss.DcdcCanId) for DcdcCanId
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to can.o(.bss.hcan2) for hcan2
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to bsp_canlink.o(.text.CanSendMsg) for CanSendMsg
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to can_network_protocol.o(.text.Can_Network_Func) for Can_Network_Func
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_protocol.o(.bss.Tier2) for Tier2
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_workstep.o(.bss.run_time_cnt) for run_time_cnt
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_workstep.o(.bss.record_data_upcast_flag) for record_data_upcast_flag
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_workstep.o(.bss.abort_type_flag) for abort_type_flag
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_protocol.o(.text.RecordDatUpcast) for RecordDatUpcast
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_protocol.o(.data.data_upcast_period) for data_upcast_period
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to ffixul.o(.text) for __aeabi_f2ulz
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to uldiv.o(.text) for __aeabi_uldivmod
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to task_led.o(.text.ExternalAdDatProcess) for ExternalAdDatProcess
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to stm32f4xx_it.o(.bss.time5_cnt) for time5_cnt
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to f2d.o(.text) for __aeabi_f2d
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to dcmple.o(.text) for __aeabi_dcmple
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to dmul.o(.text) for __aeabi_dmul
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to ddiv.o(.text) for __aeabi_ddiv
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to dadd.o(.text) for __aeabi_dadd
    stm32f4xx_it.o(.text.TIM5_IRQHandler) refers to d2f.o(.text) for __aeabi_d2f
    stm32f4xx_it.o(.ARM.exidx.text.TIM5_IRQHandler) refers to stm32f4xx_it.o(.text.TIM5_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_msp.o(.text.HAL_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for HAL_RCC_GetClockConfig
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_timebase_tim.o(.bss.htim14) for htim14
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for HAL_TIM_Base_Start_IT
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f4xx_hal_timebase_tim.o(.text.HAL_SuspendTick) refers to stm32f4xx_hal_timebase_tim.o(.bss.htim14) for htim14
    stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f4xx_hal_timebase_tim.o(.text.HAL_ResumeTick) refers to stm32f4xx_hal_timebase_tim.o(.bss.htim14) for htim14
    stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    iic.o(.text.i2c_Start) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    iic.o(.text.i2c_Start) refers to iic.o(.text.i2c_Delay) for i2c_Delay
    iic.o(.ARM.exidx.text.i2c_Start) refers to iic.o(.text.i2c_Start) for [Anonymous Symbol]
    iic.o(.text.i2c_Stop) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    iic.o(.text.i2c_Stop) refers to iic.o(.text.i2c_Delay) for i2c_Delay
    iic.o(.ARM.exidx.text.i2c_Stop) refers to iic.o(.text.i2c_Stop) for [Anonymous Symbol]
    iic.o(.text.i2c_SendByte) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    iic.o(.text.i2c_SendByte) refers to iic.o(.text.i2c_Delay) for i2c_Delay
    iic.o(.text.i2c_SendByte) refers to iic.o(.text.i2c_WaitAck) for i2c_WaitAck
    iic.o(.ARM.exidx.text.i2c_SendByte) refers to iic.o(.text.i2c_SendByte) for [Anonymous Symbol]
    iic.o(.text.i2c_Ack) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    iic.o(.text.i2c_Ack) refers to iic.o(.text.i2c_Delay) for i2c_Delay
    iic.o(.ARM.exidx.text.i2c_Ack) refers to iic.o(.text.i2c_Ack) for [Anonymous Symbol]
    iic.o(.text.i2c_NAck) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    iic.o(.text.i2c_NAck) refers to iic.o(.text.i2c_Delay) for i2c_Delay
    iic.o(.ARM.exidx.text.i2c_NAck) refers to iic.o(.text.i2c_NAck) for [Anonymous Symbol]
    iic.o(.text.i2c_ReadByte) refers to iic.o(.text.IOSwitch) for IOSwitch
    iic.o(.text.i2c_ReadByte) refers to bsp_dwt.o(.text.bsp_DelayUS) for bsp_DelayUS
    iic.o(.text.i2c_ReadByte) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    iic.o(.text.i2c_ReadByte) refers to iic.o(.text.i2c_Delay) for i2c_Delay
    iic.o(.text.i2c_ReadByte) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    iic.o(.text.i2c_ReadByte) refers to iic.o(.text.i2c_NAck) for i2c_NAck
    iic.o(.ARM.exidx.text.i2c_ReadByte) refers to iic.o(.text.i2c_ReadByte) for [Anonymous Symbol]
    iic.o(.text.i2c_WaitAck) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    iic.o(.text.i2c_WaitAck) refers to iic.o(.text.i2c_Delay) for i2c_Delay
    iic.o(.text.i2c_WaitAck) refers to iic.o(.text.IOSwitch) for IOSwitch
    iic.o(.text.i2c_WaitAck) refers to bsp_dwt.o(.text.bsp_DelayUS) for bsp_DelayUS
    iic.o(.text.i2c_WaitAck) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    iic.o(.ARM.exidx.text.i2c_WaitAck) refers to iic.o(.text.i2c_WaitAck) for [Anonymous Symbol]
    iic.o(.text.i2c_CheckDevice) refers to iic.o(.text.IOSwitch) for IOSwitch
    iic.o(.text.i2c_CheckDevice) refers to bsp_dwt.o(.text.bsp_DelayUS) for bsp_DelayUS
    iic.o(.text.i2c_CheckDevice) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    iic.o(.text.i2c_CheckDevice) refers to iic.o(.text.i2c_Start) for i2c_Start
    iic.o(.text.i2c_CheckDevice) refers to iic.o(.text.i2c_SendByte) for i2c_SendByte
    iic.o(.text.i2c_CheckDevice) refers to iic.o(.text.i2c_WaitAck) for i2c_WaitAck
    iic.o(.text.i2c_CheckDevice) refers to iic.o(.text.i2c_Stop) for i2c_Stop
    iic.o(.ARM.exidx.text.i2c_CheckDevice) refers to iic.o(.text.i2c_CheckDevice) for [Anonymous Symbol]
    iic.o(.text.IOSwitch) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    iic.o(.ARM.exidx.text.IOSwitch) refers to iic.o(.text.IOSwitch) for [Anonymous Symbol]
    iic.o(.text.i2c_Delay) refers to bsp_dwt.o(.text.bsp_DelayUS) for bsp_DelayUS
    iic.o(.ARM.exidx.text.i2c_Delay) refers to iic.o(.text.i2c_Delay) for [Anonymous Symbol]
    iic.o(.data.I2C_HandleCb) refers to iic.o(.text.i2c_Start) for i2c_Start
    iic.o(.data.I2C_HandleCb) refers to iic.o(.text.i2c_Stop) for i2c_Stop
    iic.o(.data.I2C_HandleCb) refers to iic.o(.text.i2c_SendByte) for i2c_SendByte
    iic.o(.data.I2C_HandleCb) refers to iic.o(.text.i2c_Ack) for i2c_Ack
    iic.o(.data.I2C_HandleCb) refers to iic.o(.text.i2c_NAck) for i2c_NAck
    iic.o(.data.I2C_HandleCb) refers to iic.o(.text.i2c_ReadByte) for i2c_ReadByte
    iic.o(.data.I2C_HandleCb) refers to iic.o(.text.i2c_WaitAck) for i2c_WaitAck
    iic.o(.data.I2C_HandleCb) refers to iic.o(.text.i2c_CheckDevice) for i2c_CheckDevice
    stm32f4xx_hal_can.o(.text.HAL_CAN_Init) refers to can.o(.text.HAL_CAN_MspInit) for HAL_CAN_MspInit
    stm32f4xx_hal_can.o(.text.HAL_CAN_Init) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_Init) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_Init) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_MspInit) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.text.HAL_CAN_DeInit) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_Stop) for HAL_CAN_Stop
    stm32f4xx_hal_can.o(.text.HAL_CAN_DeInit) refers to can.o(.text.HAL_CAN_MspDeInit) for HAL_CAN_MspDeInit
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_DeInit) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.text.HAL_CAN_Stop) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_Stop) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_MspDeInit) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_ConfigFilter) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ConfigFilter) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.text.HAL_CAN_Start) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_Start) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_Start) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RequestSleep) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_RequestSleep) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_WakeUp) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_WakeUp) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_IsSleepActive) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_IsSleepActive) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_AddTxMessage) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_AddTxMessage) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_AbortTxRequest) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_AbortTxRequest) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetTxMailboxesFreeLevel) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxMailboxesFreeLevel) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_IsTxMessagePending) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_IsTxMessagePending) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetTxTimestamp) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxTimestamp) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetRxMessage) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxMessage) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetRxFifoFillLevel) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxFifoFillLevel) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_ActivateNotification) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ActivateNotification) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_DeactivateNotification) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_DeactivateNotification) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0CompleteCallback) for HAL_CAN_TxMailbox0CompleteCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0AbortCallback) for HAL_CAN_TxMailbox0AbortCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1CompleteCallback) for HAL_CAN_TxMailbox1CompleteCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1AbortCallback) for HAL_CAN_TxMailbox1AbortCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2CompleteCallback) for HAL_CAN_TxMailbox2CompleteCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2AbortCallback) for HAL_CAN_TxMailbox2AbortCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0FullCallback) for HAL_CAN_RxFifo0FullCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) for HAL_CAN_RxFifo0MsgPendingCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1FullCallback) for HAL_CAN_RxFifo1FullCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1MsgPendingCallback) for HAL_CAN_RxFifo1MsgPendingCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_SleepCallback) for HAL_CAN_SleepCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_WakeUpFromRxMsgCallback) for HAL_CAN_WakeUpFromRxMsgCallback
    stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ErrorCallback) for HAL_CAN_ErrorCallback
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_IRQHandler) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox0CompleteCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0CompleteCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox0AbortCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0AbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox1CompleteCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1CompleteCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox1AbortCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1AbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox2CompleteCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2CompleteCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox2AbortCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2AbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RxFifo0FullCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0FullCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RxFifo1FullCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1FullCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RxFifo1MsgPendingCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1MsgPendingCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_SleepCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_SleepCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_WakeUpFromRxMsgCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_WakeUpFromRxMsgCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_ErrorCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetState) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetError) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_ResetError) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_ResetError) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to uldiv.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte) for FLASH_Program_Byte
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord) for FLASH_Program_HalfWord
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Word) for FLASH_Program_Word
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord) for FLASH_Program_DoubleWord
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode) for FLASH_SetErrorCode
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_Byte) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_HalfWord) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_Word) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Word) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_DoubleWord) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte) for FLASH_Program_Byte
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord) for FLASH_Program_HalfWord
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_Word) for FLASH_Program_Word
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord) for FLASH_Program_DoubleWord
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode) for FLASH_SetErrorCode
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for HAL_FLASH_OperationErrorCallback
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for HAL_FLASH_EndOfOperationCallback
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for FLASH_FlushCaches
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_SetErrorCode) refers to stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_Unlock) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_Lock) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Lock) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) for [Anonymous Symbol]
    stm32f4xx_hal_flash.o(.text.HAL_FLASH_GetError) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError) refers to stm32f4xx_hal_flash.o(.text.HAL_FLASH_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_MassErase) for FLASH_MassErase
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for FLASH_FlushCaches
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_MassErase) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_MassErase) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_Erase_Sector) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_MassErase) for FLASH_MassErase
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector) for FLASH_Erase_Sector
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP) for FLASH_OB_EnableWRP
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP) for FLASH_OB_DisableWRP
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_RDP_LevelConfig) for FLASH_OB_RDP_LevelConfig
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig) for FLASH_OB_UserConfig
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_BOR_LevelConfig) for FLASH_OB_BOR_LevelConfig
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_EnableWRP) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_DisableWRP) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_RDP_LevelConfig) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_RDP_LevelConfig) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_RDP_LevelConfig) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_BOR_LevelConfig) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_BOR_LevelConfig) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetWRP) for FLASH_OB_GetWRP
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetRDP) for FLASH_OB_GetRDP
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetUser) for FLASH_OB_GetUser
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetBOR) for FLASH_OB_GetBOR
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetBOR) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetBOR) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_EnablePCROP) for FLASH_OB_EnablePCROP
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_DisablePCROP) for FLASH_OB_DisablePCROP
    stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_BootConfig) for FLASH_OB_BootConfig
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBProgram) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_EnablePCROP) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_EnablePCROP) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_EnablePCROP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_DisablePCROP) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_DisablePCROP) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_DisablePCROP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_BootConfig) refers to stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_BootConfig) refers to stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_BootConfig) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBGetConfig) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBGetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_SelectPCROP) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_SelectPCROP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_DeSelectPCROP) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_DeSelectPCROP) for [Anonymous Symbol]
    stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_GetBank2WRP) refers to stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_GetBank2WRP) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam) for DMA_CheckFifoParam
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam) refers to stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) refers to stm32f4xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset) for DMA_CalcBaseAndBitshift.flagBitshiftOffset
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f4xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f4xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f4xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f4xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f4xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f4xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableMemorySwappingBank) refers to stm32f4xx_hal.o(.text.HAL_EnableMemorySwappingBank) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableMemorySwappingBank) refers to stm32f4xx_hal.o(.text.HAL_DisableMemorySwappingBank) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetHandle) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetPending) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_ClearPending) for [Anonymous Symbol]
    stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI) refers to stm32f4xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.text.HAL_RNG_Init) refers to rng.o(.text.HAL_RNG_MspInit) for HAL_RNG_MspInit
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_Init) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_Init) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_MspInit) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.text.HAL_RNG_DeInit) refers to rng.o(.text.HAL_RNG_MspDeInit) for HAL_RNG_MspDeInit
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_DeInit) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_MspDeInit) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.text.HAL_RNG_GenerateRandomNumber) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GenerateRandomNumber) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_GenerateRandomNumber) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GenerateRandomNumber_IT) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_GenerateRandomNumber_IT) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.text.HAL_RNG_GetRandomNumber) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_GenerateRandomNumber) for HAL_RNG_GenerateRandomNumber
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GetRandomNumber) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_GetRandomNumber) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GetRandomNumber_IT) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_GetRandomNumber_IT) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.text.HAL_RNG_IRQHandler) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_ErrorCallback) for HAL_RNG_ErrorCallback
    stm32f4xx_hal_rng.o(.text.HAL_RNG_IRQHandler) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_ReadyDataCallback) for HAL_RNG_ReadyDataCallback
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_IRQHandler) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_ErrorCallback) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_ReadyDataCallback) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_ReadyDataCallback) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_ReadLastRandomNumber) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_ReadLastRandomNumber) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GetState) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GetError) refers to stm32f4xx_hal_rng.o(.text.HAL_RNG_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) refers to spi.o(.text.HAL_SPI_MspInit) for HAL_SPI_MspInit
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit) refers to spi.o(.text.HAL_SPI_MspDeInit) for HAL_SPI_MspDeInit
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DeInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) for SPI_TxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) for SPI_TxISR_8BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) for HAL_SPI_TransmitReceive_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) for SPI_RxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) for SPI_RxISR_8BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) for SPI_2linesRxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) for SPI_2linesTxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) for SPI_2linesRxISR_8BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) for SPI_2linesTxISR_8BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) for SPI_DMAHalfTransmitCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) for SPI_DMATransmitCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback) for HAL_SPI_TxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAError) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) for HAL_SPI_TransmitReceive_DMA
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) for SPI_DMAHalfTransmitReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) for SPI_DMATransmitReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback) for HAL_SPI_RxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback) for HAL_SPI_TxRxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) for SPI_DMATxAbortCallback
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) for SPI_DMARxAbortCallback
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_AbortCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAPause) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAPause) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAResume) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAResume) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAStop) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) for SPI_DMAAbortOnError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAAbortOnError) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_ErrorCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetState) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_WaitFlagStateUntilTimeout) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMAError) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI3_SetConfig) for TIM_TI3_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI4_SetConfig) for TIM_TI4_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI3_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI3_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI4_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI4_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) refers to stm32f4xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f4xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f4xx_hal_tim.o(.text.TIM_ITRx_SetConfig) for TIM_ITRx_SetConfig
    stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_ITRx_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_ITRx_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState) refers to stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Init) refers to usart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f4xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Init) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32f4xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f4xx_hal_uart.o(.text.UART_SetConfig) refers to uldiv.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to usart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_LIN_Init) refers to usart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f4xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_LIN_Init) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to usart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init) refers to stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_DeInit) refers to usart.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout) refers to stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Receive) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.UART_Start_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt) for UART_DMATransmitCplt
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt) for UART_DMATxHalfCplt
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt) refers to stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMAError) refers to stm32f4xx_hal_uart.o(.text.UART_EndTxTransfer) for UART_EndTxTransfer
    stm32f4xx_hal_uart.o(.text.UART_DMAError) refers to stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f4xx_hal_uart.o(.text.UART_DMAError) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAError) refers to stm32f4xx_hal_uart.o(.text.UART_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt) for UART_DMAReceiveCplt
    stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt) for UART_DMARxHalfCplt
    stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_DMAPause) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_DMAResume) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f4xx_hal_uart.o(.text.UART_EndTxTransfer) for UART_EndTxTransfer
    stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_EndTxTransfer) refers to stm32f4xx_hal_uart.o(.text.UART_EndTxTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer) refers to stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle) refers to stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32f4xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxAbortCallback) for UART_DMATxAbortCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxAbortCallback) for UART_DMARxAbortCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMATxAbortCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMARxAbortCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for UART_DMATxOnlyAbortCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback) refers to stm32f4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for UART_DMARxOnlyAbortCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.UART_Receive_IT) for UART_Receive_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError) for UART_DMAAbortOnError
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.UART_Transmit_IT) for UART_Transmit_IT
    stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.UART_EndTransmit_IT) for UART_EndTransmit_IT
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32f4xx_hal_uart.o(.text.UART_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Receive_IT) refers to stm32f4xx_hal_uart.o(.text.UART_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError) refers to stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Transmit_IT) refers to stm32f4xx_hal_uart.o(.text.UART_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_EndTransmit_IT) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_EndTransmit_IT) refers to stm32f4xx_hal_uart.o(.text.UART_EndTransmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak) refers to stm32f4xx_hal_uart.o(.text.HAL_LIN_SendBreak) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode) refers to stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_ExitMuteMode) refers to stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_ExitMuteMode) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter) refers to stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver) refers to stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt) refers to stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt) refers to stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt) for [Anonymous Symbol]
    system_stm32f4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    bsp.o(.text.BspInit) refers to bsp_dwt.o(.text.bsp_InitDWT) for bsp_InitDWT
    bsp.o(.text.BspInit) refers to task_led.o(.text.ReadAddr) for ReadAddr
    bsp.o(.text.BspInit) refers to bsp_timer.o(.text.bsp_SetTIMforInt) for bsp_SetTIMforInt
    bsp.o(.text.BspInit) refers to spi.o(.bss.hspi4) for hspi4
    bsp.o(.text.BspInit) refers to bsp_sgm58601.o(.text.SGM58601_INIT) for SGM58601_INIT
    bsp.o(.text.BspInit) refers to spi.o(.bss.hspi2) for hspi2
    bsp.o(.text.BspInit) refers to spi.o(.bss.hspi1) for hspi1
    bsp.o(.text.BspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    bsp.o(.text.BspInit) refers to bsp_nca9555.o(.text.PCA9555_IOConfigReg) for PCA9555_IOConfigReg
    bsp.o(.text.BspInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp.o(.ARM.exidx.text.BspInit) refers to bsp.o(.text.BspInit) for [Anonymous Symbol]
    bsp_canlink.o(.text.crc16table) refers to bsp_canlink.o(.rodata.crctablehi) for crctablehi
    bsp_canlink.o(.text.crc16table) refers to bsp_canlink.o(.rodata.crctablelo) for crctablelo
    bsp_canlink.o(.ARM.exidx.text.crc16table) refers to bsp_canlink.o(.text.crc16table) for [Anonymous Symbol]
    bsp_canlink.o(.text.CAN1_Send_Msg) refers to can.o(.bss.hcan1) for hcan1
    bsp_canlink.o(.text.CAN1_Send_Msg) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_AddTxMessage) for HAL_CAN_AddTxMessage
    bsp_canlink.o(.text.CAN1_Send_Msg) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxMailboxesFreeLevel) for HAL_CAN_GetTxMailboxesFreeLevel
    bsp_canlink.o(.ARM.exidx.text.CAN1_Send_Msg) refers to bsp_canlink.o(.text.CAN1_Send_Msg) for [Anonymous Symbol]
    bsp_canlink.o(.text.CAN1_Receive_Msg) refers to can.o(.bss.hcan1) for hcan1
    bsp_canlink.o(.text.CAN1_Receive_Msg) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxFifoFillLevel) for HAL_CAN_GetRxFifoFillLevel
    bsp_canlink.o(.text.CAN1_Receive_Msg) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxMessage) for HAL_CAN_GetRxMessage
    bsp_canlink.o(.ARM.exidx.text.CAN1_Receive_Msg) refers to bsp_canlink.o(.text.CAN1_Receive_Msg) for [Anonymous Symbol]
    bsp_canlink.o(.text.CAN1_Send_Pack) refers to bsp_canlink.o(.data.ID) for ID
    bsp_canlink.o(.text.CAN1_Send_Pack) refers to bsp_canlink.o(.text.CAN1_Send_Msg) for CAN1_Send_Msg
    bsp_canlink.o(.text.CAN1_Send_Pack) refers to memcpya.o(.text) for __aeabi_memcpy
    bsp_canlink.o(.ARM.exidx.text.CAN1_Send_Pack) refers to bsp_canlink.o(.text.CAN1_Send_Pack) for [Anonymous Symbol]
    bsp_canlink.o(.text.ByPassSwitch) refers to bsp_canlink.o(.bss.BypassEN) for BypassEN
    bsp_canlink.o(.text.ByPassSwitch) refers to bsp_canlink.o(.data.SSwA_N_PortPin) for SSwA_N_PortPin
    bsp_canlink.o(.text.ByPassSwitch) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp_canlink.o(.text.ByPassSwitch) refers to bsp_dwt.o(.text.bsp_DelayMS) for bsp_DelayMS
    bsp_canlink.o(.text.ByPassSwitch) refers to bsp_canlink.o(.data.CTR_ON_PortPin) for CTR_ON_PortPin
    bsp_canlink.o(.ARM.exidx.text.ByPassSwitch) refers to bsp_canlink.o(.text.ByPassSwitch) for [Anonymous Symbol]
    bsp_canlink.o(.text.PassSwitch) refers to bsp_sgm58601.o(.bss.CurrOk) for CurrOk
    bsp_canlink.o(.text.PassSwitch) refers to bsp_nca9555.o(.text.Pca9555_RegRead) for Pca9555_RegRead
    bsp_canlink.o(.text.PassSwitch) refers to bsp_canlink.o(.bss.SByPassSwitch) for SByPassSwitch
    bsp_canlink.o(.text.PassSwitch) refers to bsp_canlink.o(.bss.SByPassEN) for SByPassEN
    bsp_canlink.o(.text.PassSwitch) refers to bsp_canlink.o(.data.SBypassA_P_PortPin) for SBypassA_P_PortPin
    bsp_canlink.o(.text.PassSwitch) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp_canlink.o(.ARM.exidx.text.PassSwitch) refers to bsp_canlink.o(.text.PassSwitch) for [Anonymous Symbol]
    bsp_canlink.o(.text.SW1SW2ON) refers to bsp_canlink.o(.data.SSwA_P_PortPin) for SSwA_P_PortPin
    bsp_canlink.o(.text.SW1SW2ON) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp_canlink.o(.text.SW1SW2ON) refers to bsp_canlink.o(.data.SSwA_N_PortPin) for SSwA_N_PortPin
    bsp_canlink.o(.text.SW1SW2ON) refers to bsp_canlink.o(.data.CTR_ON_PortPin) for CTR_ON_PortPin
    bsp_canlink.o(.ARM.exidx.text.SW1SW2ON) refers to bsp_canlink.o(.text.SW1SW2ON) for [Anonymous Symbol]
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.data.TxBuffCAN1) for TxBuffCAN1
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.bss.inq1) for inq1
    bsp_canlink.o(.text.CAN_Send) refers to memcpya.o(.text) for __aeabi_memcpy
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.bss.RxBuffCAN1) for RxBuffCAN1
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.text.crc16table) for crc16table
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.text.CAN1_Send_Pack) for CAN1_Send_Pack
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.bss.RxCount) for RxCount
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.bss.KBSwitch) for KBSwitch
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.data.VsenseKB) for VsenseKB
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.data.VtzKB) for VtzKB
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.bss.BypassEN) for BypassEN
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.text.ByPassSwitch) for ByPassSwitch
    bsp_canlink.o(.text.CAN_Send) refers to bsp_canlink.o(.bss.SByPassSwitch) for SByPassSwitch
    bsp_canlink.o(.ARM.exidx.text.CAN_Send) refers to bsp_canlink.o(.text.CAN_Send) for [Anonymous Symbol]
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to can.o(.bss.hcan1) for hcan1
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to bsp_canlink.o(.bss.CAN1_RxMsg) for CAN1_RxMsg
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxMessage) for HAL_CAN_GetRxMessage
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to can_network_protocol.o(.text.Can_Network_Rx_Process) for Can_Network_Rx_Process
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to can.o(.bss.hcan2) for hcan2
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to bsp_canlink.o(.bss.CAN2_RxMsg) for CAN2_RxMsg
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to task_dcdc.o(.bss.DcdcRecvBuffer) for DcdcRecvBuffer
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to task_start.o(.bss.SemaDcdcCan) for SemaDcdcCan
    bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    bsp_canlink.o(.ARM.exidx.text.HAL_CAN_RxFifo0MsgPendingCallback) refers to bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback) for [Anonymous Symbol]
    bsp_canlink.o(.text.CanSendMsg) refers to bsp_canlink.o(.bss.CAN_TxMsg) for CAN_TxMsg
    bsp_canlink.o(.text.CanSendMsg) refers to bsp_canlink.o(.bss.ErrCnt) for ErrCnt
    bsp_canlink.o(.text.CanSendMsg) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxMailboxesFreeLevel) for HAL_CAN_GetTxMailboxesFreeLevel
    bsp_canlink.o(.text.CanSendMsg) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_AddTxMessage) for HAL_CAN_AddTxMessage
    bsp_canlink.o(.ARM.exidx.text.CanSendMsg) refers to bsp_canlink.o(.text.CanSendMsg) for [Anonymous Symbol]
    bsp_dwt.o(.ARM.exidx.text.bsp_InitDWT) refers to bsp_dwt.o(.text.bsp_InitDWT) for [Anonymous Symbol]
    bsp_dwt.o(.text.bsp_DelayMS) refers to bsp_dwt.o(.text.bsp_DelayUS) for bsp_DelayUS
    bsp_dwt.o(.ARM.exidx.text.bsp_DelayMS) refers to bsp_dwt.o(.text.bsp_DelayMS) for [Anonymous Symbol]
    bsp_dwt.o(.text.bsp_DelayUS) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    bsp_dwt.o(.ARM.exidx.text.bsp_DelayUS) refers to bsp_dwt.o(.text.bsp_DelayUS) for [Anonymous Symbol]
    bsp_mb85rs2.o(.text.MB85Ctrl_Write) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp_mb85rs2.o(.text.MB85Ctrl_Write) refers to bsp_mb85rs2.o(.text.SPI_ReadWriteByte) for SPI_ReadWriteByte
    bsp_mb85rs2.o(.text.MB85Ctrl_Write) refers to bsp_dwt.o(.text.bsp_DelayUS) for bsp_DelayUS
    bsp_mb85rs2.o(.ARM.exidx.text.MB85Ctrl_Write) refers to bsp_mb85rs2.o(.text.MB85Ctrl_Write) for [Anonymous Symbol]
    bsp_mb85rs2.o(.text.SPI_ReadWriteByte) refers to spi.o(.bss.hspi3) for hspi3
    bsp_mb85rs2.o(.text.SPI_ReadWriteByte) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    bsp_mb85rs2.o(.text.SPI_ReadWriteByte) refers to bsp_dwt.o(.text.bsp_DelayUS) for bsp_DelayUS
    bsp_mb85rs2.o(.ARM.exidx.text.SPI_ReadWriteByte) refers to bsp_mb85rs2.o(.text.SPI_ReadWriteByte) for [Anonymous Symbol]
    bsp_mb85rs2.o(.text.MB85Ctrl_Read) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp_mb85rs2.o(.text.MB85Ctrl_Read) refers to bsp_mb85rs2.o(.text.SPI_ReadWriteByte) for SPI_ReadWriteByte
    bsp_mb85rs2.o(.ARM.exidx.text.MB85Ctrl_Read) refers to bsp_mb85rs2.o(.text.MB85Ctrl_Read) for [Anonymous Symbol]
    bsp_mb85rs2.o(.text.MB85Ctrl_ReadID) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp_mb85rs2.o(.text.MB85Ctrl_ReadID) refers to bsp_mb85rs2.o(.text.SPI_ReadWriteByte) for SPI_ReadWriteByte
    bsp_mb85rs2.o(.ARM.exidx.text.MB85Ctrl_ReadID) refers to bsp_mb85rs2.o(.text.MB85Ctrl_ReadID) for [Anonymous Symbol]
    bsp_nca9555.o(.text.PCA9555_IOConfigReg) refers to iic.o(.text.i2c_Start) for i2c_Start
    bsp_nca9555.o(.text.PCA9555_IOConfigReg) refers to iic.o(.text.i2c_SendByte) for i2c_SendByte
    bsp_nca9555.o(.text.PCA9555_IOConfigReg) refers to iic.o(.text.i2c_WaitAck) for i2c_WaitAck
    bsp_nca9555.o(.text.PCA9555_IOConfigReg) refers to iic.o(.text.i2c_Stop) for i2c_Stop
    bsp_nca9555.o(.ARM.exidx.text.PCA9555_IOConfigReg) refers to bsp_nca9555.o(.text.PCA9555_IOConfigReg) for [Anonymous Symbol]
    bsp_nca9555.o(.text.PCA9555_ConfigInputReg) refers to iic.o(.text.i2c_Start) for i2c_Start
    bsp_nca9555.o(.text.PCA9555_ConfigInputReg) refers to iic.o(.text.i2c_SendByte) for i2c_SendByte
    bsp_nca9555.o(.text.PCA9555_ConfigInputReg) refers to iic.o(.text.i2c_WaitAck) for i2c_WaitAck
    bsp_nca9555.o(.text.PCA9555_ConfigInputReg) refers to iic.o(.text.i2c_Stop) for i2c_Stop
    bsp_nca9555.o(.ARM.exidx.text.PCA9555_ConfigInputReg) refers to bsp_nca9555.o(.text.PCA9555_ConfigInputReg) for [Anonymous Symbol]
    bsp_nca9555.o(.text.PCA9555_ConfigOutputReg) refers to iic.o(.text.i2c_Start) for i2c_Start
    bsp_nca9555.o(.text.PCA9555_ConfigOutputReg) refers to iic.o(.text.i2c_SendByte) for i2c_SendByte
    bsp_nca9555.o(.text.PCA9555_ConfigOutputReg) refers to iic.o(.text.i2c_WaitAck) for i2c_WaitAck
    bsp_nca9555.o(.text.PCA9555_ConfigOutputReg) refers to iic.o(.text.i2c_Stop) for i2c_Stop
    bsp_nca9555.o(.ARM.exidx.text.PCA9555_ConfigOutputReg) refers to bsp_nca9555.o(.text.PCA9555_ConfigOutputReg) for [Anonymous Symbol]
    bsp_nca9555.o(.text.Pca9555_RegRead) refers to iic.o(.text.i2c_Start) for i2c_Start
    bsp_nca9555.o(.text.Pca9555_RegRead) refers to iic.o(.text.i2c_SendByte) for i2c_SendByte
    bsp_nca9555.o(.text.Pca9555_RegRead) refers to iic.o(.text.i2c_WaitAck) for i2c_WaitAck
    bsp_nca9555.o(.text.Pca9555_RegRead) refers to iic.o(.text.i2c_Stop) for i2c_Stop
    bsp_nca9555.o(.text.Pca9555_RegRead) refers to iic.o(.text.i2c_ReadByte) for i2c_ReadByte
    bsp_nca9555.o(.text.Pca9555_RegRead) refers to iic.o(.text.i2c_Ack) for i2c_Ack
    bsp_nca9555.o(.text.Pca9555_RegRead) refers to iic.o(.text.i2c_NAck) for i2c_NAck
    bsp_nca9555.o(.ARM.exidx.text.Pca9555_RegRead) refers to bsp_nca9555.o(.text.Pca9555_RegRead) for [Anonymous Symbol]
    bsp_nca9555.o(.text.Pca9555_RegWrite) refers to iic.o(.text.i2c_Start) for i2c_Start
    bsp_nca9555.o(.text.Pca9555_RegWrite) refers to iic.o(.text.i2c_SendByte) for i2c_SendByte
    bsp_nca9555.o(.text.Pca9555_RegWrite) refers to iic.o(.text.i2c_WaitAck) for i2c_WaitAck
    bsp_nca9555.o(.text.Pca9555_RegWrite) refers to iic.o(.text.i2c_Stop) for i2c_Stop
    bsp_nca9555.o(.ARM.exidx.text.Pca9555_RegWrite) refers to bsp_nca9555.o(.text.Pca9555_RegWrite) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.SGM58601_CS_0) refers to spi.o(.bss.hspi4) for hspi4
    bsp_sgm58601.o(.text.SGM58601_CS_0) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp_sgm58601.o(.text.SGM58601_CS_0) refers to spi.o(.bss.hspi2) for hspi2
    bsp_sgm58601.o(.text.SGM58601_CS_0) refers to spi.o(.bss.hspi1) for hspi1
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_CS_0) refers to bsp_sgm58601.o(.text.SGM58601_CS_0) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.SGM58601_CS_1) refers to spi.o(.bss.hspi4) for hspi4
    bsp_sgm58601.o(.text.SGM58601_CS_1) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    bsp_sgm58601.o(.text.SGM58601_CS_1) refers to spi.o(.bss.hspi2) for hspi2
    bsp_sgm58601.o(.text.SGM58601_CS_1) refers to spi.o(.bss.hspi1) for hspi1
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_CS_1) refers to bsp_sgm58601.o(.text.SGM58601_CS_1) for [Anonymous Symbol]
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_SPI_INIT) refers to bsp_sgm58601.o(.text.SGM58601_SPI_INIT) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.SGM58601_REG_INIT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_REG_INIT) refers to bsp_sgm58601.o(.text.SGM58601_REG_INIT) for [Anonymous Symbol]
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_EXTI_INIT) refers to bsp_sgm58601.o(.text.SGM58601_EXTI_INIT) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.SGM58601_INIT) refers to bsp_sgm58601.o(.text.SGM58601_CS_0) for SGM58601_CS_0
    bsp_sgm58601.o(.text.SGM58601_INIT) refers to bsp_sgm58601.o(.text.SGM58601_REG_INIT) for SGM58601_REG_INIT
    bsp_sgm58601.o(.text.SGM58601_INIT) refers to bsp_sgm58601.o(.text.SGM58601_CS_1) for SGM58601_CS_1
    bsp_sgm58601.o(.text.SGM58601_INIT) refers to bsp_dwt.o(.text.bsp_DelayMS) for bsp_DelayMS
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_INIT) refers to bsp_sgm58601.o(.text.SGM58601_INIT) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.SGM58601_SWITCH_CH) refers to bsp_sgm58601.o(.text.SGM58601_CS_0) for SGM58601_CS_0
    bsp_sgm58601.o(.text.SGM58601_SWITCH_CH) refers to bsp_sgm58601.o(.text.ADC_SET_CHANNEL) for ADC_SET_CHANNEL
    bsp_sgm58601.o(.text.SGM58601_SWITCH_CH) refers to bsp_sgm58601.o(.text.SGM58601_CS_1) for SGM58601_CS_1
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_SWITCH_CH) refers to bsp_sgm58601.o(.text.SGM58601_SWITCH_CH) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_SET_CHANNEL) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_CHANNEL) refers to bsp_sgm58601.o(.text.ADC_SET_CHANNEL) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.SGM58601_READ_DATA) refers to bsp_sgm58601.o(.text.SGM58601_CS_0) for SGM58601_CS_0
    bsp_sgm58601.o(.text.SGM58601_READ_DATA) refers to bsp_sgm58601.o(.text.ADC_COMMAND_SET) for ADC_COMMAND_SET
    bsp_sgm58601.o(.text.SGM58601_READ_DATA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    bsp_sgm58601.o(.text.SGM58601_READ_DATA) refers to bsp_sgm58601.o(.text.SGM58601_CS_1) for SGM58601_CS_1
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_READ_DATA) refers to bsp_sgm58601.o(.text.SGM58601_READ_DATA) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_COMMAND_SET) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    bsp_sgm58601.o(.ARM.exidx.text.ADC_COMMAND_SET) refers to bsp_sgm58601.o(.text.ADC_COMMAND_SET) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.SGM58601_READ_REG) refers to bsp_sgm58601.o(.text.SGM58601_CS_0) for SGM58601_CS_0
    bsp_sgm58601.o(.text.SGM58601_READ_REG) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.SGM58601_READ_REG) refers to bsp_sgm58601.o(.text.SGM58601_CS_1) for SGM58601_CS_1
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_READ_REG) refers to bsp_sgm58601.o(.text.SGM58601_READ_REG) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) refers to bsp_dwt.o(.text.bsp_DelayUS) for bsp_DelayUS
    bsp_sgm58601.o(.ARM.exidx.text.ADC_READ_FROM_ONE_REG) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.SGM58601_WRITE_REG) refers to bsp_sgm58601.o(.text.SGM58601_CS_0) for SGM58601_CS_0
    bsp_sgm58601.o(.text.SGM58601_WRITE_REG) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.text.SGM58601_WRITE_REG) refers to bsp_sgm58601.o(.text.SGM58601_CS_1) for SGM58601_CS_1
    bsp_sgm58601.o(.ARM.exidx.text.SGM58601_WRITE_REG) refers to bsp_sgm58601.o(.text.SGM58601_WRITE_REG) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    bsp_sgm58601.o(.ARM.exidx.text.ADC_WRITE_TO_ONE_REG) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to spi.o(.bss.hspi4) for hspi4
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC1_DATA) for ADC1_DATA
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.DRDY_NUM) for DRDY_NUM
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.CONV_CNT) for CONV_CNT
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC1_DATA_SUM) for ADC1_DATA_SUM
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC1Count) for ADC1Count
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to uldiv.o(.text) for __aeabi_uldivmod
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC1_DATA_AVG) for ADC1_DATA_AVG
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to spi.o(.bss.hspi2) for hspi2
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC2_DATA) for ADC2_DATA
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC2_DATA_SUM) for ADC2_DATA_SUM
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC2Count) for ADC2Count
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC2_DATA_AVG) for ADC2_DATA_AVG
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to spi.o(.bss.hspi1) for hspi1
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC3_DATA) for ADC3_DATA
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC3_DATA_SUM) for ADC3_DATA_SUM
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC3Count) for ADC3Count
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.ADC3_DATA_AVG) for ADC3_DATA_AVG
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.bss.CurrOk) for CurrOk
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_nca9555.o(.text.Pca9555_RegRead) for Pca9555_RegRead
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.text.SGM58601_READ_DATA) for SGM58601_READ_DATA
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.text.SGM58601_SWITCH_CH) for SGM58601_SWITCH_CH
    bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    bsp_sgm58601.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    bsp_sgm58601.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to bsp_sgm58601.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    bsp_sgm58601.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to bsp_sgm58601.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_SET_PGA) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_SET_PGA) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_PGA) refers to bsp_sgm58601.o(.text.ADC_SET_PGA) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_SET_DATARATE) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_DATARATE) refers to bsp_sgm58601.o(.text.ADC_SET_DATARATE) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_SET_SDCS) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_SET_SDCS) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_SDCS) refers to bsp_sgm58601.o(.text.ADC_SET_SDCS) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_SET_CLKOUT) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_SET_CLKOUT) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_CLKOUT) refers to bsp_sgm58601.o(.text.ADC_SET_CLKOUT) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_EN_INPUTBUFFER) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_EN_INPUTBUFFER) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_EN_INPUTBUFFER) refers to bsp_sgm58601.o(.text.ADC_EN_INPUTBUFFER) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_DISABLE_INPUTBUFFER) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_DISABLE_INPUTBUFFER) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_DISABLE_INPUTBUFFER) refers to bsp_sgm58601.o(.text.ADC_DISABLE_INPUTBUFFER) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_EN_AUTOCALIBRATION) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_EN_AUTOCALIBRATION) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_EN_AUTOCALIBRATION) refers to bsp_sgm58601.o(.text.ADC_EN_AUTOCALIBRATION) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_DISABLE_AUTOCALIBRATION) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_DISABLE_AUTOCALIBRATION) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_DISABLE_AUTOCALIBRATION) refers to bsp_sgm58601.o(.text.ADC_DISABLE_AUTOCALIBRATION) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_MSB_FIRST) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_MSB_FIRST) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_MSB_FIRST) refers to bsp_sgm58601.o(.text.ADC_MSB_FIRST) for [Anonymous Symbol]
    bsp_sgm58601.o(.text.ADC_LSB_FIRST) refers to bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG) for ADC_READ_FROM_ONE_REG
    bsp_sgm58601.o(.text.ADC_LSB_FIRST) refers to bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG) for ADC_WRITE_TO_ONE_REG
    bsp_sgm58601.o(.ARM.exidx.text.ADC_LSB_FIRST) refers to bsp_sgm58601.o(.text.ADC_LSB_FIRST) for [Anonymous Symbol]
    bsp_timer.o(.ARM.exidx.text.bsp_RCC_TIM_Enable) refers to bsp_timer.o(.text.bsp_RCC_TIM_Enable) for [Anonymous Symbol]
    bsp_timer.o(.ARM.exidx.text.bsp_RCC_TIM_Disable) refers to bsp_timer.o(.text.bsp_RCC_TIM_Disable) for [Anonymous Symbol]
    bsp_timer.o(.text.bsp_SetTIMforInt) refers to memseta.o(.text) for __aeabi_memclr4
    bsp_timer.o(.text.bsp_SetTIMforInt) refers to bsp_timer.o(.text.bsp_RCC_TIM_Enable) for bsp_RCC_TIM_Enable
    bsp_timer.o(.text.bsp_SetTIMforInt) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    bsp_timer.o(.text.bsp_SetTIMforInt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    bsp_timer.o(.text.bsp_SetTIMforInt) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    bsp_timer.o(.text.bsp_SetTIMforInt) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    bsp_timer.o(.text.bsp_SetTIMforInt) refers to stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start) for HAL_TIM_Base_Start
    bsp_timer.o(.ARM.exidx.text.bsp_SetTIMforInt) refers to bsp_timer.o(.text.bsp_SetTIMforInt) for [Anonymous Symbol]
    can_network_driver.o(.text.Err_Info_Pop) refers to memseta.o(.text) for __aeabi_memclr
    can_network_driver.o(.text.Err_Info_Pop) refers to can_network_driver.o(.bss.err_buffer) for err_buffer
    can_network_driver.o(.text.Err_Info_Pop) refers to can_network_transplant.o(.text.Err_Info_Pack) for Err_Info_Pack
    can_network_driver.o(.text.Err_Info_Pop) refers to can_network_driver.o(.text.Err_Buffer_Clr) for Err_Buffer_Clr
    can_network_driver.o(.text.Err_Info_Pop) refers to can_network_transplant.o(.text.Can_Data_Pack_Send) for Can_Data_Pack_Send
    can_network_driver.o(.ARM.exidx.text.Err_Info_Pop) refers to can_network_driver.o(.text.Err_Info_Pop) for [Anonymous Symbol]
    can_network_driver.o(.text.Err_Buffer_Clr) refers to can_network_driver.o(.bss.err_buffer) for err_buffer
    can_network_driver.o(.text.Err_Buffer_Clr) refers to memseta.o(.text) for __aeabi_memclr4
    can_network_driver.o(.ARM.exidx.text.Err_Buffer_Clr) refers to can_network_driver.o(.text.Err_Buffer_Clr) for [Anonymous Symbol]
    can_network_driver.o(.text.Err_Info_Push) refers to can_network_driver.o(.bss.err_buffer) for err_buffer
    can_network_driver.o(.text.Err_Info_Push) refers to can_network_driver.o(.text.Err_Info_Pop) for Err_Info_Pop
    can_network_driver.o(.text.Err_Info_Push) refers to memcpya.o(.text) for __aeabi_memcpy
    can_network_driver.o(.ARM.exidx.text.Err_Info_Push) refers to can_network_driver.o(.text.Err_Info_Push) for [Anonymous Symbol]
    can_network_driver.o(.text.Network_Data_Pop) refers to can_network_driver.o(.text.Data_Handler_Inquiry) for Data_Handler_Inquiry
    can_network_driver.o(.text.Network_Data_Pop) refers to can_network_driver.o(.text.Err_Info_Push) for Err_Info_Push
    can_network_driver.o(.text.Network_Data_Pop) refers to memseta.o(.text) for __aeabi_memclr
    can_network_driver.o(.text.Network_Data_Pop) refers to memcpya.o(.text) for __aeabi_memcpy
    can_network_driver.o(.ARM.exidx.text.Network_Data_Pop) refers to can_network_driver.o(.text.Network_Data_Pop) for [Anonymous Symbol]
    can_network_driver.o(.ARM.exidx.text.Data_Handler_Inquiry) refers to can_network_driver.o(.text.Data_Handler_Inquiry) for [Anonymous Symbol]
    can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) refers to can_network_driver.o(.text.Err_Info_Push) for Err_Info_Push
    can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) refers to can_network_driver.o(.bss.tx_buffer) for tx_buffer
    can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) refers to can_network_driver.o(.text.Data_Handler_Request) for Data_Handler_Request
    can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) refers to can_network_driver.o(.text.Data_Handler_Inquiry) for Data_Handler_Inquiry
    can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) refers to can_network_transplant.o(.text.Can_Data_Pack_Send) for Can_Data_Pack_Send
    can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) refers to memseta.o(.text) for __aeabi_memclr
    can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) refers to memcpya.o(.text) for __aeabi_memcpy
    can_network_driver.o(.ARM.exidx.text.Network_Data_Push_Tx_Buffer) refers to can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) for [Anonymous Symbol]
    can_network_driver.o(.ARM.exidx.text.Data_Handler_Request) refers to can_network_driver.o(.text.Data_Handler_Request) for [Anonymous Symbol]
    can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) refers to can_network_driver.o(.text.Err_Info_Push) for Err_Info_Push
    can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) refers to can_network_driver.o(.bss.rx_buffer) for rx_buffer
    can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) refers to can_network_driver.o(.text.Data_Handler_Request) for Data_Handler_Request
    can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) refers to can_network_driver.o(.text.Data_Handler_Inquiry) for Data_Handler_Inquiry
    can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) refers to memseta.o(.text) for __aeabi_memclr
    can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) refers to can_network_transplant.o(.text.Can_Data_Pack_Analysis) for Can_Data_Pack_Analysis
    can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) refers to can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) for Network_Data_Push_Tx_Buffer
    can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) refers to memcpya.o(.text) for __aeabi_memcpy
    can_network_driver.o(.ARM.exidx.text.Network_Data_Push_Rx_Buffer) refers to can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) for [Anonymous Symbol]
    can_network_protocol.o(.text.Can_Network_Tx_Process) refers to memseta.o(.text) for __aeabi_memclr
    can_network_protocol.o(.text.Can_Network_Tx_Process) refers to can_network_driver.o(.bss.tx_buffer) for tx_buffer
    can_network_protocol.o(.text.Can_Network_Tx_Process) refers to can_network_driver.o(.text.Network_Data_Pop) for Network_Data_Pop
    can_network_protocol.o(.text.Can_Network_Tx_Process) refers to can_network_transplant.o(.text.Can_Data_Pack_Send) for Can_Data_Pack_Send
    can_network_protocol.o(.ARM.exidx.text.Can_Network_Tx_Process) refers to can_network_protocol.o(.text.Can_Network_Tx_Process) for [Anonymous Symbol]
    can_network_protocol.o(.text.Err_Info_Tx_Process) refers to can_network_driver.o(.text.Err_Info_Pop) for Err_Info_Pop
    can_network_protocol.o(.ARM.exidx.text.Err_Info_Tx_Process) refers to can_network_protocol.o(.text.Err_Info_Tx_Process) for [Anonymous Symbol]
    can_network_protocol.o(.text.Can_Network_Analysis_Process) refers to memseta.o(.text) for __aeabi_memclr
    can_network_protocol.o(.text.Can_Network_Analysis_Process) refers to can_network_driver.o(.bss.rx_buffer) for rx_buffer
    can_network_protocol.o(.text.Can_Network_Analysis_Process) refers to can_network_driver.o(.text.Network_Data_Pop) for Network_Data_Pop
    can_network_protocol.o(.text.Can_Network_Analysis_Process) refers to can_network_transplant.o(.text.Can_Data_Pack_Analysis) for Can_Data_Pack_Analysis
    can_network_protocol.o(.text.Can_Network_Analysis_Process) refers to can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) for Network_Data_Push_Tx_Buffer
    can_network_protocol.o(.text.Can_Network_Analysis_Process) refers to can_network_driver.o(.text.Err_Info_Push) for Err_Info_Push
    can_network_protocol.o(.ARM.exidx.text.Can_Network_Analysis_Process) refers to can_network_protocol.o(.text.Can_Network_Analysis_Process) for [Anonymous Symbol]
    can_network_protocol.o(.text.Can_Network_Rx_Timeout) refers to can_network_protocol.o(.bss.can_rx_buffer) for can_rx_buffer
    can_network_protocol.o(.text.Can_Network_Rx_Timeout) refers to can_network_driver.o(.text.Err_Info_Push) for Err_Info_Push
    can_network_protocol.o(.text.Can_Network_Rx_Timeout) refers to can_network_protocol.o(.text.Can_Rx_Buffer_Clr) for Can_Rx_Buffer_Clr
    can_network_protocol.o(.ARM.exidx.text.Can_Network_Rx_Timeout) refers to can_network_protocol.o(.text.Can_Network_Rx_Timeout) for [Anonymous Symbol]
    can_network_protocol.o(.text.Can_Rx_Buffer_Clr) refers to can_network_protocol.o(.bss.can_rx_buffer) for can_rx_buffer
    can_network_protocol.o(.text.Can_Rx_Buffer_Clr) refers to memseta.o(.text) for __aeabi_memclr4
    can_network_protocol.o(.ARM.exidx.text.Can_Rx_Buffer_Clr) refers to can_network_protocol.o(.text.Can_Rx_Buffer_Clr) for [Anonymous Symbol]
    can_network_protocol.o(.text.Can_Network_Rx_Process) refers to can_network_protocol.o(.bss.can_rx_buffer) for can_rx_buffer
    can_network_protocol.o(.text.Can_Network_Rx_Process) refers to can_network_driver.o(.text.Err_Info_Push) for Err_Info_Push
    can_network_protocol.o(.text.Can_Network_Rx_Process) refers to can_network_protocol.o(.text.Can_Rx_Buffer_Clr) for Can_Rx_Buffer_Clr
    can_network_protocol.o(.text.Can_Network_Rx_Process) refers to can_network_driver.o(.text.Network_Data_Push_Rx_Buffer) for Network_Data_Push_Rx_Buffer
    can_network_protocol.o(.ARM.exidx.text.Can_Network_Rx_Process) refers to can_network_protocol.o(.text.Can_Network_Rx_Process) for [Anonymous Symbol]
    can_network_protocol.o(.text.Can_Network_Upcast) refers to can_network_protocol.o(.data.upcast_feat_id) for upcast_feat_id
    can_network_protocol.o(.text.Can_Network_Upcast) refers to can_network_driver.o(.text.Network_Data_Push_Tx_Buffer) for Network_Data_Push_Tx_Buffer
    can_network_protocol.o(.ARM.exidx.text.Can_Network_Upcast) refers to can_network_protocol.o(.text.Can_Network_Upcast) for [Anonymous Symbol]
    can_network_protocol.o(.text.Can_Network_Func) refers to can_network_protocol.o(.text.Can_Network_Rx_Timeout) for Can_Network_Rx_Timeout
    can_network_protocol.o(.text.Can_Network_Func) refers to can_network_protocol.o(.bss.rx_analysis_cnt) for rx_analysis_cnt
    can_network_protocol.o(.text.Can_Network_Func) refers to can_network_protocol.o(.text.Can_Network_Analysis_Process) for Can_Network_Analysis_Process
    can_network_protocol.o(.text.Can_Network_Func) refers to can_network_protocol.o(.bss.tx_reply_cnt) for tx_reply_cnt
    can_network_protocol.o(.text.Can_Network_Func) refers to can_network_protocol.o(.text.Can_Network_Tx_Process) for Can_Network_Tx_Process
    can_network_protocol.o(.text.Can_Network_Func) refers to can_network_protocol.o(.bss.tx_err_cnt) for tx_err_cnt
    can_network_protocol.o(.text.Can_Network_Func) refers to can_network_protocol.o(.text.Err_Info_Tx_Process) for Err_Info_Tx_Process
    can_network_protocol.o(.ARM.exidx.text.Can_Network_Func) refers to can_network_protocol.o(.text.Can_Network_Func) for [Anonymous Symbol]
    can_network_transplant.o(.text.Can_Data_Pack_Send) refers to can.o(.bss.hcan1) for hcan1
    can_network_transplant.o(.text.Can_Data_Pack_Send) refers to can_network_transplant.o(.text.CAN_SendMultiFrames) for CAN_SendMultiFrames
    can_network_transplant.o(.ARM.exidx.text.Can_Data_Pack_Send) refers to can_network_transplant.o(.text.Can_Data_Pack_Send) for [Anonymous Symbol]
    can_network_transplant.o(.text.CAN_SendMultiFrames) refers to can_network_transplant.o(.text.CAN_SendSingleFrame) for CAN_SendSingleFrame
    can_network_transplant.o(.ARM.exidx.text.CAN_SendMultiFrames) refers to can_network_transplant.o(.text.CAN_SendMultiFrames) for [Anonymous Symbol]
    can_network_transplant.o(.text.Can_Data_Pack_Analysis) refers to task_protocol.o(.text.ProtocolDataProcess) for ProtocolDataProcess
    can_network_transplant.o(.ARM.exidx.text.Can_Data_Pack_Analysis) refers to can_network_transplant.o(.text.Can_Data_Pack_Analysis) for [Anonymous Symbol]
    can_network_transplant.o(.text.Err_Info_Pack) refers to can_network_driver.o(.bss.err_buffer) for err_buffer
    can_network_transplant.o(.text.Err_Info_Pack) refers to memcpya.o(.text) for __aeabi_memcpy
    can_network_transplant.o(.text.Err_Info_Pack) refers to task_protocol.o(.text.CRC16N) for CRC16N
    can_network_transplant.o(.ARM.exidx.text.Err_Info_Pack) refers to can_network_transplant.o(.text.Err_Info_Pack) for [Anonymous Symbol]
    can_network_transplant.o(.text.CAN_SendSingleFrame) refers to can_network_transplant.o(.bss.TxMeg) for TxMeg
    can_network_transplant.o(.text.CAN_SendSingleFrame) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxMailboxesFreeLevel) for HAL_CAN_GetTxMailboxesFreeLevel
    can_network_transplant.o(.text.CAN_SendSingleFrame) refers to can.o(.bss.hcan1) for hcan1
    can_network_transplant.o(.text.CAN_SendSingleFrame) refers to stm32f4xx_hal_can.o(.text.HAL_CAN_AddTxMessage) for HAL_CAN_AddTxMessage
    can_network_transplant.o(.ARM.exidx.text.CAN_SendSingleFrame) refers to can_network_transplant.o(.text.CAN_SendSingleFrame) for [Anonymous Symbol]
    task_init.o(.text.Tier1ToTier2) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_init.o(.text.Tier1ToTier2) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_init.o(.ARM.exidx.text.Tier1ToTier2) refers to task_init.o(.text.Tier1ToTier2) for [Anonymous Symbol]
    task_init.o(.text.Tier2ToTier1) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_init.o(.text.Tier2ToTier1) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_init.o(.ARM.exidx.text.Tier2ToTier1) refers to task_init.o(.text.Tier2ToTier1) for [Anonymous Symbol]
    task_init.o(.text.GlobalProtectDatInit) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_init.o(.text.GlobalProtectDatInit) refers to task_init.o(.text.Tier2ToTier1) for Tier2ToTier1
    task_init.o(.ARM.exidx.text.GlobalProtectDatInit) refers to task_init.o(.text.GlobalProtectDatInit) for [Anonymous Symbol]
    task_init.o(.text.InternalProtectDatInit) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_init.o(.text.InternalProtectDatInit) refers to task_init.o(.text.Tier2ToTier1) for Tier2ToTier1
    task_init.o(.ARM.exidx.text.InternalProtectDatInit) refers to task_init.o(.text.InternalProtectDatInit) for [Anonymous Symbol]
    task_init.o(.text.CalibrateDatInit) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_init.o(.text.CalibrateDatInit) refers to bsp_mb85rs2.o(.text.MB85Ctrl_Read) for MB85Ctrl_Read
    task_init.o(.text.CalibrateDatInit) refers to task_init.o(.text.Tier2ToTier1) for Tier2ToTier1
    task_init.o(.ARM.exidx.text.CalibrateDatInit) refers to task_init.o(.text.CalibrateDatInit) for [Anonymous Symbol]
    task_init.o(.text.EepromDatInit) refers to task_init.o(.text.CalibrateDatInit) for CalibrateDatInit
    task_init.o(.text.EepromDatInit) refers to task_init.o(.text.GlobalProtectDatInit) for GlobalProtectDatInit
    task_init.o(.text.EepromDatInit) refers to task_init.o(.text.InternalProtectDatInit) for InternalProtectDatInit
    task_init.o(.text.EepromDatInit) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_init.o(.ARM.exidx.text.EepromDatInit) refers to task_init.o(.text.EepromDatInit) for [Anonymous Symbol]
    task_led.o(.text.AppTaskLed) refers to task_protocol.o(.bss.clear_flag) for clear_flag
    task_led.o(.text.AppTaskLed) refers to task_workstep.o(.bss.Protect_Flag_Global) for Protect_Flag_Global
    task_led.o(.text.AppTaskLed) refers to task_workstep.o(.bss.Protect_Flag_Internal) for Protect_Flag_Internal
    task_led.o(.text.AppTaskLed) refers to task_workstep.o(.bss.Protect_Flag_Workstep) for Protect_Flag_Workstep
    task_led.o(.text.AppTaskLed) refers to task_workstep.o(.bss.workstep_flag_ErrWord) for workstep_flag_ErrWord
    task_led.o(.text.AppTaskLed) refers to task_workstep.o(.bss.protect_flag_upcast) for protect_flag_upcast
    task_led.o(.text.AppTaskLed) refers to task_protection.o(.text.AlarmClear) for AlarmClear
    task_led.o(.text.AppTaskLed) refers to task_dcdc.o(.bss.dcdc_err_flag) for dcdc_err_flag
    task_led.o(.text.AppTaskLed) refers to task_dcdc.o(.text.DcdcRunStaSet) for DcdcRunStaSet
    task_led.o(.text.AppTaskLed) refers to task_dcdc.o(.bss.DcdcCanId) for DcdcCanId
    task_led.o(.text.AppTaskLed) refers to can.o(.bss.hcan2) for hcan2
    task_led.o(.text.AppTaskLed) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_led.o(.text.AppTaskLed) refers to bsp_canlink.o(.text.CanSendMsg) for CanSendMsg
    task_led.o(.text.AppTaskLed) refers to task_led.o(.text.ReadAddr) for ReadAddr
    task_led.o(.text.AppTaskLed) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_led.o(.ARM.exidx.text.AppTaskLed) refers to task_led.o(.text.AppTaskLed) for [Anonymous Symbol]
    task_led.o(.text.ReadAddr) refers to bsp_nca9555.o(.text.Pca9555_RegRead) for Pca9555_RegRead
    task_led.o(.text.ReadAddr) refers to task_led.o(.bss.un_AddrAnalysis) for un_AddrAnalysis
    task_led.o(.text.ReadAddr) refers to task_led.o(.bss.un_DcdcIdAnalysis) for un_DcdcIdAnalysis
    task_led.o(.text.ReadAddr) refers to task_dcdc.o(.bss.DcdcCanId) for DcdcCanId
    task_led.o(.ARM.exidx.text.ReadAddr) refers to task_led.o(.text.ReadAddr) for [Anonymous Symbol]
    task_led.o(.text.ExternalAdDatProcess) refers to bsp_sgm58601.o(.bss.ADC1_DATA) for ADC1_DATA
    task_led.o(.text.ExternalAdDatProcess) refers to bsp_sgm58601.o(.bss.ADC2_DATA) for ADC2_DATA
    task_led.o(.text.ExternalAdDatProcess) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_led.o(.text.ExternalAdDatProcess) refers to task_led.o(.bss.ExternalAdDatProcess.ins_cnt) for ExternalAdDatProcess.ins_cnt
    task_led.o(.text.ExternalAdDatProcess) refers to task_led.o(.bss.ExternalAdDatProcess.sum_cnt) for ExternalAdDatProcess.sum_cnt
    task_led.o(.text.ExternalAdDatProcess) refers to task_protocol.o(.data.en_SysMode) for en_SysMode
    task_led.o(.text.ExternalAdDatProcess) refers to task_protocol.o(.bss.st_DebugParameter) for st_DebugParameter
    task_led.o(.ARM.exidx.text.ExternalAdDatProcess) refers to task_led.o(.text.ExternalAdDatProcess) for [Anonymous Symbol]
    task_protocol.o(.ARM.exidx.text.CRC16_2) refers to task_protocol.o(.text.CRC16_2) for [Anonymous Symbol]
    task_protocol.o(.text.CRC16N) refers to task_protocol.o(.text.CRC16_2) for CRC16_2
    task_protocol.o(.ARM.exidx.text.CRC16N) refers to task_protocol.o(.text.CRC16N) for [Anonymous Symbol]
    task_protocol.o(.text.GlobalProtectSetAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.GlobalProtectSetAnalysis) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_protocol.o(.text.GlobalProtectSetAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.GlobalProtectSetAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.ARM.exidx.text.GlobalProtectSetAnalysis) refers to task_protocol.o(.text.GlobalProtectSetAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.GlobalProtectInqAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.GlobalProtectInqAnalysis) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_protocol.o(.text.GlobalProtectInqAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.GlobalProtectInqAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.ARM.exidx.text.GlobalProtectInqAnalysis) refers to task_protocol.o(.text.GlobalProtectInqAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.InternalProtectSetAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.InternalProtectSetAnalysis) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_protocol.o(.text.InternalProtectSetAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.InternalProtectSetAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.ARM.exidx.text.InternalProtectSetAnalysis) refers to task_protocol.o(.text.InternalProtectSetAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.InternalProtectInqAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.InternalProtectInqAnalysis) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_protocol.o(.text.InternalProtectInqAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.InternalProtectInqAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.ARM.exidx.text.InternalProtectInqAnalysis) refers to task_protocol.o(.text.InternalProtectInqAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.RecordDatSync) refers to task_protocol.o(.bss.Tstamp) for Tstamp
    task_protocol.o(.text.RecordDatSync) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.RecordDatSync) refers to task_workstep.o(.bss.start_state_flag) for start_state_flag
    task_protocol.o(.text.RecordDatSync) refers to task_workstep.o(.bss.time_over_stop) for time_over_stop
    task_protocol.o(.text.RecordDatSync) refers to f2d.o(.text) for __aeabi_f2d
    task_protocol.o(.text.RecordDatSync) refers to dcmpge.o(.text) for __aeabi_dcmpge
    task_protocol.o(.text.RecordDatSync) refers to task_workstep.o(.bss.ProtectMaskFlag) for ProtectMaskFlag
    task_protocol.o(.text.RecordDatSync) refers to task_workstep.o(.bss.abort_type_flag) for abort_type_flag
    task_protocol.o(.ARM.exidx.text.RecordDatSync) refers to task_protocol.o(.text.RecordDatSync) for [Anonymous Symbol]
    task_protocol.o(.text.RecordInqAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.RecordInqAnalysis) refers to task_protocol.o(.text.RecordDatSync) for RecordDatSync
    task_protocol.o(.text.RecordInqAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.RecordInqAnalysis) refers to memcpya.o(.text) for __aeabi_memcpy
    task_protocol.o(.ARM.exidx.text.RecordInqAnalysis) refers to task_protocol.o(.text.RecordInqAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.RecordDatUpcast) refers to task_protocol.o(.data.upcast_enable) for upcast_enable
    task_protocol.o(.text.RecordDatUpcast) refers to memseta.o(.text) for __aeabi_memclr
    task_protocol.o(.text.RecordDatUpcast) refers to task_protocol.o(.data.ucProtocolVersion) for ucProtocolVersion
    task_protocol.o(.text.RecordDatUpcast) refers to task_protocol.o(.text.RecordDatSync) for RecordDatSync
    task_protocol.o(.text.RecordDatUpcast) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.RecordDatUpcast) refers to memcpya.o(.text) for __aeabi_memcpy
    task_protocol.o(.text.RecordDatUpcast) refers to task_protocol.o(.text.CRC16N) for CRC16N
    task_protocol.o(.text.RecordDatUpcast) refers to can_network_protocol.o(.text.Can_Network_Upcast) for Can_Network_Upcast
    task_protocol.o(.ARM.exidx.text.RecordDatUpcast) refers to task_protocol.o(.text.RecordDatUpcast) for [Anonymous Symbol]
    task_protocol.o(.text.WorkstepProtUpcast) refers to memseta.o(.text) for __aeabi_memclr
    task_protocol.o(.text.WorkstepProtUpcast) refers to task_protocol.o(.data.ucProtocolVersion) for ucProtocolVersion
    task_protocol.o(.text.WorkstepProtUpcast) refers to task_workstep.o(.bss.workstep_flag_ErrWord) for workstep_flag_ErrWord
    task_protocol.o(.text.WorkstepProtUpcast) refers to task_protocol.o(.text.CRC16N) for CRC16N
    task_protocol.o(.text.WorkstepProtUpcast) refers to can_network_protocol.o(.text.Can_Network_Upcast) for Can_Network_Upcast
    task_protocol.o(.ARM.exidx.text.WorkstepProtUpcast) refers to task_protocol.o(.text.WorkstepProtUpcast) for [Anonymous Symbol]
    task_protocol.o(.text.WorkstepSetAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.text.WorkstepSetAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.WorkstepSetAnalysis) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_protocol.o(.text.WorkstepSetAnalysis) refers to memseta.o(.text) for __aeabi_memclr
    task_protocol.o(.text.WorkstepSetAnalysis) refers to memcpya.o(.text) for __aeabi_memcpy
    task_protocol.o(.text.WorkstepSetAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.WorkstepSetAnalysis) refers to task_workstep.o(.data.AcDumpConnectFlag) for AcDumpConnectFlag
    task_protocol.o(.ARM.exidx.text.WorkstepSetAnalysis) refers to task_protocol.o(.text.WorkstepSetAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.WorkstepRunstaSetAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.text.WorkstepRunstaSetAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.WorkstepRunstaSetAnalysis) refers to task_protocol.o(.data.refresh_continue) for refresh_continue
    task_protocol.o(.text.WorkstepRunstaSetAnalysis) refers to task_workstep.o(.data.AcDumpConnectFlag) for AcDumpConnectFlag
    task_protocol.o(.text.WorkstepRunstaSetAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.WorkstepRunstaSetAnalysis) refers to task_protocol.o(.bss.workstep_flag_RunstaSet) for workstep_flag_RunstaSet
    task_protocol.o(.text.WorkstepRunstaSetAnalysis) refers to task_workstep.o(.bss.start_state_flag) for start_state_flag
    task_protocol.o(.ARM.exidx.text.WorkstepRunstaSetAnalysis) refers to task_protocol.o(.text.WorkstepRunstaSetAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.WorkstepInqAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.text.WorkstepInqAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.WorkstepInqAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.WorkstepInqAnalysis) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_protocol.o(.text.WorkstepInqAnalysis) refers to memseta.o(.text) for __aeabi_memclr
    task_protocol.o(.text.WorkstepInqAnalysis) refers to memcpya.o(.text) for __aeabi_memcpy
    task_protocol.o(.ARM.exidx.text.WorkstepInqAnalysis) refers to task_protocol.o(.text.WorkstepInqAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.CalibrateSetAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.CalibrateSetAnalysis) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_protocol.o(.text.CalibrateSetAnalysis) refers to memseta.o(.text) for __aeabi_memclr4
    task_protocol.o(.text.CalibrateSetAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.CalibrateSetAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.text.CalibrateSetAnalysis) refers to bsp_mb85rs2.o(.text.MB85Ctrl_Write) for MB85Ctrl_Write
    task_protocol.o(.ARM.exidx.text.CalibrateSetAnalysis) refers to task_protocol.o(.text.CalibrateSetAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.CalibrateInqAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.CalibrateInqAnalysis) refers to task_protocol.o(.bss.Tier1) for Tier1
    task_protocol.o(.text.CalibrateInqAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.CalibrateInqAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.ARM.exidx.text.CalibrateInqAnalysis) refers to task_protocol.o(.text.CalibrateInqAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.AdDataInqAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.AdDataInqAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.text.AdDataInqAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.ARM.exidx.text.AdDataInqAnalysis) refers to task_protocol.o(.text.AdDataInqAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.SystemInqAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.ARM.exidx.text.SystemInqAnalysis) refers to task_protocol.o(.text.SystemInqAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.bss.clear_flag) for clear_flag
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.data.heart_beat_flag) for heart_beat_flag
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.bss.Reconnection_Flg) for Reconnection_Flg
    task_protocol.o(.text.SystemSetAnalysis) refers to task_led.o(.bss.heart_beat_cnt) for heart_beat_cnt
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.data.en_SysMode) for en_SysMode
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.data.upcast_enable) for upcast_enable
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.data.data_upcast_period) for data_upcast_period
    task_protocol.o(.text.SystemSetAnalysis) refers to task_protocol.o(.bss.st_DebugParameter) for st_DebugParameter
    task_protocol.o(.ARM.exidx.text.SystemSetAnalysis) refers to task_protocol.o(.text.SystemSetAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.DebugParamSetAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.text.DebugParamSetAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.ARM.exidx.text.DebugParamSetAnalysis) refers to task_protocol.o(.text.DebugParamSetAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.DebugDataInqAnalysis) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.DebugDataInqAnalysis) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protocol.o(.text.DebugDataInqAnalysis) refers to memcpya.o(.text) for __aeabi_memcpy
    task_protocol.o(.ARM.exidx.text.DebugDataInqAnalysis) refers to task_protocol.o(.text.DebugDataInqAnalysis) for [Anonymous Symbol]
    task_protocol.o(.text.DebugSystemSetAnalysis) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.ARM.exidx.text.DebugSystemSetAnalysis) refers to task_protocol.o(.text.DebugSystemSetAnalysis) for [Anonymous Symbol]
    task_protocol.o(.ARM.exidx.text.DefaultAnalyze) refers to task_protocol.o(.text.DefaultAnalyze) for [Anonymous Symbol]
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.RecvUnpack) for RecvUnpack
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.bss.pack) for pack
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.data.ucProtocolVersion) for ucProtocolVersion
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.bss.lenAnalysis) for lenAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.SendPack) for SendPack
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.GlobalProtectSetAnalysis) for GlobalProtectSetAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.GlobalProtectInqAnalysis) for GlobalProtectInqAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.InternalProtectSetAnalysis) for InternalProtectSetAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.InternalProtectInqAnalysis) for InternalProtectInqAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.RecordInqAnalysis) for RecordInqAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.WorkstepSetAnalysis) for WorkstepSetAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.WorkstepRunstaSetAnalysis) for WorkstepRunstaSetAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.WorkstepInqAnalysis) for WorkstepInqAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.CalibrateSetAnalysis) for CalibrateSetAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.CalibrateInqAnalysis) for CalibrateInqAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.AdDataInqAnalysis) for AdDataInqAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.SystemInqAnalysis) for SystemInqAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.SystemSetAnalysis) for SystemSetAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.DebugParamSetAnalysis) for DebugParamSetAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.DebugDataInqAnalysis) for DebugDataInqAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.DebugSystemSetAnalysis) for DebugSystemSetAnalysis
    task_protocol.o(.text.ProtocolDataProcess) refers to task_protocol.o(.text.DefaultAnalyze) for DefaultAnalyze
    task_protocol.o(.ARM.exidx.text.ProtocolDataProcess) refers to task_protocol.o(.text.ProtocolDataProcess) for [Anonymous Symbol]
    task_protocol.o(.text.RecvUnpack) refers to task_protocol.o(.data.ucProtocolVersion) for ucProtocolVersion
    task_protocol.o(.text.RecvUnpack) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.RecvUnpack) refers to task_protocol.o(.text.CRC16N) for CRC16N
    task_protocol.o(.text.RecvUnpack) refers to task_protocol.o(.bss.pack) for pack
    task_protocol.o(.ARM.exidx.text.RecvUnpack) refers to task_protocol.o(.text.RecvUnpack) for [Anonymous Symbol]
    task_protocol.o(.text.SendPack) refers to task_protocol.o(.data.ucProtocolVersion) for ucProtocolVersion
    task_protocol.o(.text.SendPack) refers to task_protocol.o(.bss.pack) for pack
    task_protocol.o(.text.SendPack) refers to task_protocol.o(.bss.unpack) for unpack
    task_protocol.o(.text.SendPack) refers to task_protocol.o(.text.CRC16N) for CRC16N
    task_protocol.o(.ARM.exidx.text.SendPack) refers to task_protocol.o(.text.SendPack) for [Anonymous Symbol]
    task_start.o(.text.AppTaskStart) refers to task_init.o(.text.EepromDatInit) for EepromDatInit
    task_start.o(.text.AppTaskStart) refers to task_start.o(.text.CreateTask) for CreateTask
    task_start.o(.text.AppTaskStart) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for HAL_GPIO_TogglePin
    task_start.o(.text.AppTaskStart) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_start.o(.ARM.exidx.text.AppTaskStart) refers to task_start.o(.text.AppTaskStart) for [Anonymous Symbol]
    task_start.o(.text.CreateTask) refers to task_start.o(.rodata.DcdcCanSema_Attr) for DcdcCanSema_Attr
    task_start.o(.text.CreateTask) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    task_start.o(.text.CreateTask) refers to task_start.o(.bss.SemaDcdcCan) for SemaDcdcCan
    task_start.o(.text.CreateTask) refers to task_start.o(.rodata.ProtectionSema_Attr) for ProtectionSema_Attr
    task_start.o(.text.CreateTask) refers to task_start.o(.bss.SemaProtection) for SemaProtection
    task_start.o(.text.CreateTask) refers to task_workstep.o(.text.AppTaskWorkstep) for AppTaskWorkstep
    task_start.o(.text.CreateTask) refers to task_start.o(.rodata.ThreadWorkstep_Attr) for ThreadWorkstep_Attr
    task_start.o(.text.CreateTask) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    task_start.o(.text.CreateTask) refers to task_start.o(.bss.ThreadIdTaskWorkstep) for ThreadIdTaskWorkstep
    task_start.o(.text.CreateTask) refers to task_led.o(.text.AppTaskLed) for AppTaskLed
    task_start.o(.text.CreateTask) refers to task_start.o(.rodata.ThreadLed_Attr) for ThreadLed_Attr
    task_start.o(.text.CreateTask) refers to task_start.o(.bss.ThreadIdTaskLed) for ThreadIdTaskLed
    task_start.o(.text.CreateTask) refers to task_dcdc.o(.text.AppTaskDcdc) for AppTaskDcdc
    task_start.o(.text.CreateTask) refers to task_start.o(.rodata.ThreadDcdc_Attr) for ThreadDcdc_Attr
    task_start.o(.text.CreateTask) refers to task_start.o(.bss.ThreadIdTaskDcdc) for ThreadIdTaskDcdc
    task_start.o(.text.CreateTask) refers to task_protection.o(.text.AppTaskProtection) for AppTaskProtection
    task_start.o(.text.CreateTask) refers to task_start.o(.rodata.ThreadProtection_Attr) for ThreadProtection_Attr
    task_start.o(.text.CreateTask) refers to task_start.o(.bss.ThreadIdTaskProtection) for ThreadIdTaskProtection
    task_start.o(.ARM.exidx.text.CreateTask) refers to task_start.o(.text.CreateTask) for [Anonymous Symbol]
    task_start.o(.rodata.ThreadWorkstep_Attr) refers to task_start.o(.rodata.str1.1) for .L.str
    task_start.o(.rodata.ThreadLed_Attr) refers to task_start.o(.rodata.str1.1) for .L.str.1
    task_start.o(.rodata.ThreadDcdc_Attr) refers to task_start.o(.rodata.str1.1) for .L.str.2
    task_start.o(.rodata.ThreadProtection_Attr) refers to task_start.o(.rodata.str1.1) for .L.str.3
    task_start.o(.rodata.DcdcCanSema_Attr) refers to task_start.o(.rodata.str1.1) for .L.str.4
    task_start.o(.rodata.ProtectionSema_Attr) refers to task_start.o(.rodata.str1.1) for .L.str.5
    task_workstep.o(.text.BatteryFormattingStop) refers to task_dcdc.o(.text.DcdcRunStaSet) for DcdcRunStaSet
    task_workstep.o(.text.BatteryFormattingStop) refers to task_dcdc.o(.bss.DcdcCanId) for DcdcCanId
    task_workstep.o(.text.BatteryFormattingStop) refers to can.o(.bss.hcan2) for hcan2
    task_workstep.o(.text.BatteryFormattingStop) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_workstep.o(.text.BatteryFormattingStop) refers to bsp_canlink.o(.text.CanSendMsg) for CanSendMsg
    task_workstep.o(.text.BatteryFormattingStop) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_workstep.o(.text.BatteryFormattingStop) refers to task_workstep.o(.bss.dcdc_on_off_state) for dcdc_on_off_state
    task_workstep.o(.ARM.exidx.text.BatteryFormattingStop) refers to task_workstep.o(.text.BatteryFormattingStop) for [Anonymous Symbol]
    task_workstep.o(.ARM.exidx.text.BatteryFormattingProcess) refers to task_workstep.o(.text.BatteryFormattingProcess) for [Anonymous Symbol]
    task_workstep.o(.text.Protect_Action_Func) refers to task_protection.o(.bss.SysModeProtMaskFlag) for SysModeProtMaskFlag
    task_workstep.o(.text.Protect_Action_Func) refers to task_workstep.o(.bss.Protect_Flag_Global) for Protect_Flag_Global
    task_workstep.o(.text.Protect_Action_Func) refers to task_workstep.o(.bss.Protect_Flag_Internal) for Protect_Flag_Internal
    task_workstep.o(.text.Protect_Action_Func) refers to task_workstep.o(.bss.Protect_Flag_Workstep) for Protect_Flag_Workstep
    task_workstep.o(.text.Protect_Action_Func) refers to task_protocol.o(.text.WorkstepProtUpcast) for WorkstepProtUpcast
    task_workstep.o(.text.Protect_Action_Func) refers to task_workstep.o(.bss.Protect_Flag_ACDC) for Protect_Flag_ACDC
    task_workstep.o(.text.Protect_Action_Func) refers to task_workstep.o(.bss.protect_flag_upcast) for protect_flag_upcast
    task_workstep.o(.text.Protect_Action_Func) refers to task_workstep.o(.bss.record_data_upcast_flag) for record_data_upcast_flag
    task_workstep.o(.text.Protect_Action_Func) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_workstep.o(.text.Protect_Action_Func) refers to task_workstep.o(.data.AcDumpConnectFlag) for AcDumpConnectFlag
    task_workstep.o(.text.Protect_Action_Func) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_workstep.o(.text.Protect_Action_Func) refers to task_workstep.o(.text.BatteryFormattingStop) for BatteryFormattingStop
    task_workstep.o(.text.Protect_Action_Func) refers to memseta.o(.text) for __aeabi_memclr
    task_workstep.o(.ARM.exidx.text.Protect_Action_Func) refers to task_workstep.o(.text.Protect_Action_Func) for [Anonymous Symbol]
    task_workstep.o(.text.Workstep_Protect_Func) refers to task_dcdc.o(.bss.dcdc_err_flag) for dcdc_err_flag
    task_workstep.o(.text.Workstep_Protect_Func) refers to task_workstep.o(.bss.workstep_flag_ErrWord) for workstep_flag_ErrWord
    task_workstep.o(.text.Workstep_Protect_Func) refers to task_workstep.o(.text.Protect_Action_Func) for Protect_Action_Func
    task_workstep.o(.text.Workstep_Protect_Func) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_workstep.o(.text.Workstep_Protect_Func) refers to task_workstep.o(.bss.ProtectMaskFlag) for ProtectMaskFlag
    task_workstep.o(.text.Workstep_Protect_Func) refers to f2d.o(.text) for __aeabi_f2d
    task_workstep.o(.text.Workstep_Protect_Func) refers to d2f.o(.text) for __aeabi_d2f
    task_workstep.o(.ARM.exidx.text.Workstep_Protect_Func) refers to task_workstep.o(.text.Workstep_Protect_Func) for [Anonymous Symbol]
    task_workstep.o(.text.Workstep_Execute_Func) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_workstep.o(.bss.time_over_stop) for time_over_stop
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_workstep.o(.bss.dcdc_on_off_state) for dcdc_on_off_state
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_dcdc.o(.text.DcdcRunModeSet) for DcdcRunModeSet
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_dcdc.o(.bss.DcdcCanId) for DcdcCanId
    task_workstep.o(.text.Workstep_Execute_Func) refers to can.o(.bss.hcan2) for hcan2
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_workstep.o(.text.Workstep_Execute_Func) refers to bsp_canlink.o(.text.CanSendMsg) for CanSendMsg
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_dcdc.o(.text.DcdcProtectSet) for DcdcProtectSet
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_dcdc.o(.text.DcdcCtrlParaSet) for DcdcCtrlParaSet
    task_workstep.o(.text.Workstep_Execute_Func) refers to task_dcdc.o(.text.DcdcRunStaSet) for DcdcRunStaSet
    task_workstep.o(.ARM.exidx.text.Workstep_Execute_Func) refers to task_workstep.o(.text.Workstep_Execute_Func) for [Anonymous Symbol]
    task_workstep.o(.text.Workstep_Reload_Func) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_workstep.o(.text.Workstep_Reload_Func) refers to memseta.o(.text) for __aeabi_memclr
    task_workstep.o(.text.Workstep_Reload_Func) refers to memcpya.o(.text) for __aeabi_memcpy
    task_workstep.o(.text.Workstep_Reload_Func) refers to task_workstep.o(.data.workstep_flag_AbortPrio) for workstep_flag_AbortPrio
    task_workstep.o(.ARM.exidx.text.Workstep_Reload_Func) refers to task_workstep.o(.text.Workstep_Reload_Func) for [Anonymous Symbol]
    task_workstep.o(.text.Workstep_Switch_Func) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_workstep.o(.text.Workstep_Switch_Func) refers to task_workstep.o(.text.Workstep_Reload_Func) for Workstep_Reload_Func
    task_workstep.o(.text.Workstep_Switch_Func) refers to task_workstep.o(.bss.time_over_stop) for time_over_stop
    task_workstep.o(.text.Workstep_Switch_Func) refers to task_workstep.o(.bss.record_data_upcast_flag) for record_data_upcast_flag
    task_workstep.o(.text.Workstep_Switch_Func) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_workstep.o(.text.Workstep_Switch_Func) refers to task_workstep.o(.text.BatteryFormattingStop) for BatteryFormattingStop
    task_workstep.o(.text.Workstep_Switch_Func) refers to task_workstep.o(.bss.run_time_cnt) for run_time_cnt
    task_workstep.o(.text.Workstep_Switch_Func) refers to task_workstep.o(.text.Workstep_Execute_Func) for Workstep_Execute_Func
    task_workstep.o(.ARM.exidx.text.Workstep_Switch_Func) refers to task_workstep.o(.text.Workstep_Switch_Func) for [Anonymous Symbol]
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_protocol.o(.bss.workstep_flag_RunstaSet) for workstep_flag_RunstaSet
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.bss.ContactCheckFlag) for ContactCheckFlag
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.bss.contact_test_once_flag) for contact_test_once_flag
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.bss.record_data_upcast_flag) for record_data_upcast_flag
    task_workstep.o(.text.Workstep_Analysis_Func) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.text.BatteryFormattingStop) for BatteryFormattingStop
    task_workstep.o(.text.Workstep_Analysis_Func) refers to memseta.o(.text) for __aeabi_memclr
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.bss.start_state_flag) for start_state_flag
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.bss.VcontactPre) for VcontactPre
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.bss.run_time_cnt) for run_time_cnt
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.text.Workstep_Execute_Func) for Workstep_Execute_Func
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.text.Workstep_Reload_Func) for Workstep_Reload_Func
    task_workstep.o(.text.Workstep_Analysis_Func) refers to task_workstep.o(.text.Workstep_Switch_Func) for Workstep_Switch_Func
    task_workstep.o(.ARM.exidx.text.Workstep_Analysis_Func) refers to task_workstep.o(.text.Workstep_Analysis_Func) for [Anonymous Symbol]
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.bss.time_over_stop) for time_over_stop
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.data.workstep_flag_AbortPrio) for workstep_flag_AbortPrio
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.bss.abort_type_flag) for abort_type_flag
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.bss.ProtectMaskFlag) for ProtectMaskFlag
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.text.Workstep_Switch_Func) for Workstep_Switch_Func
    task_workstep.o(.text.Workstep_Abort_Func) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.bss.contact_test_once_flag) for contact_test_once_flag
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.text.BatteryFormattingStop) for BatteryFormattingStop
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.bss.VcontactCur) for VcontactCur
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.bss.VcontactPre) for VcontactPre
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_protection.o(.bss.GP_Alarm_Flag) for GP_Alarm_Flag
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_protocol.o(.bss.workstep_flag_RunstaSet) for workstep_flag_RunstaSet
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.bss.workstep_flag_ErrWord) for workstep_flag_ErrWord
    task_workstep.o(.text.Workstep_Abort_Func) refers to task_workstep.o(.text.Protect_Action_Func) for Protect_Action_Func
    task_workstep.o(.ARM.exidx.text.Workstep_Abort_Func) refers to task_workstep.o(.text.Workstep_Abort_Func) for [Anonymous Symbol]
    task_workstep.o(.text.channel_runsta_sync) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_workstep.o(.text.channel_runsta_sync) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_workstep.o(.text.channel_runsta_sync) refers to task_workstep.o(.text.Protect_Action_Func) for Protect_Action_Func
    task_workstep.o(.text.channel_runsta_sync) refers to task_workstep.o(.text.Workstep_Switch_Func) for Workstep_Switch_Func
    task_workstep.o(.ARM.exidx.text.channel_runsta_sync) refers to task_workstep.o(.text.channel_runsta_sync) for [Anonymous Symbol]
    task_workstep.o(.text.AppTaskWorkstep) refers to task_workstep.o(.text.Workstep_Analysis_Func) for Workstep_Analysis_Func
    task_workstep.o(.text.AppTaskWorkstep) refers to task_workstep.o(.text.Workstep_Abort_Func) for Workstep_Abort_Func
    task_workstep.o(.text.AppTaskWorkstep) refers to task_workstep.o(.text.Workstep_Protect_Func) for Workstep_Protect_Func
    task_workstep.o(.text.AppTaskWorkstep) refers to task_workstep.o(.text.channel_runsta_sync) for channel_runsta_sync
    task_workstep.o(.text.AppTaskWorkstep) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_workstep.o(.ARM.exidx.text.AppTaskWorkstep) refers to task_workstep.o(.text.AppTaskWorkstep) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcParaInq) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcParaInq) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcParaInq) refers to task_dcdc.o(.text.DcdcParaInq) for [Anonymous Symbol]
    task_dcdc.o(.ARM.exidx.text.CheckSum) refers to task_dcdc.o(.text.CheckSum) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcProtectSet) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcProtectSet) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcProtectSet) refers to task_dcdc.o(.text.DcdcProtectSet) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcRunModeSet) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcRunModeSet) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcRunModeSet) refers to task_dcdc.o(.text.DcdcRunModeSet) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcCtrlParaSet) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcCtrlParaSet) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcCtrlParaSet) refers to task_dcdc.o(.text.DcdcCtrlParaSet) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcRunStaSet) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcRunStaSet) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcRunStaSet) refers to task_dcdc.o(.text.DcdcRunStaSet) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcClibParamSet) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcClibParamSet) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcClibParamSet) refers to task_dcdc.o(.text.DcdcClibParamSet) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcAdcDataRead) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcAdcDataRead) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcAdcDataRead) refers to task_dcdc.o(.text.DcdcAdcDataRead) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcSystemSet) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcSystemSet) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcSystemSet) refers to task_dcdc.o(.text.DcdcSystemSet) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcSystemUpdate) refers to task_dcdc.o(.bss.DcdcSendFrame) for DcdcSendFrame
    task_dcdc.o(.text.DcdcSystemUpdate) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.ARM.exidx.text.DcdcSystemUpdate) refers to task_dcdc.o(.text.DcdcSystemUpdate) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcRecvHandle) refers to task_dcdc.o(.text.IsFrameValid) for IsFrameValid
    task_dcdc.o(.text.DcdcRecvHandle) refers to task_dcdc.o(.bss.DcdcRecvFrame) for DcdcRecvFrame
    task_dcdc.o(.text.DcdcRecvHandle) refers to task_dcdc.o(.data.DcdcRepHandle) for DcdcRepHandle
    task_dcdc.o(.ARM.exidx.text.DcdcRecvHandle) refers to task_dcdc.o(.text.DcdcRecvHandle) for [Anonymous Symbol]
    task_dcdc.o(.text.IsFrameValid) refers to task_dcdc.o(.bss.DcdcRecvBuffer) for DcdcRecvBuffer
    task_dcdc.o(.text.IsFrameValid) refers to task_dcdc.o(.text.CheckSum) for CheckSum
    task_dcdc.o(.text.IsFrameValid) refers to task_dcdc.o(.bss.DcdcRecvFrame) for DcdcRecvFrame
    task_dcdc.o(.ARM.exidx.text.IsFrameValid) refers to task_dcdc.o(.text.IsFrameValid) for [Anonymous Symbol]
    task_dcdc.o(.text.AppTaskDcdc) refers to task_start.o(.bss.SemaDcdcCan) for SemaDcdcCan
    task_dcdc.o(.text.AppTaskDcdc) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    task_dcdc.o(.text.AppTaskDcdc) refers to task_dcdc.o(.text.DcdcRecvHandle) for DcdcRecvHandle
    task_dcdc.o(.text.AppTaskDcdc) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_dcdc.o(.ARM.exidx.text.AppTaskDcdc) refers to task_dcdc.o(.text.AppTaskDcdc) for [Anonymous Symbol]
    task_dcdc.o(.ARM.exidx.text.DcdcSetCmdRep) refers to task_dcdc.o(.text.DcdcSetCmdRep) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcProtectInqRep) refers to task_dcdc.o(.text.Bit2ChNum) for Bit2ChNum
    task_dcdc.o(.text.DcdcProtectInqRep) refers to task_dcdc.o(.bss.DcdcParam) for DcdcParam
    task_dcdc.o(.ARM.exidx.text.DcdcProtectInqRep) refers to task_dcdc.o(.text.DcdcProtectInqRep) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcProtectTrig) refers to task_dcdc.o(.text.Bit2ChNum) for Bit2ChNum
    task_dcdc.o(.text.DcdcProtectTrig) refers to task_dcdc.o(.bss.dcdc_err_flag) for dcdc_err_flag
    task_dcdc.o(.text.DcdcProtectTrig) refers to task_dcdc.o(.bss.DcdcParam) for DcdcParam
    task_dcdc.o(.ARM.exidx.text.DcdcProtectTrig) refers to task_dcdc.o(.text.DcdcProtectTrig) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcRecordDataInqRep) refers to task_dcdc.o(.text.Bit2ChNum) for Bit2ChNum
    task_dcdc.o(.text.DcdcRecordDataInqRep) refers to task_dcdc.o(.bss.DcdcParam) for DcdcParam
    task_dcdc.o(.text.DcdcRecordDataInqRep) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_dcdc.o(.ARM.exidx.text.DcdcRecordDataInqRep) refers to task_dcdc.o(.text.DcdcRecordDataInqRep) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcCtrlParamInqRep) refers to task_dcdc.o(.text.Bit2ChNum) for Bit2ChNum
    task_dcdc.o(.text.DcdcCtrlParamInqRep) refers to task_dcdc.o(.bss.DcdcParam) for DcdcParam
    task_dcdc.o(.ARM.exidx.text.DcdcCtrlParamInqRep) refers to task_dcdc.o(.text.DcdcCtrlParamInqRep) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcClibParamInqRep) refers to task_dcdc.o(.bss.DcdcParam) for DcdcParam
    task_dcdc.o(.text.DcdcClibParamInqRep) refers to task_dcdc.o(.text.Bit2ChNum) for Bit2ChNum
    task_dcdc.o(.ARM.exidx.text.DcdcClibParamInqRep) refers to task_dcdc.o(.text.DcdcClibParamInqRep) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcAdcDataReadRep) refers to task_dcdc.o(.bss.DcdcParam) for DcdcParam
    task_dcdc.o(.text.DcdcAdcDataReadRep) refers to task_dcdc.o(.text.Bit2ChNum) for Bit2ChNum
    task_dcdc.o(.ARM.exidx.text.DcdcAdcDataReadRep) refers to task_dcdc.o(.text.DcdcAdcDataReadRep) for [Anonymous Symbol]
    task_dcdc.o(.text.DcdcSystemInqRep) refers to task_dcdc.o(.bss.DcdcParam) for DcdcParam
    task_dcdc.o(.ARM.exidx.text.DcdcSystemInqRep) refers to task_dcdc.o(.text.DcdcSystemInqRep) for [Anonymous Symbol]
    task_dcdc.o(.ARM.exidx.text.Bit2ChNum) refers to task_dcdc.o(.text.Bit2ChNum) for [Anonymous Symbol]
    task_dcdc.o(.data.DcdcRepHandle) refers to task_dcdc.o(.text.DcdcSetCmdRep) for DcdcSetCmdRep
    task_dcdc.o(.data.DcdcRepHandle) refers to task_dcdc.o(.text.DcdcProtectInqRep) for DcdcProtectInqRep
    task_dcdc.o(.data.DcdcRepHandle) refers to task_dcdc.o(.text.DcdcProtectTrig) for DcdcProtectTrig
    task_dcdc.o(.data.DcdcRepHandle) refers to task_dcdc.o(.text.DcdcRecordDataInqRep) for DcdcRecordDataInqRep
    task_dcdc.o(.data.DcdcRepHandle) refers to task_dcdc.o(.text.DcdcCtrlParamInqRep) for DcdcCtrlParamInqRep
    task_dcdc.o(.data.DcdcRepHandle) refers to task_dcdc.o(.text.DcdcClibParamInqRep) for DcdcClibParamInqRep
    task_dcdc.o(.data.DcdcRepHandle) refers to task_dcdc.o(.text.DcdcAdcDataReadRep) for DcdcAdcDataReadRep
    task_dcdc.o(.data.DcdcRepHandle) refers to task_dcdc.o(.text.DcdcSystemInqRep) for DcdcSystemInqRep
    task_protection.o(.text.IntelProtectDeviceCheck) refers to task_protection.o(.bss.SysModeProtMaskFlag) for SysModeProtMaskFlag
    task_protection.o(.text.IntelProtectDeviceCheck) refers to bsp_mb85rs2.o(.text.MB85Ctrl_ReadID) for MB85Ctrl_ReadID
    task_protection.o(.text.IntelProtectDeviceCheck) refers to task_protection.o(.bss.IP_Alarm_Flag) for IP_Alarm_Flag
    task_protection.o(.ARM.exidx.text.IntelProtectDeviceCheck) refers to task_protection.o(.text.IntelProtectDeviceCheck) for [Anonymous Symbol]
    task_protection.o(.text.IntelProtectRunParmCheck) refers to task_protection.o(.bss.SysModeProtMaskFlag) for SysModeProtMaskFlag
    task_protection.o(.text.IntelProtectRunParmCheck) refers to task_protection.o(.bss.ucIProtCntCur) for ucIProtCntCur
    task_protection.o(.text.IntelProtectRunParmCheck) refers to task_protection.o(.bss.ucIProtCntPre) for ucIProtCntPre
    task_protection.o(.text.IntelProtectRunParmCheck) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protection.o(.text.IntelProtectRunParmCheck) refers to task_workstep.o(.bss.ProtectMaskFlag) for ProtectMaskFlag
    task_protection.o(.text.IntelProtectRunParmCheck) refers to task_protection.o(.bss.IP_Alarm_Flag) for IP_Alarm_Flag
    task_protection.o(.text.IntelProtectRunParmCheck) refers to task_protocol.o(.bss.workstep_flag_CriticalZone) for workstep_flag_CriticalZone
    task_protection.o(.text.IntelProtectRunParmCheck) refers to f2d.o(.text) for __aeabi_f2d
    task_protection.o(.text.IntelProtectRunParmCheck) refers to dcmple.o(.text) for __aeabi_dcmple
    task_protection.o(.ARM.exidx.text.IntelProtectRunParmCheck) refers to task_protection.o(.text.IntelProtectRunParmCheck) for [Anonymous Symbol]
    task_protection.o(.text.GlobleProtectRunParmCheck) refers to task_protection.o(.bss.SysModeProtMaskFlag) for SysModeProtMaskFlag
    task_protection.o(.text.GlobleProtectRunParmCheck) refers to task_protection.o(.bss.ucGProtCntCur) for ucGProtCntCur
    task_protection.o(.text.GlobleProtectRunParmCheck) refers to task_protection.o(.bss.ucGProtCntPre) for ucGProtCntPre
    task_protection.o(.text.GlobleProtectRunParmCheck) refers to task_protocol.o(.bss.Tier2) for Tier2
    task_protection.o(.text.GlobleProtectRunParmCheck) refers to task_workstep.o(.bss.ProtectMaskFlag) for ProtectMaskFlag
    task_protection.o(.text.GlobleProtectRunParmCheck) refers to task_protection.o(.bss.GP_Alarm_Flag) for GP_Alarm_Flag
    task_protection.o(.ARM.exidx.text.GlobleProtectRunParmCheck) refers to task_protection.o(.text.GlobleProtectRunParmCheck) for [Anonymous Symbol]
    task_protection.o(.text.AlarmQuarry) refers to memseta.o(.text) for __aeabi_memclr
    task_protection.o(.text.AlarmQuarry) refers to task_protection.o(.text.IntelProtectRunParmCheck) for IntelProtectRunParmCheck
    task_protection.o(.text.AlarmQuarry) refers to task_protection.o(.text.GlobleProtectRunParmCheck) for GlobleProtectRunParmCheck
    task_protection.o(.text.AlarmQuarry) refers to task_protection.o(.bss.IP_Alarm_Flag) for IP_Alarm_Flag
    task_protection.o(.text.AlarmQuarry) refers to task_protection.o(.bss.features) for features
    task_protection.o(.text.AlarmQuarry) refers to task_protection.o(.data.IP_CheckList) for IP_CheckList
    task_protection.o(.text.AlarmQuarry) refers to task_protocol.o(.text.CRC16N) for CRC16N
    task_protection.o(.text.AlarmQuarry) refers to can_network_protocol.o(.text.Can_Network_Upcast) for Can_Network_Upcast
    task_protection.o(.text.AlarmQuarry) refers to task_protection.o(.bss.First_Alarm) for First_Alarm
    task_protection.o(.text.AlarmQuarry) refers to bsp_dwt.o(.text.bsp_DelayMS) for bsp_DelayMS
    task_protection.o(.text.AlarmQuarry) refers to task_protection.o(.bss.GP_Alarm_Flag) for GP_Alarm_Flag
    task_protection.o(.text.AlarmQuarry) refers to task_protection.o(.data.GP_CheckList) for GP_CheckList
    task_protection.o(.ARM.exidx.text.AlarmQuarry) refers to task_protection.o(.text.AlarmQuarry) for [Anonymous Symbol]
    task_protection.o(.text.AlarmClear) refers to task_protection.o(.bss.IP_Alarm_Flag) for IP_Alarm_Flag
    task_protection.o(.text.AlarmClear) refers to task_protection.o(.bss.IP_Alarm_Flag_History) for IP_Alarm_Flag_History
    task_protection.o(.text.AlarmClear) refers to task_protection.o(.bss.GP_Alarm_Flag) for GP_Alarm_Flag
    task_protection.o(.text.AlarmClear) refers to task_protection.o(.bss.GP_Alarm_Flag_History) for GP_Alarm_Flag_History
    task_protection.o(.ARM.exidx.text.AlarmClear) refers to task_protection.o(.text.AlarmClear) for [Anonymous Symbol]
    task_protection.o(.text.AppTaskProtection) refers to memseta.o(.text) for __aeabi_memclr
    task_protection.o(.text.AppTaskProtection) refers to task_start.o(.bss.SemaProtection) for SemaProtection
    task_protection.o(.text.AppTaskProtection) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    task_protection.o(.text.AppTaskProtection) refers to task_protocol.o(.bss.Reconnection_Flg) for Reconnection_Flg
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.text.AlarmQuarry) for AlarmQuarry
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.bss.First_Alarm) for First_Alarm
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.bss.IP_Alarm_Flag) for IP_Alarm_Flag
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.bss.IP_Alarm_Flag_History) for IP_Alarm_Flag_History
    task_protection.o(.text.AppTaskProtection) refers to task_workstep.o(.text.Protect_Action_Func) for Protect_Action_Func
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.bss.features) for features
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.data.IP_CheckList) for IP_CheckList
    task_protection.o(.text.AppTaskProtection) refers to task_protocol.o(.text.CRC16N) for CRC16N
    task_protection.o(.text.AppTaskProtection) refers to can_network_protocol.o(.text.Can_Network_Upcast) for Can_Network_Upcast
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.bss.GP_Alarm_Flag) for GP_Alarm_Flag
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.bss.GP_Alarm_Flag_History) for GP_Alarm_Flag_History
    task_protection.o(.text.AppTaskProtection) refers to task_protection.o(.data.GP_CheckList) for GP_CheckList
    task_protection.o(.text.AppTaskProtection) refers to rtx_delay.o(.text.osDelay) for osDelay
    task_protection.o(.ARM.exidx.text.AppTaskProtection) refers to task_protection.o(.text.AppTaskProtection) for [Anonymous Symbol]
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm4f.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm4f.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsIrqMode) for IsIrqMode
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsIrqMode) refers to rtx_delay.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_delay.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsIrqMode) for IsIrqMode
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_delay.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_delay.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsIrqMode) for IsIrqMode
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsIrqMode) refers to rtx_evflags.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_evflags.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsIrqMode) for IsIrqMode
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsIrqMode) for IsIrqMode
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for isrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsIrqMode) for IsIrqMode
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for EventFlagsClear
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsIrqMode) for IsIrqMode
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsIrqMode) for IsIrqMode
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for isrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsIrqMode) for IsIrqMode
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_evflags.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_evflags.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsSet) refers to rtx_evflags.o(.text.atomic_set32) for atomic_set32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxObject) refers to rtx_evflags.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_set32) refers to rtx_evflags.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsClear) refers to rtx_evflags.o(.text.atomic_clr32) for atomic_clr32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_clr32) refers to rtx_evflags.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsIrqMode) refers to rtx_kernel.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_kernel.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsPrivileged) refers to rtx_kernel.o(.text.IsPrivileged) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.1) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.osRtxKernelState) for osRtxKernelState
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsIrqMode) for IsIrqMode
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelState) refers to rtx_kernel.o(.text.osRtxKernelState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.SVC_Setup) for SVC_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm4f.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.SVC_Setup) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    rtx_kernel.o(.ARM.exidx.text.SVC_Setup) refers to rtx_kernel.o(.text.SVC_Setup) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.KernelBlock) for KernelBlock
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelBlock) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.GetPendSV) for GetPendSV
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.ClrPendSV) for ClrPendSV
    rtx_kernel.o(.ARM.exidx.text.KernelBlock) refers to rtx_kernel.o(.text.KernelBlock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.GetPendSV) refers to rtx_kernel.o(.text.GetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.ClrPendSV) refers to rtx_kernel.o(.text.ClrPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.KernelUnblock) for KernelUnblock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.text.SetPendSV) for SetPendSV
    rtx_kernel.o(.text.KernelUnblock) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.ARM.exidx.text.KernelUnblock) refers to rtx_kernel.o(.text.KernelUnblock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.SetPendSV) refers to rtx_kernel.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.1) for .L.str
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.data.irqRtxLibRef) refers to irq_cm4f.o(.constdata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemHeadPtr) refers to rtx_memory.o(.text.MemHeadPtr) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemBlockPtr) refers to rtx_memory.o(.text.MemBlockPtr) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_link_get) for atomic_link_get
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_inc32) for atomic_inc32
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_get) refers to rtx_mempool.o(.text.atomic_link_get) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_inc32) refers to rtx_mempool.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_link_put) for atomic_link_put
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_dec32) for atomic_dec32
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_put) refers to rtx_mempool.o(.text.atomic_link_put) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_dec32) refers to rtx_mempool.o(.text.atomic_dec32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsIrqMode) refers to rtx_mempool.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mempool.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for isrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for isrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsIrqMode) for IsIrqMode
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxObject) refers to rtx_mempool.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsIrqMode) refers to rtx_msgqueue.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_msgqueue.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for isrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for isrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsIrqMode) for IsIrqMode
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxObject) refers to rtx_msgqueue.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.atomic_inc32) for atomic_inc32
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32) refers to rtx_msgqueue.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for atomic_dec32_nz
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_wr8) for atomic_wr8
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8) refers to rtx_msgqueue.o(.text.atomic_wr8) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxObject) refers to rtx_mutex.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsIrqMode) for IsIrqMode
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsIrqMode) refers to rtx_mutex.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mutex.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsIrqMode) for IsIrqMode
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsIrqMode) for IsIrqMode
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsIrqMode) for IsIrqMode
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsIrqMode) for IsIrqMode
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsIrqMode) for IsIrqMode
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexId) refers to rtx_mutex.o(.text.osRtxMutexId) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsIrqMode) for IsIrqMode
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsIrqMode) refers to rtx_semaphore.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_semaphore.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsIrqMode) for IsIrqMode
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsIrqMode) for IsIrqMode
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for isrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsIrqMode) for IsIrqMode
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for isrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsIrqMode) for IsIrqMode
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsIrqMode) for IsIrqMode
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxObject) refers to rtx_semaphore.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_system.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.isr_queue_get) for isr_queue_get
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxEventFlagsObject) for osRtxEventFlagsObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxSemaphoreObject) for osRtxSemaphoreObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for osRtxMemoryPoolObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMessageObject) for osRtxMessageObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_get) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.osRtxObject) for osRtxObject
    rtx_system.o(.ARM.exidx.text.isr_queue_get) refers to rtx_system.o(.text.isr_queue_get) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_system.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject) refers to rtx_system.o(.text.osRtxEventFlagsObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject) refers to rtx_system.o(.text.osRtxSemaphoreObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMessageObject) refers to rtx_system.o(.text.osRtxMessageObject) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.isr_queue_put) for isr_queue_put
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.SetPendSV) for SetPendSV
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_put) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.ARM.exidx.text.isr_queue_put) refers to rtx_system.o(.text.isr_queue_put) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.SetPendSV) refers to rtx_system.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_system.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lim) refers to rtx_system.o(.text.atomic_inc16_lim) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxObject) refers to rtx_system.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_system.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_thread.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxObject) refers to rtx_thread.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxEventFlagsObject) for osRtxEventFlagsObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMutexObject) for osRtxMutexObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxSemaphoreObject) for osRtxSemaphoreObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMemoryPoolObject) for osRtxMemoryPoolObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMessageQueueObject) for osRtxMessageQueueObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxEventFlagsObject) refers to rtx_thread.o(.text.osRtxEventFlagsObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMutexObject) refers to rtx_thread.o(.text.osRtxMutexObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxSemaphoreObject) refers to rtx_thread.o(.text.osRtxSemaphoreObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMemoryPoolObject) refers to rtx_thread.o(.text.osRtxMemoryPoolObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMessageQueueObject) refers to rtx_thread.o(.text.osRtxMessageQueueObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.StackOffsetR0) for StackOffsetR0
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.StackOffsetR0) refers to rtx_thread.o(.text.StackOffsetR0) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_thread.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadId) refers to rtx_thread.o(.text.osRtxThreadId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.xPSR_InitVal) for xPSR_InitVal
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMode) refers to rtx_thread.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for isrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsIrqMode) for IsIrqMode
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.xPSR_InitVal) refers to rtx_thread.o(.text.xPSR_InitVal) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_thread.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_thread.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadState) for osRtxThreadState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadState) refers to rtx_thread.o(.text.osRtxThreadState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for osRtxThreadPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsSet) refers to rtx_thread.o(.text.atomic_set32) for atomic_set32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_set32) refers to rtx_thread.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for ThreadFlagsClear
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsClear) refers to rtx_thread.o(.text.atomic_clr32) for atomic_clr32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_clr32) refers to rtx_thread.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.osRtxMessageQueueId) refers to rtx_timer.o(.text.osRtxMessageQueueId) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerUnlink) for TimerUnlink
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsIrqMode) for IsIrqMode
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsIrqMode) refers to rtx_timer.o(.text.IsIrqMode) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_timer.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsIrqMode) for IsIrqMode
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsIrqMode) for IsIrqMode
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsIrqMode) for IsIrqMode
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsIrqMode) for IsIrqMode
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsIrqMode) for IsIrqMode
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerUnlink) refers to rtx_timer.o(.text.TimerUnlink) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.osRtxTimerId) refers to rtx_timer.o(.text.osRtxTimerId) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32f427xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32f427xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing startup_stm32f427xx.o(HEAP), (1024 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing can.o(.text), (0 bytes).
    Removing can.o(.ARM.exidx.text.MX_CAN1_Init), (8 bytes).
    Removing can.o(.ARM.exidx.text.MX_CAN2_Init), (8 bytes).
    Removing can.o(.ARM.exidx.text.HAL_CAN_MspInit), (8 bytes).
    Removing can.o(.text.HAL_CAN_MspDeInit), (200 bytes).
    Removing can.o(.ARM.exidx.text.HAL_CAN_MspDeInit), (8 bytes).
    Removing can.o(.bss.CAN_TxHeader), (24 bytes).
    Removing rng.o(.text), (0 bytes).
    Removing rng.o(.ARM.exidx.text.MX_RNG_Init), (8 bytes).
    Removing rng.o(.ARM.exidx.text.HAL_RNG_MspInit), (8 bytes).
    Removing rng.o(.text.HAL_RNG_MspDeInit), (44 bytes).
    Removing rng.o(.ARM.exidx.text.HAL_RNG_MspDeInit), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI1_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI2_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI3_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI4_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.HAL_SPI_MspInit), (8 bytes).
    Removing spi.o(.text.HAL_SPI_MspDeInit), (220 bytes).
    Removing spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing tim.o(.text), (0 bytes).
    Removing tim.o(.ARM.exidx.text.MX_TIM2_Init), (8 bytes).
    Removing tim.o(.ARM.exidx.text.HAL_TIM_MspPostInit), (8 bytes).
    Removing tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing tim.o(.text.HAL_TIM_PWM_MspDeInit), (38 bytes).
    Removing tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MX_USART1_UART_Init), (8 bytes).
    Removing usart.o(.ARM.exidx.text.MX_USART2_UART_Init), (8 bytes).
    Removing usart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing usart.o(.text.HAL_UART_MspDeInit), (122 bytes).
    Removing usart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f4xx_it.o(.text), (0 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.CAN1_RX0_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.CAN1_RX1_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.EXTI9_5_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.EXTI15_10_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.TIM8_TRG_COM_TIM14_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.CAN2_RX0_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.CAN2_RX1_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.TIM4_IRQHandler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.TIM5_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_msp.o(.text), (0 bytes).
    Removing stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.text), (0 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.text.HAL_SuspendTick), (20 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.text.HAL_ResumeTick), (20 bytes).
    Removing stm32f4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing iic.o(.text), (0 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_Start), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_Stop), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_SendByte), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_Ack), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_NAck), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_ReadByte), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_WaitAck), (8 bytes).
    Removing iic.o(.text.i2c_CheckDevice), (588 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_CheckDevice), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IOSwitch), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_Delay), (8 bytes).
    Removing iic.o(.data.I2C_HandleCb), (32 bytes).
    Removing stm32f4xx_hal_can.o(.text), (0 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_Init), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_MspInit), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_MspInit), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_DeInit), (76 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_DeInit), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_Stop), (148 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_Stop), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_ConfigFilter), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_Start), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_RequestSleep), (80 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RequestSleep), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_WakeUp), (146 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_WakeUp), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_IsSleepActive), (66 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_IsSleepActive), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_AddTxMessage), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_AbortTxRequest), (148 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_AbortTxRequest), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetTxMailboxesFreeLevel), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_IsTxMessagePending), (74 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_IsTxMessagePending), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxTimestamp), (78 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetTxTimestamp), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetRxMessage), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxFifoFillLevel), (84 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetRxFifoFillLevel), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_ActivateNotification), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_DeactivateNotification), (84 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_DeactivateNotification), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox0CompleteCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox0AbortCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox1CompleteCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox1AbortCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox2CompleteCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_TxMailbox2AbortCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RxFifo0FullCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0MsgPendingCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RxFifo0MsgPendingCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RxFifo1FullCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_RxFifo1MsgPendingCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_SleepCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_WakeUpFromRxMsgCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_GetState), (92 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetState), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_GetError), (12 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_GetError), (8 bytes).
    Removing stm32f4xx_hal_can.o(.text.HAL_CAN_ResetError), (74 bytes).
    Removing stm32f4xx_hal_can.o(.ARM.exidx.text.HAL_CAN_ResetError), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (210 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (330 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (40 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (1062 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (196 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (196 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (182 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (80 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (182 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (86 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit), (604 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text), (0 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program), (224 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation), (170 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte), (50 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_Byte), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord), (54 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_HalfWord), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_Program_Word), (48 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_Word), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord), (64 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_Program_DoubleWord), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program_IT), (196 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler), (420 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode), (292 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.FLASH_SetErrorCode), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_Unlock), (90 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_Lock), (20 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock), (74 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Lock), (20 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch), (28 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.text.HAL_FLASH_GetError), (12 bytes).
    Removing stm32f4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError), (8 bytes).
    Removing stm32f4xx_hal_flash.o(.bss.pFlash), (32 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase), (280 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_MassErase), (128 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_MassErase), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_Erase_Sector), (152 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_Erase_Sector), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_FlushCaches), (162 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT), (202 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram), (254 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_EnableWRP), (236 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_EnableWRP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_DisableWRP), (234 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_DisableWRP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_RDP_LevelConfig), (64 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_RDP_LevelConfig), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_UserConfig), (120 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_BOR_LevelConfig), (40 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_BOR_LevelConfig), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig), (48 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetWRP), (12 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetRDP), (74 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetUser), (16 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_GetBOR), (16 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_GetBOR), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBProgram), (122 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBProgram), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_EnablePCROP), (150 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_EnablePCROP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_DisablePCROP), (156 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_DisablePCROP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.FLASH_OB_BootConfig), (76 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_OB_BootConfig), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_AdvOBGetConfig), (50 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_AdvOBGetConfig), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_SelectPCROP), (42 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_SelectPCROP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_DeSelectPCROP), (38 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_DeSelectPCROP), (8 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OB_GetBank2WRP), (12 bytes).
    Removing stm32f4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OB_GetBank2WRP), (8 bytes).
    Removing stm32f4xx_hal_flash_ramfunc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (626 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (88 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (12 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart), (176 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig), (68 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT), (8254 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory), (48 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text), (0 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Init), (376 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam), (248 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift), (86 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit), (182 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Start), (142 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_SetConfig), (80 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT), (198 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (542 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (836 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (184 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (212 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState), (14 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError), (12 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (214 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (24 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (26 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (52 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (88 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (42 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (92 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (90 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (318 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (182 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (162 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ), (60 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (16 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.SysTick_Config), (82 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable), (34 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (144 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (42 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority), (120 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority), (68 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (52 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (66 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (52 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive), (66 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (52 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f4xx_hal.o(.text), (0 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_InitTick), (114 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DeInit), (82 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SetTickFreq), (110 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_Delay), (68 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetHalVersion), (6 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableMemorySwappingBank), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableMemorySwappingBank), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text), (0 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine), (376 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine), (276 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine), (202 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback), (52 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetHandle), (44 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_IRQHandler), (82 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_GetPending), (52 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_ClearPending), (38 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending), (8 bytes).
    Removing stm32f4xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI), (36 bytes).
    Removing stm32f4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_Init), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_MspInit), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_MspInit), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_DeInit), (88 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_DeInit), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_GenerateRandomNumber), (212 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GenerateRandomNumber), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_GenerateRandomNumber_IT), (112 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GenerateRandomNumber_IT), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_GetRandomNumber), (42 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GetRandomNumber), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_GetRandomNumber_IT), (74 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GetRandomNumber_IT), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_IRQHandler), (186 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_ReadyDataCallback), (10 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_ReadyDataCallback), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_ReadLastRandomNumber), (12 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_ReadLastRandomNumber), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_GetState), (12 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GetState), (8 bytes).
    Removing stm32f4xx_hal_rng.o(.text.HAL_RNG_GetError), (12 bytes).
    Removing stm32f4xx_hal_rng.o(.ARM.exidx.text.HAL_RNG_GetError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text), (0 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Init), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_MspInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit), (88 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit), (672 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTxTransaction), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive), (592 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction), (234 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTransaction), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT), (300 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT), (54 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT), (54 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT), (354 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT), (360 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT), (56 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT), (56 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT), (80 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT), (78 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT), (80 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT), (78 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA), (388 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt), (22 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt), (172 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAError), (52 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA), (430 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA), (562 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt), (22 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt), (168 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt), (22 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt), (138 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort), (512 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR), (40 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR), (142 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortRx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT), (568 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback), (238 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback), (202 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMARxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAPause), (78 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAPause), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAResume), (78 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAResume), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop), (128 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAStop), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler), (574 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError), (32 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAAbortOnError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_GetState), (14 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetState), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_GetError), (12 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR), (258 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRxTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR), (134 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR), (220 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_WaitFlagStateUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text), (0 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (166 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (70 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (82 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (388 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (44 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (22 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMAError), (154 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (92 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Init), (166 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (166 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start), (464 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd), (56 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (266 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (578 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (380 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (1032 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (196 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (116 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (412 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (166 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (464 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (266 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (578 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (380 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (1032 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (412 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Init), (166 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (166 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start), (574 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (238 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (686 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (350 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (1040 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMACaptureCplt), (220 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (116 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (388 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (154 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (128 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (232 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (226 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (256 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (250 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (314 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (128 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (338 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (348 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (386 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (396 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (920 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (432 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (164 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (338 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI1_SetConfig), (280 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI2_SetConfig), (108 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI3_SetConfig), (106 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI3_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI4_SetConfig), (108 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI4_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (414 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (62 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (800 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMATriggerCplt), (44 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (22 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (206 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (62 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart), (758 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (206 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (92 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (402 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_ETR_SetConfig), (52 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (420 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage), (80 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_ITRx_SetConfig), (42 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_ITRx_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage), (82 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (44 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro), (152 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig), (314 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (152 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (86 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (14 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (14 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (14 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (14 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (14 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (14 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel), (12 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_GetChannelState), (96 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text.HAL_TIM_DMABurstState), (14 bytes).
    Removing stm32f4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init), (300 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit), (128 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start), (334 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop), (104 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT), (346 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (116 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (436 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (112 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start), (406 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd), (56 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop), (210 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT), (514 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT), (342 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA), (874 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt), (196 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN), (116 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA), (330 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start), (406 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop), (210 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT), (514 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT), (342 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA), (874 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (330 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start), (186 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop), (182 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (210 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (206 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent), (188 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (188 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (230 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt), (30 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt), (30 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime), (178 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (76 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState), (14 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState), (96 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text), (0 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_Init), (158 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_LIN_Init), (184 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_Init), (204 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_DeInit), (98 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit), (350 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout), (214 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Receive), (372 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_IT), (168 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_IT), (126 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_Start_Receive_IT), (114 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA), (284 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt), (122 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt), (22 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMAError), (128 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAError), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA), (126 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA), (288 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_DMAPause), (290 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_DMAResume), (284 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_DMAStop), (212 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_EndTxTransfer), (54 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_EndTxTransfer), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle), (504 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle_IT), (230 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle_DMA), (230 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Abort), (414 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit), (190 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive), (282 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_Abort_IT), (490 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMATxAbortCallback), (90 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMARxAbortCallback), (90 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT), (198 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback), (36 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT), (294 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback), (40 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_EndTransmit_IT), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_LIN_SendBreak), (120 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode), (120 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_MultiProcessor_ExitMuteMode), (120 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_ExitMuteMode), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter), (118 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver), (118 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_GetState), (40 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.HAL_UART_GetError), (12 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt), (238 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt), (46 bytes).
    Removing stm32f4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt), (8 bytes).
    Removing system_stm32f4xx.o(.text), (0 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f4xx.o(.text.SystemCoreClockUpdate), (308 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing bsp.o(.text), (0 bytes).
    Removing bsp.o(.ARM.exidx.text.BspInit), (8 bytes).
    Removing bsp_canlink.o(.text), (0 bytes).
    Removing bsp_canlink.o(.text.crc16table), (116 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.crc16table), (8 bytes).
    Removing bsp_canlink.o(.text.CAN1_Send_Msg), (154 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.CAN1_Send_Msg), (8 bytes).
    Removing bsp_canlink.o(.text.CAN1_Receive_Msg), (118 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.CAN1_Receive_Msg), (8 bytes).
    Removing bsp_canlink.o(.text.CAN1_Send_Pack), (234 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.CAN1_Send_Pack), (8 bytes).
    Removing bsp_canlink.o(.text.ByPassSwitch), (230 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.ByPassSwitch), (8 bytes).
    Removing bsp_canlink.o(.text.PassSwitch), (178 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.PassSwitch), (8 bytes).
    Removing bsp_canlink.o(.text.SW1SW2ON), (126 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.SW1SW2ON), (8 bytes).
    Removing bsp_canlink.o(.text.CAN_Send), (594 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.CAN_Send), (8 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.HAL_CAN_RxFifo0MsgPendingCallback), (8 bytes).
    Removing bsp_canlink.o(.ARM.exidx.text.CanSendMsg), (8 bytes).
    Removing bsp_canlink.o(.bss.RxDataCAN1), (8 bytes).
    Removing bsp_canlink.o(.bss.RxBuffCAN1), (64 bytes).
    Removing bsp_canlink.o(.data.TxBuffCAN1), (256 bytes).
    Removing bsp_canlink.o(.bss.RxCount), (1 bytes).
    Removing bsp_canlink.o(.data.ID), (4 bytes).
    Removing bsp_canlink.o(.data.VsenseKB), (8 bytes).
    Removing bsp_canlink.o(.data.VtzKB), (8 bytes).
    Removing bsp_canlink.o(.data.SSwA_P_PortPin), (64 bytes).
    Removing bsp_canlink.o(.data.SSwA_N_PortPin), (64 bytes).
    Removing bsp_canlink.o(.data.SBypassA_P_PortPin), (64 bytes).
    Removing bsp_canlink.o(.data.CTR_ON_PortPin), (64 bytes).
    Removing bsp_canlink.o(.rodata.crctablehi), (256 bytes).
    Removing bsp_canlink.o(.rodata.crctablelo), (256 bytes).
    Removing bsp_canlink.o(.bss.BypassEN), (1 bytes).
    Removing bsp_canlink.o(.bss.SByPassSwitch), (1 bytes).
    Removing bsp_canlink.o(.bss.SByPassEN), (1 bytes).
    Removing bsp_canlink.o(.bss.inq1), (160 bytes).
    Removing bsp_canlink.o(.bss.KBSwitch), (1 bytes).
    Removing bsp_demo.o(.text), (0 bytes).
    Removing bsp_dwt.o(.text), (0 bytes).
    Removing bsp_dwt.o(.ARM.exidx.text.bsp_InitDWT), (8 bytes).
    Removing bsp_dwt.o(.ARM.exidx.text.bsp_DelayMS), (8 bytes).
    Removing bsp_dwt.o(.ARM.exidx.text.bsp_DelayUS), (8 bytes).
    Removing bsp_mb85rs2.o(.text), (0 bytes).
    Removing bsp_mb85rs2.o(.ARM.exidx.text.MB85Ctrl_Write), (8 bytes).
    Removing bsp_mb85rs2.o(.ARM.exidx.text.SPI_ReadWriteByte), (8 bytes).
    Removing bsp_mb85rs2.o(.ARM.exidx.text.MB85Ctrl_Read), (8 bytes).
    Removing bsp_mb85rs2.o(.text.MB85Ctrl_ReadID), (112 bytes).
    Removing bsp_mb85rs2.o(.ARM.exidx.text.MB85Ctrl_ReadID), (8 bytes).
    Removing bsp_nca9555.o(.text), (0 bytes).
    Removing bsp_nca9555.o(.ARM.exidx.text.PCA9555_IOConfigReg), (8 bytes).
    Removing bsp_nca9555.o(.text.PCA9555_ConfigInputReg), (238 bytes).
    Removing bsp_nca9555.o(.ARM.exidx.text.PCA9555_ConfigInputReg), (8 bytes).
    Removing bsp_nca9555.o(.text.PCA9555_ConfigOutputReg), (238 bytes).
    Removing bsp_nca9555.o(.ARM.exidx.text.PCA9555_ConfigOutputReg), (8 bytes).
    Removing bsp_nca9555.o(.ARM.exidx.text.Pca9555_RegRead), (8 bytes).
    Removing bsp_nca9555.o(.text.Pca9555_RegWrite), (246 bytes).
    Removing bsp_nca9555.o(.ARM.exidx.text.Pca9555_RegWrite), (8 bytes).
    Removing bsp_sgm58601.o(.text), (0 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_CS_0), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_CS_1), (8 bytes).
    Removing bsp_sgm58601.o(.text.SGM58601_SPI_INIT), (2 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_SPI_INIT), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_REG_INIT), (8 bytes).
    Removing bsp_sgm58601.o(.text.SGM58601_EXTI_INIT), (2 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_EXTI_INIT), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_INIT), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_SWITCH_CH), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_CHANNEL), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_READ_DATA), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_COMMAND_SET), (8 bytes).
    Removing bsp_sgm58601.o(.text.SGM58601_READ_REG), (54 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_READ_REG), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_READ_FROM_ONE_REG), (172 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_READ_FROM_ONE_REG), (8 bytes).
    Removing bsp_sgm58601.o(.text.SGM58601_WRITE_REG), (54 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.SGM58601_WRITE_REG), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_WRITE_TO_ONE_REG), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_SET_PGA), (76 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_PGA), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_SET_DATARATE), (38 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_DATARATE), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_SET_SDCS), (76 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_SDCS), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_SET_CLKOUT), (76 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_SET_CLKOUT), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_EN_INPUTBUFFER), (56 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_EN_INPUTBUFFER), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_DISABLE_INPUTBUFFER), (56 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_DISABLE_INPUTBUFFER), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_EN_AUTOCALIBRATION), (56 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_EN_AUTOCALIBRATION), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_DISABLE_AUTOCALIBRATION), (56 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_DISABLE_AUTOCALIBRATION), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_MSB_FIRST), (56 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_MSB_FIRST), (8 bytes).
    Removing bsp_sgm58601.o(.text.ADC_LSB_FIRST), (56 bytes).
    Removing bsp_sgm58601.o(.ARM.exidx.text.ADC_LSB_FIRST), (8 bytes).
    Removing bsp_timer.o(.text), (0 bytes).
    Removing bsp_timer.o(.ARM.exidx.text.bsp_RCC_TIM_Enable), (8 bytes).
    Removing bsp_timer.o(.text.bsp_RCC_TIM_Disable), (502 bytes).
    Removing bsp_timer.o(.ARM.exidx.text.bsp_RCC_TIM_Disable), (8 bytes).
    Removing bsp_timer.o(.ARM.exidx.text.bsp_SetTIMforInt), (8 bytes).
    Removing can_network_driver.o(.text), (0 bytes).
    Removing can_network_driver.o(.ARM.exidx.text.Err_Info_Pop), (8 bytes).
    Removing can_network_driver.o(.ARM.exidx.text.Err_Buffer_Clr), (8 bytes).
    Removing can_network_driver.o(.ARM.exidx.text.Err_Info_Push), (8 bytes).
    Removing can_network_driver.o(.ARM.exidx.text.Network_Data_Pop), (8 bytes).
    Removing can_network_driver.o(.ARM.exidx.text.Data_Handler_Inquiry), (8 bytes).
    Removing can_network_driver.o(.ARM.exidx.text.Network_Data_Push_Tx_Buffer), (8 bytes).
    Removing can_network_driver.o(.ARM.exidx.text.Data_Handler_Request), (8 bytes).
    Removing can_network_driver.o(.ARM.exidx.text.Network_Data_Push_Rx_Buffer), (8 bytes).
    Removing can_network_protocol.o(.text), (0 bytes).
    Removing can_network_protocol.o(.ARM.exidx.text.Can_Network_Tx_Process), (8 bytes).
    Removing can_network_protocol.o(.ARM.exidx.text.Err_Info_Tx_Process), (8 bytes).
    Removing can_network_protocol.o(.ARM.exidx.text.Can_Network_Analysis_Process), (8 bytes).
    Removing can_network_protocol.o(.ARM.exidx.text.Can_Network_Rx_Timeout), (8 bytes).
    Removing can_network_protocol.o(.ARM.exidx.text.Can_Rx_Buffer_Clr), (8 bytes).
    Removing can_network_protocol.o(.ARM.exidx.text.Can_Network_Rx_Process), (8 bytes).
    Removing can_network_protocol.o(.ARM.exidx.text.Can_Network_Upcast), (8 bytes).
    Removing can_network_protocol.o(.ARM.exidx.text.Can_Network_Func), (8 bytes).
    Removing can_network_transplant.o(.text), (0 bytes).
    Removing can_network_transplant.o(.ARM.exidx.text.Can_Data_Pack_Send), (8 bytes).
    Removing can_network_transplant.o(.ARM.exidx.text.CAN_SendMultiFrames), (8 bytes).
    Removing can_network_transplant.o(.ARM.exidx.text.Can_Data_Pack_Analysis), (8 bytes).
    Removing can_network_transplant.o(.ARM.exidx.text.Err_Info_Pack), (8 bytes).
    Removing can_network_transplant.o(.ARM.exidx.text.CAN_SendSingleFrame), (8 bytes).
    Removing can_network_transplant.o(.bss.RxMeg), (28 bytes).
    Removing task_init.o(.text), (0 bytes).
    Removing task_init.o(.text.Tier1ToTier2), (378 bytes).
    Removing task_init.o(.ARM.exidx.text.Tier1ToTier2), (8 bytes).
    Removing task_init.o(.ARM.exidx.text.Tier2ToTier1), (8 bytes).
    Removing task_init.o(.ARM.exidx.text.GlobalProtectDatInit), (8 bytes).
    Removing task_init.o(.ARM.exidx.text.InternalProtectDatInit), (8 bytes).
    Removing task_init.o(.ARM.exidx.text.CalibrateDatInit), (8 bytes).
    Removing task_init.o(.ARM.exidx.text.EepromDatInit), (8 bytes).
    Removing task_led.o(.text), (0 bytes).
    Removing task_led.o(.ARM.exidx.text.AppTaskLed), (8 bytes).
    Removing task_led.o(.ARM.exidx.text.ReadAddr), (8 bytes).
    Removing task_led.o(.ARM.exidx.text.ExternalAdDatProcess), (8 bytes).
    Removing task_protocol.o(.text), (0 bytes).
    Removing task_protocol.o(.ARM.exidx.text.CRC16_2), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.CRC16N), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.GlobalProtectSetAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.GlobalProtectInqAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.InternalProtectSetAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.InternalProtectInqAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.RecordDatSync), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.RecordInqAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.RecordDatUpcast), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.WorkstepProtUpcast), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.WorkstepSetAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.WorkstepRunstaSetAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.WorkstepInqAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.CalibrateSetAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.CalibrateInqAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.AdDataInqAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.SystemInqAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.SystemSetAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.DebugParamSetAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.DebugDataInqAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.DebugSystemSetAnalysis), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.DefaultAnalyze), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.ProtocolDataProcess), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.RecvUnpack), (8 bytes).
    Removing task_protocol.o(.ARM.exidx.text.SendPack), (8 bytes).
    Removing task_protocol.o(.rodata..L__const.SystemInqAnalysis.SN_CODE_TMP), (9 bytes).
    Removing task_protocol.o(.bss.SystemStatus), (4 bytes).
    Removing task_start.o(.text), (0 bytes).
    Removing task_start.o(.ARM.exidx.text.AppTaskStart), (8 bytes).
    Removing task_start.o(.ARM.exidx.text.CreateTask), (8 bytes).
    Removing task_workstep.o(.text), (0 bytes).
    Removing task_workstep.o(.ARM.exidx.text.BatteryFormattingStop), (8 bytes).
    Removing task_workstep.o(.text.BatteryFormattingProcess), (36 bytes).
    Removing task_workstep.o(.ARM.exidx.text.BatteryFormattingProcess), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.Protect_Action_Func), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.Workstep_Protect_Func), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.Workstep_Execute_Func), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.Workstep_Reload_Func), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.Workstep_Switch_Func), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.Workstep_Analysis_Func), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.Workstep_Abort_Func), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.channel_runsta_sync), (8 bytes).
    Removing task_workstep.o(.ARM.exidx.text.AppTaskWorkstep), (8 bytes).
    Removing task_workstep.o(.bss.DeviceStateFlag), (8 bytes).
    Removing task_workstep.o(.bss.DeviceStateFlagPre), (8 bytes).
    Removing task_workstep.o(.bss.ProtectMaskCnt), (32 bytes).
    Removing task_dcdc.o(.text), (0 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcParaInq), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.CheckSum), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcProtectSet), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcRunModeSet), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcCtrlParaSet), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcRunStaSet), (8 bytes).
    Removing task_dcdc.o(.text.DcdcClibParamSet), (88 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcClibParamSet), (8 bytes).
    Removing task_dcdc.o(.text.DcdcAdcDataRead), (84 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcAdcDataRead), (8 bytes).
    Removing task_dcdc.o(.text.DcdcSystemSet), (66 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcSystemSet), (8 bytes).
    Removing task_dcdc.o(.text.DcdcSystemUpdate), (78 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcSystemUpdate), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcRecvHandle), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.IsFrameValid), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.AppTaskDcdc), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcSetCmdRep), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcProtectInqRep), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcProtectTrig), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcRecordDataInqRep), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcCtrlParamInqRep), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcClibParamInqRep), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcAdcDataReadRep), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.DcdcSystemInqRep), (8 bytes).
    Removing task_dcdc.o(.ARM.exidx.text.Bit2ChNum), (8 bytes).
    Removing task_dcdc.o(.bss.AppDataBuffer), (1024 bytes).
    Removing task_dcdc.o(.bss.MaskCanId), (4 bytes).
    Removing task_protection.o(.text), (0 bytes).
    Removing task_protection.o(.text.IntelProtectDeviceCheck), (120 bytes).
    Removing task_protection.o(.ARM.exidx.text.IntelProtectDeviceCheck), (8 bytes).
    Removing task_protection.o(.ARM.exidx.text.IntelProtectRunParmCheck), (8 bytes).
    Removing task_protection.o(.ARM.exidx.text.GlobleProtectRunParmCheck), (8 bytes).
    Removing task_protection.o(.ARM.exidx.text.AlarmQuarry), (8 bytes).
    Removing task_protection.o(.ARM.exidx.text.AlarmClear), (8 bytes).
    Removing task_protection.o(.ARM.exidx.text.AppTaskProtection), (8 bytes).
    Removing task_protection.o(.bss.Protect_Alarm), (8 bytes).
    Removing irq_cm4f.o(.constdata), (1 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (88 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (100 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (90 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.IsIrqMode), (20 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_evflags.o(.text.IsIrqMasked), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (82 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (98 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsSet), (104 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (98 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (76 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (70 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (130 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsWait), (140 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (90 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (292 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (108 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsCheck), (130 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_all), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_any), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (70 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsId), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsSet), (26 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxObject), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_set32), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (230 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsClear), (26 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_clr32), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (218 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (202 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetState), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSet), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSetDone), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWait), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (18 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (14 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (14 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (14 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexCreated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexAcquire), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexAcquirePending), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.IsPrivileged), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsPrivileged), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (114 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetState), (72 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetState), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (88 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (72 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (62 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (30 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (62 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (30 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (62 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (76 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (62 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osRtxKernelState), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (94 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (94 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (134 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (144 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.KernelBlock), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelBlock), (8 bytes).
    Removing rtx_kernel.o(.text.GetPendSV), (18 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.ClrPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.ClrPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (324 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.KernelUnblock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelUnblock), (8 bytes).
    Removing rtx_kernel.o(.text.SetPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemHeadPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemBlockPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_get), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_put), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_dec32), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (118 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.IsIrqMode), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_mempool.o(.text.IsIrqMasked), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (82 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolAlloc), (106 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolFree), (114 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (76 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (76 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (76 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (76 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (78 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (90 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (644 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxObject), (10 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolId), (10 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (166 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (166 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (234 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (82 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (76 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (70 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (76 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (70 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (76 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (70 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (76 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (78 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (90 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (90 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (70 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (308 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (234 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (90 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.IsIrqMode), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_mutex.o(.text.IsIrqMasked), (48 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (82 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (104 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (90 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (82 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (90 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (300 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (70 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexId), (10 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexId), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexAcquire), (384 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexRelease), (430 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (96 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (382 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (82 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (76 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (70 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (90 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (70 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (202 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_get), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMessageObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_put), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lim), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxEventFlagsObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMutexObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxSemaphoreObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMemoryPoolObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMessageQueueObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.StackOffsetR0), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (62 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (98 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.isrRtxThreadFlagsSet), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (118 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.xPSR_InitVal), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (78 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (184 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (162 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (106 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPriority), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (264 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (118 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (144 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (66 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (226 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (390 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (134 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (332 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsSet), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.atomic_set32), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (224 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsClear), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.atomic_clr32), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (198 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxMessageQueueId), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (148 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.IsIrqMode), (20 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsIrqMode), (8 bytes).
    Removing rtx_timer.o(.text.IsIrqMasked), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (82 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (104 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (90 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (82 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (90 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerUnlink), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (364 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (70 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerId), (10 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerId), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (154 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (108 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (102 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (168 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (32 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).

2094 unused section(s) (total 114309 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmple.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpge.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    Bsp.c                                    0x00000000   Number         0  bsp.o ABSOLUTE
    Bsp_CanLink.c                            0x00000000   Number         0  bsp_canlink.o ABSOLUTE
    Bsp_Demo.c                               0x00000000   Number         0  bsp_demo.o ABSOLUTE
    Bsp_Dwt.c                                0x00000000   Number         0  bsp_dwt.o ABSOLUTE
    Bsp_MB85RS2.c                            0x00000000   Number         0  bsp_mb85rs2.o ABSOLUTE
    Bsp_NCA9555.c                            0x00000000   Number         0  bsp_nca9555.o ABSOLUTE
    Bsp_SGM58601.c                           0x00000000   Number         0  bsp_sgm58601.o ABSOLUTE
    Bsp_Timer.c                              0x00000000   Number         0  bsp_timer.o ABSOLUTE
    Can_Network_Driver.c                     0x00000000   Number         0  can_network_driver.o ABSOLUTE
    Can_Network_Protocol.c                   0x00000000   Number         0  can_network_protocol.o ABSOLUTE
    Can_Network_Transplant.c                 0x00000000   Number         0  can_network_transplant.o ABSOLUTE
    E:/Arm/Packs/ARM/CMSIS/5.7.0/CMSIS/RTOS2/RTX/Source/ARM/irq_cm4f.s 0x00000000   Number         0  irq_cm4f.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    Task_Dcdc.c                              0x00000000   Number         0  task_dcdc.o ABSOLUTE
    Task_Init.c                              0x00000000   Number         0  task_init.o ABSOLUTE
    Task_Led.c                               0x00000000   Number         0  task_led.o ABSOLUTE
    Task_Protection.c                        0x00000000   Number         0  task_protection.o ABSOLUTE
    Task_Protocol.c                          0x00000000   Number         0  task_protocol.o ABSOLUTE
    Task_Start.c                             0x00000000   Number         0  task_start.o ABSOLUTE
    Task_Workstep.c                          0x00000000   Number         0  task_workstep.o ABSOLUTE
    can.c                                    0x00000000   Number         0  can.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    iic.c                                    0x00000000   Number         0  iic.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rng.c                                    0x00000000   Number         0  rng.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    spi.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    startup_stm32f427xx.s                    0x00000000   Number         0  startup_stm32f427xx.o ABSOLUTE
    stm32f4xx_hal.c                          0x00000000   Number         0  stm32f4xx_hal.o ABSOLUTE
    stm32f4xx_hal_can.c                      0x00000000   Number         0  stm32f4xx_hal_can.o ABSOLUTE
    stm32f4xx_hal_cortex.c                   0x00000000   Number         0  stm32f4xx_hal_cortex.o ABSOLUTE
    stm32f4xx_hal_dma.c                      0x00000000   Number         0  stm32f4xx_hal_dma.o ABSOLUTE
    stm32f4xx_hal_dma_ex.c                   0x00000000   Number         0  stm32f4xx_hal_dma_ex.o ABSOLUTE
    stm32f4xx_hal_exti.c                     0x00000000   Number         0  stm32f4xx_hal_exti.o ABSOLUTE
    stm32f4xx_hal_flash.c                    0x00000000   Number         0  stm32f4xx_hal_flash.o ABSOLUTE
    stm32f4xx_hal_flash_ex.c                 0x00000000   Number         0  stm32f4xx_hal_flash_ex.o ABSOLUTE
    stm32f4xx_hal_flash_ramfunc.c            0x00000000   Number         0  stm32f4xx_hal_flash_ramfunc.o ABSOLUTE
    stm32f4xx_hal_gpio.c                     0x00000000   Number         0  stm32f4xx_hal_gpio.o ABSOLUTE
    stm32f4xx_hal_msp.c                      0x00000000   Number         0  stm32f4xx_hal_msp.o ABSOLUTE
    stm32f4xx_hal_pwr.c                      0x00000000   Number         0  stm32f4xx_hal_pwr.o ABSOLUTE
    stm32f4xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f4xx_hal_pwr_ex.o ABSOLUTE
    stm32f4xx_hal_rcc.c                      0x00000000   Number         0  stm32f4xx_hal_rcc.o ABSOLUTE
    stm32f4xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f4xx_hal_rcc_ex.o ABSOLUTE
    stm32f4xx_hal_rng.c                      0x00000000   Number         0  stm32f4xx_hal_rng.o ABSOLUTE
    stm32f4xx_hal_spi.c                      0x00000000   Number         0  stm32f4xx_hal_spi.o ABSOLUTE
    stm32f4xx_hal_tim.c                      0x00000000   Number         0  stm32f4xx_hal_tim.o ABSOLUTE
    stm32f4xx_hal_tim_ex.c                   0x00000000   Number         0  stm32f4xx_hal_tim_ex.o ABSOLUTE
    stm32f4xx_hal_timebase_tim.c             0x00000000   Number         0  stm32f4xx_hal_timebase_tim.o ABSOLUTE
    stm32f4xx_hal_uart.c                     0x00000000   Number         0  stm32f4xx_hal_uart.o ABSOLUTE
    stm32f4xx_it.c                           0x00000000   Number         0  stm32f4xx_it.o ABSOLUTE
    system_stm32f4xx.c                       0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    tim.c                                    0x00000000   Number         0  tim.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    RESET                                    0x08000000   Section      428  startup_stm32f427xx.o(RESET)
    .ARM.Collect$$$$00000000                 0x080001ac   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080001ac   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080001b0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080001b4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080001b4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080001b4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080001bc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080001bc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080001bc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080001bc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x080001c0   Number         0  startup_stm32f427xx.o(.text)
    .text                                    0x080001c0   Section       36  startup_stm32f427xx.o(.text)
    $v0                                      0x080001e4   Number         0  irq_cm4f.o(.text)
    .text                                    0x080001e4   Section      196  irq_cm4f.o(.text)
    .text                                    0x080002a8   Section        0  uldiv.o(.text)
    .text                                    0x0800030a   Section        0  ldiv.o(.text)
    .text                                    0x0800036c   Section        0  memcpya.o(.text)
    .text                                    0x08000390   Section        0  memseta.o(.text)
    .text                                    0x080003b4   Section        0  dadd.o(.text)
    .text                                    0x08000502   Section        0  dmul.o(.text)
    .text                                    0x080005e6   Section        0  ddiv.o(.text)
    .text                                    0x080006c4   Section        0  dcmple.o(.text)
    .text                                    0x080006fa   Section        0  dcmpge.o(.text)
    .text                                    0x08000730   Section        0  ffixul.o(.text)
    .text                                    0x0800075c   Section        0  f2d.o(.text)
    .text                                    0x08000782   Section        0  d2f.o(.text)
    .text                                    0x080007ba   Section        0  llshl.o(.text)
    .text                                    0x080007d8   Section        0  llushr.o(.text)
    .text                                    0x080007f8   Section        0  llsshr.o(.text)
    .text                                    0x0800081c   Section        0  iusefp.o(.text)
    .text                                    0x0800081c   Section        0  fepilogue.o(.text)
    .text                                    0x0800088a   Section        0  depilogue.o(.text)
    .text                                    0x08000944   Section       36  init.o(.text)
    .text                                    0x08000968   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x080009c0   Section        0  bsp_sgm58601.o(.text.ADC_COMMAND_SET)
    [Anonymous Symbol]                       0x080009fc   Section        0  bsp_sgm58601.o(.text.ADC_SET_CHANNEL)
    [Anonymous Symbol]                       0x08000a34   Section        0  bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG)
    [Anonymous Symbol]                       0x08000ae4   Section        0  task_protocol.o(.text.AdDataInqAnalysis)
    [Anonymous Symbol]                       0x08000c34   Section        0  task_protection.o(.text.AlarmClear)
    [Anonymous Symbol]                       0x08000ca4   Section        0  task_protection.o(.text.AlarmQuarry)
    [Anonymous Symbol]                       0x08000fb4   Section        0  task_dcdc.o(.text.AppTaskDcdc)
    [Anonymous Symbol]                       0x08000fe8   Section        0  task_led.o(.text.AppTaskLed)
    [Anonymous Symbol]                       0x080010cc   Section        0  task_protection.o(.text.AppTaskProtection)
    [Anonymous Symbol]                       0x080015b4   Section        0  task_start.o(.text.AppTaskStart)
    [Anonymous Symbol]                       0x08001604   Section        0  task_workstep.o(.text.AppTaskWorkstep)
    [Anonymous Symbol]                       0x08001640   Section        0  task_workstep.o(.text.BatteryFormattingStop)
    Bit2ChNum                                0x08001691   Thumb Code    80  task_dcdc.o(.text.Bit2ChNum)
    [Anonymous Symbol]                       0x08001690   Section        0  task_dcdc.o(.text.Bit2ChNum)
    [Anonymous Symbol]                       0x080016e0   Section        0  bsp.o(.text.BspInit)
    [Anonymous Symbol]                       0x080017d0   Section        0  stm32f4xx_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x080017d4   Section        0  stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler)
    [Anonymous Symbol]                       0x080017e4   Section        0  stm32f4xx_it.o(.text.CAN1_RX1_IRQHandler)
    [Anonymous Symbol]                       0x080017f4   Section        0  stm32f4xx_it.o(.text.CAN2_RX0_IRQHandler)
    [Anonymous Symbol]                       0x08001804   Section        0  stm32f4xx_it.o(.text.CAN2_RX1_IRQHandler)
    [Anonymous Symbol]                       0x08001814   Section        0  can_network_transplant.o(.text.CAN_SendMultiFrames)
    [Anonymous Symbol]                       0x080018a8   Section        0  can_network_transplant.o(.text.CAN_SendSingleFrame)
    [Anonymous Symbol]                       0x08001938   Section        0  task_protocol.o(.text.CRC16N)
    [Anonymous Symbol]                       0x08001990   Section        0  task_protocol.o(.text.CRC16_2)
    [Anonymous Symbol]                       0x08001a04   Section        0  task_init.o(.text.CalibrateDatInit)
    [Anonymous Symbol]                       0x08001a48   Section        0  task_protocol.o(.text.CalibrateInqAnalysis)
    [Anonymous Symbol]                       0x08001c14   Section        0  task_protocol.o(.text.CalibrateSetAnalysis)
    [Anonymous Symbol]                       0x08001f3c   Section        0  bsp_canlink.o(.text.CanSendMsg)
    [Anonymous Symbol]                       0x08001fb8   Section        0  can_network_transplant.o(.text.Can_Data_Pack_Analysis)
    [Anonymous Symbol]                       0x08001ff0   Section        0  can_network_transplant.o(.text.Can_Data_Pack_Send)
    [Anonymous Symbol]                       0x08002058   Section        0  can_network_protocol.o(.text.Can_Network_Analysis_Process)
    [Anonymous Symbol]                       0x08002148   Section        0  can_network_protocol.o(.text.Can_Network_Func)
    [Anonymous Symbol]                       0x08002284   Section        0  can_network_protocol.o(.text.Can_Network_Rx_Process)
    [Anonymous Symbol]                       0x08002740   Section        0  can_network_protocol.o(.text.Can_Network_Rx_Timeout)
    [Anonymous Symbol]                       0x08002834   Section        0  can_network_protocol.o(.text.Can_Network_Tx_Process)
    [Anonymous Symbol]                       0x08002890   Section        0  can_network_protocol.o(.text.Can_Network_Upcast)
    Can_Rx_Buffer_Clr                        0x080028f9   Thumb Code    54  can_network_protocol.o(.text.Can_Rx_Buffer_Clr)
    [Anonymous Symbol]                       0x080028f8   Section        0  can_network_protocol.o(.text.Can_Rx_Buffer_Clr)
    CheckSum                                 0x08002931   Thumb Code    80  task_dcdc.o(.text.CheckSum)
    [Anonymous Symbol]                       0x08002930   Section        0  task_dcdc.o(.text.CheckSum)
    [Anonymous Symbol]                       0x08002980   Section        0  task_start.o(.text.CreateTask)
    Data_Handler_Inquiry                     0x08002a41   Thumb Code    90  can_network_driver.o(.text.Data_Handler_Inquiry)
    [Anonymous Symbol]                       0x08002a40   Section        0  can_network_driver.o(.text.Data_Handler_Inquiry)
    Data_Handler_Request                     0x08002a9d   Thumb Code   146  can_network_driver.o(.text.Data_Handler_Request)
    [Anonymous Symbol]                       0x08002a9c   Section        0  can_network_driver.o(.text.Data_Handler_Request)
    DcdcAdcDataReadRep                       0x08002b31   Thumb Code   102  task_dcdc.o(.text.DcdcAdcDataReadRep)
    [Anonymous Symbol]                       0x08002b30   Section        0  task_dcdc.o(.text.DcdcAdcDataReadRep)
    DcdcClibParamInqRep                      0x08002b99   Thumb Code   100  task_dcdc.o(.text.DcdcClibParamInqRep)
    [Anonymous Symbol]                       0x08002b98   Section        0  task_dcdc.o(.text.DcdcClibParamInqRep)
    [Anonymous Symbol]                       0x08002bfc   Section        0  task_dcdc.o(.text.DcdcCtrlParaSet)
    DcdcCtrlParamInqRep                      0x08002c89   Thumb Code   146  task_dcdc.o(.text.DcdcCtrlParamInqRep)
    [Anonymous Symbol]                       0x08002c88   Section        0  task_dcdc.o(.text.DcdcCtrlParamInqRep)
    [Anonymous Symbol]                       0x08002d1c   Section        0  task_dcdc.o(.text.DcdcParaInq)
    DcdcProtectInqRep                        0x08002d85   Thumb Code   110  task_dcdc.o(.text.DcdcProtectInqRep)
    [Anonymous Symbol]                       0x08002d84   Section        0  task_dcdc.o(.text.DcdcProtectInqRep)
    [Anonymous Symbol]                       0x08002df4   Section        0  task_dcdc.o(.text.DcdcProtectSet)
    DcdcProtectTrig                          0x08002e4d   Thumb Code   144  task_dcdc.o(.text.DcdcProtectTrig)
    [Anonymous Symbol]                       0x08002e4c   Section        0  task_dcdc.o(.text.DcdcProtectTrig)
    DcdcRecordDataInqRep                     0x08002edd   Thumb Code   600  task_dcdc.o(.text.DcdcRecordDataInqRep)
    [Anonymous Symbol]                       0x08002edc   Section        0  task_dcdc.o(.text.DcdcRecordDataInqRep)
    [Anonymous Symbol]                       0x08003134   Section        0  task_dcdc.o(.text.DcdcRecvHandle)
    [Anonymous Symbol]                       0x08003184   Section        0  task_dcdc.o(.text.DcdcRunModeSet)
    [Anonymous Symbol]                       0x080031dc   Section        0  task_dcdc.o(.text.DcdcRunStaSet)
    DcdcSetCmdRep                            0x08003231   Thumb Code    26  task_dcdc.o(.text.DcdcSetCmdRep)
    [Anonymous Symbol]                       0x08003230   Section        0  task_dcdc.o(.text.DcdcSetCmdRep)
    DcdcSystemInqRep                         0x0800324d   Thumb Code    54  task_dcdc.o(.text.DcdcSystemInqRep)
    [Anonymous Symbol]                       0x0800324c   Section        0  task_dcdc.o(.text.DcdcSystemInqRep)
    [Anonymous Symbol]                       0x08003284   Section        0  task_protocol.o(.text.DebugDataInqAnalysis)
    [Anonymous Symbol]                       0x080033fc   Section        0  stm32f4xx_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08003400   Section        0  task_protocol.o(.text.DebugParamSetAnalysis)
    [Anonymous Symbol]                       0x080034d0   Section        0  task_protocol.o(.text.DebugSystemSetAnalysis)
    [Anonymous Symbol]                       0x08003588   Section        0  task_protocol.o(.text.DefaultAnalyze)
    [Anonymous Symbol]                       0x080035b0   Section        0  stm32f4xx_it.o(.text.EXTI15_10_IRQHandler)
    [Anonymous Symbol]                       0x080035cc   Section        0  stm32f4xx_it.o(.text.EXTI9_5_IRQHandler)
    [Anonymous Symbol]                       0x080035e8   Section        0  task_init.o(.text.EepromDatInit)
    Err_Buffer_Clr                           0x08003675   Thumb Code    54  can_network_driver.o(.text.Err_Buffer_Clr)
    [Anonymous Symbol]                       0x08003674   Section        0  can_network_driver.o(.text.Err_Buffer_Clr)
    [Anonymous Symbol]                       0x080036ac   Section        0  can_network_transplant.o(.text.Err_Info_Pack)
    [Anonymous Symbol]                       0x080037d0   Section        0  can_network_driver.o(.text.Err_Info_Pop)
    [Anonymous Symbol]                       0x08003884   Section        0  can_network_driver.o(.text.Err_Info_Push)
    [Anonymous Symbol]                       0x0800393c   Section        0  can_network_protocol.o(.text.Err_Info_Tx_Process)
    [Anonymous Symbol]                       0x08003944   Section        0  main.o(.text.Error_Handler)
    [Anonymous Symbol]                       0x08003954   Section        0  rtx_evr.o(.text.EvrRtxDelay)
    [Anonymous Symbol]                       0x0800395c   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x08003964   Section        0  rtx_evr.o(.text.EvrRtxDelayError)
    [Anonymous Symbol]                       0x0800396c   Section        0  rtx_evr.o(.text.EvrRtxDelayStarted)
    [Anonymous Symbol]                       0x08003974   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x0800397c   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x08003984   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x08003988   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x0800398c   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x08003990   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x08003994   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x080039a4   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x080039b0   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x080039bc   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x080039cc   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x080039d8   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x080039e4   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x080039ec   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x080039f8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x08003a04   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08003a14   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x08003a20   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x08003a28   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x08003a34   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x08003a40   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08003a4c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x08003a58   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x08003a64   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08003a78   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x08003a84   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x08003a8c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x08003a98   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x08003aa0   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x08003aac   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x08003ab8   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x08003ac4   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    [Anonymous Symbol]                       0x08003ad0   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x08003ad8   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    [Anonymous Symbol]                       0x08003ae4   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    [Anonymous Symbol]                       0x08003af0   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreError)
    [Anonymous Symbol]                       0x08003afc   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    [Anonymous Symbol]                       0x08003b08   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    [Anonymous Symbol]                       0x08003b10   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08003b18   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    [Anonymous Symbol]                       0x08003b24   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x08003b30   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x08003b3c   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x08003b44   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x08003b50   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x08003b54   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x08003b64   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08003b6c   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x08003b74   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x08003b80   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x08003b88   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x08003b90   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x08003b9c   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x08003ba8   Section        0  task_led.o(.text.ExternalAdDatProcess)
    __arm_cp.2_1                             0x080040a4   Number         4  task_led.o(.text.ExternalAdDatProcess)
    [Anonymous Symbol]                       0x08004114   Section        0  task_init.o(.text.GlobalProtectDatInit)
    [Anonymous Symbol]                       0x080042bc   Section        0  task_protocol.o(.text.GlobalProtectInqAnalysis)
    [Anonymous Symbol]                       0x0800451c   Section        0  task_protocol.o(.text.GlobalProtectSetAnalysis)
    [Anonymous Symbol]                       0x08004928   Section        0  task_protection.o(.text.GlobleProtectRunParmCheck)
    [Anonymous Symbol]                       0x08004f54   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_ActivateNotification)
    [Anonymous Symbol]                       0x08004fa8   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_AddTxMessage)
    [Anonymous Symbol]                       0x08005120   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_ConfigFilter)
    [Anonymous Symbol]                       0x080052d4   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_ErrorCallback)
    [Anonymous Symbol]                       0x080052dc   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxMessage)
    [Anonymous Symbol]                       0x080054d8   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxMailboxesFreeLevel)
    [Anonymous Symbol]                       0x08005548   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler)
    [Anonymous Symbol]                       0x0800594c   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_Init)
    [Anonymous Symbol]                       0x08005b3c   Section        0  can.o(.text.HAL_CAN_MspInit)
    [Anonymous Symbol]                       0x08005ce0   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0FullCallback)
    [Anonymous Symbol]                       0x08005ce8   Section        0  bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback)
    [Anonymous Symbol]                       0x08005dec   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1FullCallback)
    [Anonymous Symbol]                       0x08005df4   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1MsgPendingCallback)
    [Anonymous Symbol]                       0x08005dfc   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_SleepCallback)
    [Anonymous Symbol]                       0x08005e04   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_Start)
    [Anonymous Symbol]                       0x08005e90   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0AbortCallback)
    [Anonymous Symbol]                       0x08005e98   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0CompleteCallback)
    [Anonymous Symbol]                       0x08005ea0   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1AbortCallback)
    [Anonymous Symbol]                       0x08005ea8   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1CompleteCallback)
    [Anonymous Symbol]                       0x08005eb0   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2AbortCallback)
    [Anonymous Symbol]                       0x08005eb8   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2CompleteCallback)
    [Anonymous Symbol]                       0x08005ec0   Section        0  stm32f4xx_hal_can.o(.text.HAL_CAN_WakeUpFromRxMsgCallback)
    [Anonymous Symbol]                       0x08005ec8   Section        0  stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort)
    [Anonymous Symbol]                       0x08005fbc   Section        0  stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT)
    [Anonymous Symbol]                       0x08006000   Section        0  bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback)
    [Anonymous Symbol]                       0x080064cc   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler)
    [Anonymous Symbol]                       0x08006508   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08006904   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin)
    [Anonymous Symbol]                       0x08006934   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin)
    [Anonymous Symbol]                       0x08006960   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x08006994   Section        0  stm32f4xx_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x080069a0   Section        0  stm32f4xx_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x080069bc   Section        0  stm32f4xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x080069fc   Section        0  stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08006af8   Section        0  stm32f4xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08006b4c   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08006b64   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x08006ba4   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08006bb4   Section        0  stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive)
    [Anonymous Symbol]                       0x08006c74   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08006ed8   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    [Anonymous Symbol]                       0x08006f2c   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x08006f38   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x08006f5c   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    [Anonymous Symbol]                       0x08006f80   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08007068   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08007734   Section        0  stm32f4xx_hal_rng.o(.text.HAL_RNG_Init)
    [Anonymous Symbol]                       0x08007790   Section        0  rng.o(.text.HAL_RNG_MspInit)
    [Anonymous Symbol]                       0x080077d0   Section        0  stm32f4xx_hal_spi.o(.text.HAL_SPI_Init)
    [Anonymous Symbol]                       0x080078d4   Section        0  spi.o(.text.HAL_SPI_MspInit)
    [Anonymous Symbol]                       0x08007adc   Section        0  stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive)
    [Anonymous Symbol]                       0x08007e6c   Section        0  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    [Anonymous Symbol]                       0x08007e74   Section        0  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    [Anonymous Symbol]                       0x08007e7c   Section        0  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization)
    [Anonymous Symbol]                       0x08007fa0   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    [Anonymous Symbol]                       0x08008048   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    [Anonymous Symbol]                       0x08008050   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start)
    [Anonymous Symbol]                       0x0800813c   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    [Anonymous Symbol]                       0x08008234   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    [Anonymous Symbol]                       0x0800823c   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    [Anonymous Symbol]                       0x080084c0   Section        0  tim.o(.text.HAL_TIM_MspPostInit)
    [Anonymous Symbol]                       0x08008524   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    [Anonymous Symbol]                       0x0800852c   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel)
    [Anonymous Symbol]                       0x08008670   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init)
    [Anonymous Symbol]                       0x08008718   Section        0  tim.o(.text.HAL_TIM_PWM_MspInit)
    [Anonymous Symbol]                       0x08008750   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    [Anonymous Symbol]                       0x08008758   Section        0  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    [Anonymous Symbol]                       0x0800877c   Section        0  stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    [Anonymous Symbol]                       0x08008784   Section        0  stm32f4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback)
    [Anonymous Symbol]                       0x08008794   Section        0  stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback)
    [Anonymous Symbol]                       0x0800879c   Section        0  stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler)
    [Anonymous Symbol]                       0x08008bcc   Section        0  stm32f4xx_hal_uart.o(.text.HAL_UART_Init)
    [Anonymous Symbol]                       0x08008c6c   Section        0  usart.o(.text.HAL_UART_MspInit)
    [Anonymous Symbol]                       0x08008da8   Section        0  stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback)
    [Anonymous Symbol]                       0x08008db0   Section        0  stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback)
    [Anonymous Symbol]                       0x08008db8   Section        0  stm32f4xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08008dbc   Section        0  iic.o(.text.IOSwitch)
    [Anonymous Symbol]                       0x08008e28   Section        0  task_protection.o(.text.IntelProtectRunParmCheck)
    [Anonymous Symbol]                       0x08009cfc   Section        0  task_init.o(.text.InternalProtectDatInit)
    [Anonymous Symbol]                       0x08009fe0   Section        0  task_protocol.o(.text.InternalProtectInqAnalysis)
    [Anonymous Symbol]                       0x0800a250   Section        0  task_protocol.o(.text.InternalProtectSetAnalysis)
    IsFrameValid                             0x0800a675   Thumb Code   134  task_dcdc.o(.text.IsFrameValid)
    [Anonymous Symbol]                       0x0800a674   Section        0  task_dcdc.o(.text.IsFrameValid)
    IsIrqMasked                              0x0800a6fd   Thumb Code    48  rtx_delay.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x0800a6fc   Section        0  rtx_delay.o(.text.IsIrqMasked)
    IsIrqMasked                              0x0800a72d   Thumb Code    48  rtx_kernel.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x0800a72c   Section        0  rtx_kernel.o(.text.IsIrqMasked)
    IsIrqMasked                              0x0800a75d   Thumb Code    48  rtx_msgqueue.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x0800a75c   Section        0  rtx_msgqueue.o(.text.IsIrqMasked)
    IsIrqMasked                              0x0800a78d   Thumb Code    48  rtx_semaphore.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x0800a78c   Section        0  rtx_semaphore.o(.text.IsIrqMasked)
    IsIrqMasked                              0x0800a7bd   Thumb Code    48  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x0800a7bc   Section        0  rtx_thread.o(.text.IsIrqMasked)
    IsIrqMode                                0x0800a7ed   Thumb Code    20  rtx_delay.o(.text.IsIrqMode)
    [Anonymous Symbol]                       0x0800a7ec   Section        0  rtx_delay.o(.text.IsIrqMode)
    IsIrqMode                                0x0800a801   Thumb Code    20  rtx_kernel.o(.text.IsIrqMode)
    [Anonymous Symbol]                       0x0800a800   Section        0  rtx_kernel.o(.text.IsIrqMode)
    IsIrqMode                                0x0800a815   Thumb Code    20  rtx_msgqueue.o(.text.IsIrqMode)
    [Anonymous Symbol]                       0x0800a814   Section        0  rtx_msgqueue.o(.text.IsIrqMode)
    IsIrqMode                                0x0800a829   Thumb Code    20  rtx_semaphore.o(.text.IsIrqMode)
    [Anonymous Symbol]                       0x0800a828   Section        0  rtx_semaphore.o(.text.IsIrqMode)
    IsIrqMode                                0x0800a83d   Thumb Code    20  rtx_thread.o(.text.IsIrqMode)
    [Anonymous Symbol]                       0x0800a83c   Section        0  rtx_thread.o(.text.IsIrqMode)
    [Anonymous Symbol]                       0x0800a850   Section        0  bsp_mb85rs2.o(.text.MB85Ctrl_Read)
    [Anonymous Symbol]                       0x0800a8ec   Section        0  bsp_mb85rs2.o(.text.MB85Ctrl_Write)
    [Anonymous Symbol]                       0x0800a9b8   Section        0  can.o(.text.MX_CAN1_Init)
    [Anonymous Symbol]                       0x0800aa50   Section        0  can.o(.text.MX_CAN2_Init)
    [Anonymous Symbol]                       0x0800aaec   Section        0  gpio.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x0800ae98   Section        0  rng.o(.text.MX_RNG_Init)
    [Anonymous Symbol]                       0x0800aec0   Section        0  spi.o(.text.MX_SPI1_Init)
    [Anonymous Symbol]                       0x0800af0c   Section        0  spi.o(.text.MX_SPI2_Init)
    [Anonymous Symbol]                       0x0800af58   Section        0  spi.o(.text.MX_SPI3_Init)
    [Anonymous Symbol]                       0x0800afa0   Section        0  spi.o(.text.MX_SPI4_Init)
    [Anonymous Symbol]                       0x0800afec   Section        0  tim.o(.text.MX_TIM2_Init)
    [Anonymous Symbol]                       0x0800b098   Section        0  usart.o(.text.MX_USART1_UART_Init)
    [Anonymous Symbol]                       0x0800b0d4   Section        0  usart.o(.text.MX_USART2_UART_Init)
    MemBlockPtr                              0x0800b111   Thumb Code    24  rtx_memory.o(.text.MemBlockPtr)
    [Anonymous Symbol]                       0x0800b110   Section        0  rtx_memory.o(.text.MemBlockPtr)
    MemHeadPtr                               0x0800b129   Thumb Code    10  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x0800b128   Section        0  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x0800b134   Section        0  stm32f4xx_it.o(.text.MemManage_Handler)
    MessageQueueGet                          0x0800b139   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x0800b138   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x0800b191   Thumb Code   182  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x0800b190   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x0800b249   Thumb Code    70  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0800b248   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0800b290   Section        0  stm32f4xx_it.o(.text.NMI_Handler)
    NVIC_EncodePriority                      0x0800b295   Thumb Code   110  stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x0800b294   Section        0  stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x0800b304   Section        0  can_network_driver.o(.text.Network_Data_Pop)
    [Anonymous Symbol]                       0x0800b444   Section        0  can_network_driver.o(.text.Network_Data_Push_Rx_Buffer)
    [Anonymous Symbol]                       0x0800b680   Section        0  can_network_driver.o(.text.Network_Data_Push_Tx_Buffer)
    [Anonymous Symbol]                       0x0800b84c   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x0800b858   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x0800b898   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x0800b8a0   Section        0  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x0800b920   Section        0  bsp_nca9555.o(.text.PCA9555_IOConfigReg)
    [Anonymous Symbol]                       0x0800ba18   Section        0  bsp_nca9555.o(.text.Pca9555_RegRead)
    [Anonymous Symbol]                       0x0800bb14   Section        0  task_workstep.o(.text.Protect_Action_Func)
    [Anonymous Symbol]                       0x0800bd00   Section        0  task_protocol.o(.text.ProtocolDataProcess)
    [Anonymous Symbol]                       0x0800c0d4   Section        0  task_led.o(.text.ReadAddr)
    [Anonymous Symbol]                       0x0800c1a0   Section        0  task_protocol.o(.text.RecordDatSync)
    [Anonymous Symbol]                       0x0800c5f4   Section        0  task_protocol.o(.text.RecordDatUpcast)
    [Anonymous Symbol]                       0x0800c774   Section        0  task_protocol.o(.text.RecordInqAnalysis)
    RecvUnpack                               0x0800c81d   Thumb Code   482  task_protocol.o(.text.RecvUnpack)
    [Anonymous Symbol]                       0x0800c81c   Section        0  task_protocol.o(.text.RecvUnpack)
    [Anonymous Symbol]                       0x0800ca00   Section        0  bsp_sgm58601.o(.text.SGM58601_CS_0)
    [Anonymous Symbol]                       0x0800ca78   Section        0  bsp_sgm58601.o(.text.SGM58601_CS_1)
    [Anonymous Symbol]                       0x0800caf0   Section        0  bsp_sgm58601.o(.text.SGM58601_INIT)
    [Anonymous Symbol]                       0x0800cb14   Section        0  bsp_sgm58601.o(.text.SGM58601_READ_DATA)
    [Anonymous Symbol]                       0x0800cbb4   Section        0  bsp_sgm58601.o(.text.SGM58601_REG_INIT)
    [Anonymous Symbol]                       0x0800cd88   Section        0  bsp_sgm58601.o(.text.SGM58601_SWITCH_CH)
    SPI_EndRxTxTransaction                   0x0800cdb5   Thumb Code   168  stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction)
    [Anonymous Symbol]                       0x0800cdb4   Section        0  stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction)
    SPI_ReadWriteByte                        0x0800ce5d   Thumb Code    76  bsp_mb85rs2.o(.text.SPI_ReadWriteByte)
    [Anonymous Symbol]                       0x0800ce5c   Section        0  bsp_mb85rs2.o(.text.SPI_ReadWriteByte)
    SPI_WaitFlagStateUntilTimeout            0x0800cea9   Thumb Code   308  stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout)
    [Anonymous Symbol]                       0x0800cea8   Section        0  stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout)
    SVC_Setup                                0x0800cfdd   Thumb Code    78  rtx_kernel.o(.text.SVC_Setup)
    [Anonymous Symbol]                       0x0800cfdc   Section        0  rtx_kernel.o(.text.SVC_Setup)
    SemaphoreTokenDecrement                  0x0800d02d   Thumb Code    38  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    [Anonymous Symbol]                       0x0800d02c   Section        0  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    SemaphoreTokenIncrement                  0x0800d055   Thumb Code    52  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    [Anonymous Symbol]                       0x0800d054   Section        0  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    SendPack                                 0x0800d089   Thumb Code   250  task_protocol.o(.text.SendPack)
    [Anonymous Symbol]                       0x0800d088   Section        0  task_protocol.o(.text.SendPack)
    SetPendSV                                0x0800d185   Thumb Code    16  rtx_system.o(.text.SetPendSV)
    [Anonymous Symbol]                       0x0800d184   Section        0  rtx_system.o(.text.SetPendSV)
    StackOffsetR0                            0x0800d195   Thumb Code    28  rtx_thread.o(.text.StackOffsetR0)
    [Anonymous Symbol]                       0x0800d194   Section        0  rtx_thread.o(.text.StackOffsetR0)
    [Anonymous Symbol]                       0x0800d1b0   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x0800d280   Section        0  system_stm32f4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0800d294   Section        0  task_protocol.o(.text.SystemInqAnalysis)
    [Anonymous Symbol]                       0x0800d3e4   Section        0  task_protocol.o(.text.SystemSetAnalysis)
    [Anonymous Symbol]                       0x0800d8b0   Section        0  stm32f4xx_it.o(.text.TIM4_IRQHandler)
    [Anonymous Symbol]                       0x0800d9a0   Section        0  stm32f4xx_it.o(.text.TIM5_IRQHandler)
    [Anonymous Symbol]                       0x0800dfbc   Section        0  stm32f4xx_it.o(.text.TIM8_TRG_COM_TIM14_IRQHandler)
    [Anonymous Symbol]                       0x0800dfcc   Section        0  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    TIM_OC1_SetConfig                        0x0800e169   Thumb Code   234  stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig)
    [Anonymous Symbol]                       0x0800e168   Section        0  stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig)
    [Anonymous Symbol]                       0x0800e254   Section        0  stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig)
    TIM_OC3_SetConfig                        0x0800e349   Thumb Code   242  stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig)
    [Anonymous Symbol]                       0x0800e348   Section        0  stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig)
    TIM_OC4_SetConfig                        0x0800e43d   Thumb Code   164  stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig)
    [Anonymous Symbol]                       0x0800e43c   Section        0  stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig)
    ThreadFlagsCheck                         0x0800e4e1   Thumb Code   130  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x0800e4e0   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x0800e564   Section        0  task_init.o(.text.Tier2ToTier1)
    TimerInsert                              0x0800e6e1   Thumb Code   166  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x0800e6e0   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerUnlink                              0x0800e789   Thumb Code    42  rtx_timer.o(.text.TimerUnlink)
    [Anonymous Symbol]                       0x0800e788   Section        0  rtx_timer.o(.text.TimerUnlink)
    UART_DMAAbortOnError                     0x0800e7b5   Thumb Code    32  stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError)
    [Anonymous Symbol]                       0x0800e7b4   Section        0  stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError)
    UART_EndRxTransfer                       0x0800e7d5   Thumb Code   148  stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer)
    [Anonymous Symbol]                       0x0800e7d4   Section        0  stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer)
    UART_EndTransmit_IT                      0x0800e869   Thumb Code    38  stm32f4xx_hal_uart.o(.text.UART_EndTransmit_IT)
    [Anonymous Symbol]                       0x0800e868   Section        0  stm32f4xx_hal_uart.o(.text.UART_EndTransmit_IT)
    UART_Receive_IT                          0x0800e891   Thumb Code   362  stm32f4xx_hal_uart.o(.text.UART_Receive_IT)
    [Anonymous Symbol]                       0x0800e890   Section        0  stm32f4xx_hal_uart.o(.text.UART_Receive_IT)
    UART_SetConfig                           0x0800e9fd   Thumb Code   342  stm32f4xx_hal_uart.o(.text.UART_SetConfig)
    [Anonymous Symbol]                       0x0800e9fc   Section        0  stm32f4xx_hal_uart.o(.text.UART_SetConfig)
    UART_Transmit_IT                         0x0800eb55   Thumb Code   152  stm32f4xx_hal_uart.o(.text.UART_Transmit_IT)
    [Anonymous Symbol]                       0x0800eb54   Section        0  stm32f4xx_hal_uart.o(.text.UART_Transmit_IT)
    [Anonymous Symbol]                       0x0800ebec   Section        0  stm32f4xx_it.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x0800ebfc   Section        0  stm32f4xx_it.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x0800ec0c   Section        0  stm32f4xx_it.o(.text.UsageFault_Handler)
    [Anonymous Symbol]                       0x0800ec10   Section        0  task_protocol.o(.text.WorkstepInqAnalysis)
    [Anonymous Symbol]                       0x0800ee8c   Section        0  task_protocol.o(.text.WorkstepProtUpcast)
    [Anonymous Symbol]                       0x0800f01c   Section        0  task_protocol.o(.text.WorkstepRunstaSetAnalysis)
    [Anonymous Symbol]                       0x0800f610   Section        0  task_protocol.o(.text.WorkstepSetAnalysis)
    [Anonymous Symbol]                       0x0800fe78   Section        0  task_workstep.o(.text.Workstep_Abort_Func)
    __arm_cp.8_2                             0x08010208   Number         4  task_workstep.o(.text.Workstep_Abort_Func)
    [Anonymous Symbol]                       0x08010e08   Section        0  task_workstep.o(.text.Workstep_Analysis_Func)
    [Anonymous Symbol]                       0x080113b8   Section        0  task_workstep.o(.text.Workstep_Execute_Func)
    [Anonymous Symbol]                       0x080116a0   Section        0  task_workstep.o(.text.Workstep_Protect_Func)
    [Anonymous Symbol]                       0x08011bd8   Section        0  task_workstep.o(.text.Workstep_Reload_Func)
    [Anonymous Symbol]                       0x08012990   Section        0  task_workstep.o(.text.Workstep_Switch_Func)
    __NVIC_DisableIRQ                        0x08012bc1   Thumb Code    60  bsp_sgm58601.o(.text.__NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x08012bc0   Section        0  bsp_sgm58601.o(.text.__NVIC_DisableIRQ)
    __NVIC_EnableIRQ                         0x08012bfd   Thumb Code    52  stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08012bfc   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x08012c31   Thumb Code    52  bsp_sgm58601.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08012c30   Section        0  bsp_sgm58601.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x08012c65   Thumb Code    16  stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x08012c64   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_GetPriorityGrouping               0x08012c75   Thumb Code    16  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x08012c74   Section        0  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriority                       0x08012c85   Thumb Code    68  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08012c84   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x08012cc9   Thumb Code    60  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08012cc8   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    atomic_chk32_all                         0x08012d05   Thumb Code    56  rtx_thread.o(.text.atomic_chk32_all)
    [Anonymous Symbol]                       0x08012d04   Section        0  rtx_thread.o(.text.atomic_chk32_all)
    atomic_chk32_any                         0x08012d3d   Thumb Code    52  rtx_thread.o(.text.atomic_chk32_any)
    [Anonymous Symbol]                       0x08012d3c   Section        0  rtx_thread.o(.text.atomic_chk32_any)
    atomic_dec16_nz                          0x08012d71   Thumb Code    44  rtx_semaphore.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x08012d70   Section        0  rtx_semaphore.o(.text.atomic_dec16_nz)
    atomic_dec16_nz                          0x08012d9d   Thumb Code    44  rtx_system.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x08012d9c   Section        0  rtx_system.o(.text.atomic_dec16_nz)
    atomic_dec32                             0x08012dc9   Thumb Code    32  rtx_mempool.o(.text.atomic_dec32)
    [Anonymous Symbol]                       0x08012dc8   Section        0  rtx_mempool.o(.text.atomic_dec32)
    atomic_dec32_nz                          0x08012de9   Thumb Code    40  rtx_msgqueue.o(.text.atomic_dec32_nz)
    [Anonymous Symbol]                       0x08012de8   Section        0  rtx_msgqueue.o(.text.atomic_dec32_nz)
    atomic_inc16_lim                         0x08012e11   Thumb Code    54  rtx_system.o(.text.atomic_inc16_lim)
    [Anonymous Symbol]                       0x08012e10   Section        0  rtx_system.o(.text.atomic_inc16_lim)
    atomic_inc16_lt                          0x08012e49   Thumb Code    58  rtx_semaphore.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x08012e48   Section        0  rtx_semaphore.o(.text.atomic_inc16_lt)
    atomic_inc16_lt                          0x08012e85   Thumb Code    58  rtx_system.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x08012e84   Section        0  rtx_system.o(.text.atomic_inc16_lt)
    atomic_inc32                             0x08012ec1   Thumb Code    32  rtx_mempool.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x08012ec0   Section        0  rtx_mempool.o(.text.atomic_inc32)
    atomic_inc32                             0x08012ee1   Thumb Code    32  rtx_msgqueue.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x08012ee0   Section        0  rtx_msgqueue.o(.text.atomic_inc32)
    atomic_link_get                          0x08012f01   Thumb Code    40  rtx_mempool.o(.text.atomic_link_get)
    [Anonymous Symbol]                       0x08012f00   Section        0  rtx_mempool.o(.text.atomic_link_get)
    atomic_link_put                          0x08012f29   Thumb Code    48  rtx_mempool.o(.text.atomic_link_put)
    [Anonymous Symbol]                       0x08012f28   Section        0  rtx_mempool.o(.text.atomic_link_put)
    atomic_wr8                               0x08012f59   Thumb Code    44  rtx_msgqueue.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x08012f58   Section        0  rtx_msgqueue.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x08012f84   Section        0  bsp_dwt.o(.text.bsp_DelayMS)
    [Anonymous Symbol]                       0x08012f9c   Section        0  bsp_dwt.o(.text.bsp_DelayUS)
    [Anonymous Symbol]                       0x08012ff0   Section        0  bsp_dwt.o(.text.bsp_InitDWT)
    [Anonymous Symbol]                       0x08013020   Section        0  bsp_timer.o(.text.bsp_RCC_TIM_Enable)
    [Anonymous Symbol]                       0x08013314   Section        0  bsp_timer.o(.text.bsp_SetTIMforInt)
    [Anonymous Symbol]                       0x080135ec   Section        0  task_workstep.o(.text.channel_runsta_sync)
    [Anonymous Symbol]                       0x08013728   Section        0  iic.o(.text.i2c_Ack)
    [Anonymous Symbol]                       0x0801387c   Section        0  iic.o(.text.i2c_Delay)
    [Anonymous Symbol]                       0x080138a4   Section        0  iic.o(.text.i2c_NAck)
    [Anonymous Symbol]                       0x080139b0   Section        0  iic.o(.text.i2c_ReadByte)
    [Anonymous Symbol]                       0x08013bf8   Section        0  iic.o(.text.i2c_SendByte)
    [Anonymous Symbol]                       0x08013e5c   Section        0  iic.o(.text.i2c_Start)
    [Anonymous Symbol]                       0x08013f9c   Section        0  iic.o(.text.i2c_Stop)
    [Anonymous Symbol]                       0x080140a4   Section        0  iic.o(.text.i2c_WaitAck)
    isrRtxMessageQueueGet                    0x080142c9   Thumb Code   178  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x080142c8   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    isrRtxMessageQueuePut                    0x0801437d   Thumb Code   202  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x0801437c   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    isrRtxSemaphoreAcquire                   0x08014449   Thumb Code   112  rtx_semaphore.o(.text.isrRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x08014448   Section        0  rtx_semaphore.o(.text.isrRtxSemaphoreAcquire)
    isrRtxSemaphoreRelease                   0x080144b9   Thumb Code   116  rtx_semaphore.o(.text.isrRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x080144b8   Section        0  rtx_semaphore.o(.text.isrRtxSemaphoreRelease)
    isr_queue_get                            0x0801452d   Thumb Code    88  rtx_system.o(.text.isr_queue_get)
    [Anonymous Symbol]                       0x0801452c   Section        0  rtx_system.o(.text.isr_queue_get)
    isr_queue_put                            0x08014585   Thumb Code    98  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x08014584   Section        0  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x080145e8   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x0801465c   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x080146b4   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08014704   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08014750   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x080147d4   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x0801484c   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x080148e0   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    osRtxEventFlagsObject                    0x08014911   Thumb Code    10  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x08014910   Section        0  rtx_system.o(.text.osRtxEventFlagsObject)
    osRtxEventFlagsObject                    0x0801491d   Thumb Code    10  rtx_thread.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x0801491c   Section        0  rtx_thread.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x08014928   Section        0  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelGetState                      0x08014931   Thumb Code    12  rtx_system.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x08014930   Section        0  rtx_system.o(.text.osRtxKernelGetState)
    osRtxKernelGetState                      0x0801493d   Thumb Code    12  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x0801493c   Section        0  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x08014948   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x0801494c   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08014aa4   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08014b6c   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08014c0c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08014c5c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08014ccc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMemoryPoolObject                    0x08014d71   Thumb Code    10  rtx_system.o(.text.osRtxMemoryPoolObject)
    [Anonymous Symbol]                       0x08014d70   Section        0  rtx_system.o(.text.osRtxMemoryPoolObject)
    osRtxMemoryPoolObject                    0x08014d7d   Thumb Code    10  rtx_thread.o(.text.osRtxMemoryPoolObject)
    [Anonymous Symbol]                       0x08014d7c   Section        0  rtx_thread.o(.text.osRtxMemoryPoolObject)
    osRtxMessageObject                       0x08014d89   Thumb Code    10  rtx_system.o(.text.osRtxMessageObject)
    [Anonymous Symbol]                       0x08014d88   Section        0  rtx_system.o(.text.osRtxMessageObject)
    osRtxMessageQueueId                      0x08014d95   Thumb Code    10  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    [Anonymous Symbol]                       0x08014d94   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    osRtxMessageQueueId                      0x08014da1   Thumb Code    10  rtx_timer.o(.text.osRtxMessageQueueId)
    [Anonymous Symbol]                       0x08014da0   Section        0  rtx_timer.o(.text.osRtxMessageQueueId)
    osRtxMessageQueueObject                  0x08014dad   Thumb Code    10  rtx_thread.o(.text.osRtxMessageQueueObject)
    [Anonymous Symbol]                       0x08014dac   Section        0  rtx_thread.o(.text.osRtxMessageQueueObject)
    osRtxMessageQueuePostProcess             0x08014db9   Thumb Code   340  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08014db8   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMutexObject                         0x08014f0d   Thumb Code    10  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x08014f0c   Section        0  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x08014f18   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08014fb4   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxObject                              0x08015055   Thumb Code    10  rtx_msgqueue.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08015054   Section        0  rtx_msgqueue.o(.text.osRtxObject)
    osRtxObject                              0x08015061   Thumb Code    10  rtx_mutex.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08015060   Section        0  rtx_mutex.o(.text.osRtxObject)
    osRtxObject                              0x0801506d   Thumb Code    10  rtx_semaphore.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0801506c   Section        0  rtx_semaphore.o(.text.osRtxObject)
    osRtxObject                              0x08015079   Thumb Code    10  rtx_system.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08015078   Section        0  rtx_system.o(.text.osRtxObject)
    osRtxObject                              0x08015085   Thumb Code    10  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08015084   Section        0  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08015090   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08015154   Section        0  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphoreId                         0x0801519d   Thumb Code    10  rtx_semaphore.o(.text.osRtxSemaphoreId)
    [Anonymous Symbol]                       0x0801519c   Section        0  rtx_semaphore.o(.text.osRtxSemaphoreId)
    osRtxSemaphoreObject                     0x080151a9   Thumb Code    10  rtx_system.o(.text.osRtxSemaphoreObject)
    [Anonymous Symbol]                       0x080151a8   Section        0  rtx_system.o(.text.osRtxSemaphoreObject)
    osRtxSemaphoreObject                     0x080151b5   Thumb Code    10  rtx_thread.o(.text.osRtxSemaphoreObject)
    [Anonymous Symbol]                       0x080151b4   Section        0  rtx_thread.o(.text.osRtxSemaphoreObject)
    osRtxSemaphorePostProcess                0x080151c1   Thumb Code    68  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x080151c0   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxThreadBlock                         0x08015205   Thumb Code   142  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08015204   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08015295   Thumb Code   264  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08015294   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x0801539d   Thumb Code   160  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x0801539c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x0801543c   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x080155cc   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x08015669   Thumb Code   160  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08015668   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadGetRunning                    0x08015709   Thumb Code    12  rtx_delay.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08015708   Section        0  rtx_delay.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x08015715   Thumb Code    12  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08015714   Section        0  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x08015721   Thumb Code    12  rtx_semaphore.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08015720   Section        0  rtx_semaphore.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0801572d   Thumb Code    12  rtx_thread.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0801572c   Section        0  rtx_thread.o(.text.osRtxThreadGetRunning)
    osRtxThreadId                            0x08015739   Thumb Code    10  rtx_thread.o(.text.osRtxThreadId)
    [Anonymous Symbol]                       0x08015738   Section        0  rtx_thread.o(.text.osRtxThreadId)
    [Anonymous Symbol]                       0x08015744   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x0801577c   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x080157f8   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x08015831   Thumb Code    34  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08015830   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08015854   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadObject                        0x080158b5   Thumb Code    10  rtx_system.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x080158b4   Section        0  rtx_system.o(.text.osRtxThreadObject)
    osRtxThreadObject                        0x080158c1   Thumb Code    10  rtx_thread.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x080158c0   Section        0  rtx_thread.o(.text.osRtxThreadObject)
    osRtxThreadPostProcess                   0x080158cd   Thumb Code    80  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x080158cc   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0801591c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x0801593c   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadSetRunning                    0x0801595d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x0801595c   Section        0  rtx_thread.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x08015970   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x080159b4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08015a38   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08015a60   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08015adc   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08015b28   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08015c38   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08015ca1   Thumb Code   168  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08015ca0   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08015d48   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x08015dac   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x08015e24   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x08015e78   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08015e9c   Section        0  rtx_thread.o(.text.osThreadNew)
    svcRtxDelay                              0x08015f15   Thumb Code    54  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08015f14   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelInitialize                   0x08015f4d   Thumb Code   908  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08015f4c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x080162d9   Thumb Code   216  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x080162d8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x080163b1   Thumb Code   402  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x080163b0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x08016545   Thumb Code   660  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08016544   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x080167d9   Thumb Code   398  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080167d8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxSemaphoreAcquire                   0x08016969   Thumb Code   178  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x08016968   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreNew                       0x08016a1d   Thumb Code   350  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x08016a1c   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreRelease                   0x08016b7d   Thumb Code   164  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08016b7c   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxThreadExit                         0x08016c21   Thumb Code   212  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08016c20   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x08016cf5   Thumb Code  1036  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08016cf4   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    xPSR_InitVal                             0x08017101   Thumb Code    22  rtx_thread.o(.text.xPSR_InitVal)
    [Anonymous Symbol]                       0x08017100   Section        0  rtx_thread.o(.text.xPSR_InitVal)
    i.__scatterload_copy                     0x08017116   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08017124   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08017126   Section       14  handlers.o(i.__scatterload_zeroinit)
    __tagsym$$used.0                         0x08017134   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.1                         0x0801719c   Number         0  rtx_lib.o(.rodata)
    os_idle_thread_attr                      0x080172c4   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x080172c4   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x080172e8   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x080172e8   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08017300   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08017300   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x08017324   Data          17  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08017324   Section        0  main.o(.rodata.str1.1)
    .L.str.4                                 0x08017335   Data          18  task_start.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08017335   Section        0  task_start.o(.rodata.str1.1)
    .L.str.5                                 0x08017347   Data          21  task_start.o(.rodata.str1.1)
    .L.str.2                                 0x0801735c   Data          16  task_start.o(.rodata.str1.1)
    .L.str.1                                 0x0801736c   Data          15  task_start.o(.rodata.str1.1)
    .L.str.3                                 0x0801737b   Data          22  task_start.o(.rodata.str1.1)
    .L.str                                   0x08017391   Data          20  task_start.o(.rodata.str1.1)
    .L.str                                   0x080173a5   Data          11  rtx_kernel.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080173a5   Section        0  rtx_kernel.o(.rodata.str1.1)
    DcdcRepHandle                            0x20000004   Data          48  task_dcdc.o(.data.DcdcRepHandle)
    [Anonymous Symbol]                       0x20000004   Section        0  task_dcdc.o(.data.DcdcRepHandle)
    upcast_feat_id                           0x200002c2   Data           1  can_network_protocol.o(.data.upcast_feat_id)
    [Anonymous Symbol]                       0x200002c2   Section        0  can_network_protocol.o(.data.upcast_feat_id)
    ExternalAdDatProcess.ins_cnt             0x20000686   Data           2  task_led.o(.bss.ExternalAdDatProcess.ins_cnt)
    [Anonymous Symbol]                       0x20000686   Section        0  task_led.o(.bss.ExternalAdDatProcess.ins_cnt)
    ExternalAdDatProcess.sum_cnt             0x20000688   Data           2  task_led.o(.bss.ExternalAdDatProcess.sum_cnt)
    [Anonymous Symbol]                       0x20000688   Section        0  task_led.o(.bss.ExternalAdDatProcess.sum_cnt)
    HAL_RCC_CAN1_CLK_ENABLED                 0x200006cc   Data           4  can.o(.bss.HAL_RCC_CAN1_CLK_ENABLED)
    [Anonymous Symbol]                       0x200006cc   Section        0  can.o(.bss.HAL_RCC_CAN1_CLK_ENABLED)
    PendST                                   0x20000730   Data           1  os_systick.o(.bss.PendST)
    [Anonymous Symbol]                       0x20000730   Section        0  os_systick.o(.bss.PendST)
    os_isr_queue                             0x20005618   Data         192  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20005618   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x200056d8   Data       50960  rtx_lib.o(.bss.os)
    os_timer_mq_cb                           0x20011de8   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20011de8   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20011e1c   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20011e1c   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x20011e6c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20011e6c   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20011eb0   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20011ef8   Data         256  rtx_lib.o(.bss.os.thread.stack)
    [Anonymous Symbol]                       0x20011ef8   Section        0  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20011ff8   Data        1024  rtx_lib.o(.bss.os.thread.stack)
    rx_analysis_cnt                          0x20012458   Data           2  can_network_protocol.o(.bss.rx_analysis_cnt)
    [Anonymous Symbol]                       0x20012458   Section        0  can_network_protocol.o(.bss.rx_analysis_cnt)
    tx_err_cnt                               0x20015614   Data           2  can_network_protocol.o(.bss.tx_err_cnt)
    [Anonymous Symbol]                       0x20015614   Section        0  can_network_protocol.o(.bss.tx_err_cnt)
    tx_reply_cnt                             0x20015616   Data           2  can_network_protocol.o(.bss.tx_reply_cnt)
    [Anonymous Symbol]                       0x20015616   Section        0  can_network_protocol.o(.bss.tx_reply_cnt)
    STACK                                    0x20015750   Section     8192  startup_stm32f427xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000001ac   Number         0  startup_stm32f427xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f427xx.o(RESET)
    __Vectors_End                            0x080001ac   Data           0  startup_stm32f427xx.o(RESET)
    __main                                   0x080001ad   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080001ad   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080001b1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080001b5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080001b5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080001b5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080001b5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080001bd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080001bd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080001c1   Thumb Code     8  startup_stm32f427xx.o(.text)
    ADC_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    CAN1_TX_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    CAN2_SCE_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    CAN2_TX_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DCMI_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2D_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    ETH_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    ETH_WKUP_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    EXTI0_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    EXTI1_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    EXTI2_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    EXTI3_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    EXTI4_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    FLASH_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    FMC_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    FPU_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    HASH_RNG_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    I2C1_ER_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    I2C1_EV_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    I2C2_ER_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    I2C2_EV_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    I2C3_ER_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    I2C3_EV_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    OTG_FS_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    OTG_HS_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    PVD_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    RCC_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SAI1_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SDIO_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SPI1_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SPI2_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SPI3_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SPI4_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SPI5_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SPI6_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM1_CC_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM2_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM3_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM6_DAC_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM7_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM8_CC_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    UART4_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    UART5_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    UART7_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    UART8_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    USART3_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    USART6_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    WWDG_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f427xx.o(.text)
    SVC_Handler                              0x080001e5   Thumb Code   152  irq_cm4f.o(.text)
    PendSV_Handler                           0x0800027d   Thumb Code    16  irq_cm4f.o(.text)
    SysTick_Handler                          0x0800028d   Thumb Code    16  irq_cm4f.o(.text)
    __aeabi_uldivmod                         0x080002a9   Thumb Code    98  uldiv.o(.text)
    __aeabi_ldivmod                          0x0800030b   Thumb Code    98  ldiv.o(.text)
    __aeabi_memcpy                           0x0800036d   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0800036d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0800036d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x08000391   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x08000391   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x08000391   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0800039f   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0800039f   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0800039f   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x080003a3   Thumb Code    18  memseta.o(.text)
    __aeabi_dadd                             0x080003b5   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x080004f7   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x080004fd   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x08000503   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x080005e7   Thumb Code   222  ddiv.o(.text)
    __aeabi_dcmple                           0x080006c5   Thumb Code    54  dcmple.o(.text)
    __aeabi_dcmpge                           0x080006fb   Thumb Code    54  dcmpge.o(.text)
    __aeabi_f2ulz                            0x08000731   Thumb Code    44  ffixul.o(.text)
    __aeabi_f2d                              0x0800075d   Thumb Code    38  f2d.o(.text)
    __aeabi_d2f                              0x08000783   Thumb Code    56  d2f.o(.text)
    __aeabi_llsl                             0x080007bb   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x080007bb   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x080007d9   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x080007d9   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x080007f9   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x080007f9   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x0800081d   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x0800081d   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x0800082f   Thumb Code    92  fepilogue.o(.text)
    _double_round                            0x0800088b   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x080008a9   Thumb Code   156  depilogue.o(.text)
    __scatterload                            0x08000945   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000945   Thumb Code     0  init.o(.text)
    __decompress                             0x08000969   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x08000969   Thumb Code    86  __dczerorl2.o(.text)
    ADC_COMMAND_SET                          0x080009c1   Thumb Code    60  bsp_sgm58601.o(.text.ADC_COMMAND_SET)
    ADC_SET_CHANNEL                          0x080009fd   Thumb Code    56  bsp_sgm58601.o(.text.ADC_SET_CHANNEL)
    ADC_WRITE_TO_ONE_REG                     0x08000a35   Thumb Code   174  bsp_sgm58601.o(.text.ADC_WRITE_TO_ONE_REG)
    AdDataInqAnalysis                        0x08000ae5   Thumb Code   336  task_protocol.o(.text.AdDataInqAnalysis)
    AlarmClear                               0x08000c35   Thumb Code   110  task_protection.o(.text.AlarmClear)
    AlarmQuarry                              0x08000ca5   Thumb Code   782  task_protection.o(.text.AlarmQuarry)
    AppTaskDcdc                              0x08000fb5   Thumb Code    52  task_dcdc.o(.text.AppTaskDcdc)
    AppTaskLed                               0x08000fe9   Thumb Code   228  task_led.o(.text.AppTaskLed)
    AppTaskProtection                        0x080010cd   Thumb Code  1256  task_protection.o(.text.AppTaskProtection)
    AppTaskStart                             0x080015b5   Thumb Code    78  task_start.o(.text.AppTaskStart)
    AppTaskWorkstep                          0x08001605   Thumb Code    60  task_workstep.o(.text.AppTaskWorkstep)
    BatteryFormattingStop                    0x08001641   Thumb Code    80  task_workstep.o(.text.BatteryFormattingStop)
    BspInit                                  0x080016e1   Thumb Code   240  bsp.o(.text.BspInit)
    BusFault_Handler                         0x080017d1   Thumb Code     4  stm32f4xx_it.o(.text.BusFault_Handler)
    CAN1_RX0_IRQHandler                      0x080017d5   Thumb Code    16  stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler)
    CAN1_RX1_IRQHandler                      0x080017e5   Thumb Code    16  stm32f4xx_it.o(.text.CAN1_RX1_IRQHandler)
    CAN2_RX0_IRQHandler                      0x080017f5   Thumb Code    16  stm32f4xx_it.o(.text.CAN2_RX0_IRQHandler)
    CAN2_RX1_IRQHandler                      0x08001805   Thumb Code    16  stm32f4xx_it.o(.text.CAN2_RX1_IRQHandler)
    CAN_SendMultiFrames                      0x08001815   Thumb Code   146  can_network_transplant.o(.text.CAN_SendMultiFrames)
    CAN_SendSingleFrame                      0x080018a9   Thumb Code   144  can_network_transplant.o(.text.CAN_SendSingleFrame)
    CRC16N                                   0x08001939   Thumb Code    88  task_protocol.o(.text.CRC16N)
    CRC16_2                                  0x08001991   Thumb Code   116  task_protocol.o(.text.CRC16_2)
    CalibrateDatInit                         0x08001a05   Thumb Code    66  task_init.o(.text.CalibrateDatInit)
    CalibrateInqAnalysis                     0x08001a49   Thumb Code   458  task_protocol.o(.text.CalibrateInqAnalysis)
    CalibrateSetAnalysis                     0x08001c15   Thumb Code   808  task_protocol.o(.text.CalibrateSetAnalysis)
    CanSendMsg                               0x08001f3d   Thumb Code   122  bsp_canlink.o(.text.CanSendMsg)
    Can_Data_Pack_Analysis                   0x08001fb9   Thumb Code    56  can_network_transplant.o(.text.Can_Data_Pack_Analysis)
    Can_Data_Pack_Send                       0x08001ff1   Thumb Code   104  can_network_transplant.o(.text.Can_Data_Pack_Send)
    Can_Network_Analysis_Process             0x08002059   Thumb Code   240  can_network_protocol.o(.text.Can_Network_Analysis_Process)
    Can_Network_Func                         0x08002149   Thumb Code   314  can_network_protocol.o(.text.Can_Network_Func)
    Can_Network_Rx_Process                   0x08002285   Thumb Code  1210  can_network_protocol.o(.text.Can_Network_Rx_Process)
    Can_Network_Rx_Timeout                   0x08002741   Thumb Code   244  can_network_protocol.o(.text.Can_Network_Rx_Timeout)
    Can_Network_Tx_Process                   0x08002835   Thumb Code    90  can_network_protocol.o(.text.Can_Network_Tx_Process)
    Can_Network_Upcast                       0x08002891   Thumb Code   104  can_network_protocol.o(.text.Can_Network_Upcast)
    CreateTask                               0x08002981   Thumb Code   192  task_start.o(.text.CreateTask)
    DcdcCtrlParaSet                          0x08002bfd   Thumb Code   138  task_dcdc.o(.text.DcdcCtrlParaSet)
    DcdcParaInq                              0x08002d1d   Thumb Code   102  task_dcdc.o(.text.DcdcParaInq)
    DcdcProtectSet                           0x08002df5   Thumb Code    88  task_dcdc.o(.text.DcdcProtectSet)
    DcdcRecvHandle                           0x08003135   Thumb Code    78  task_dcdc.o(.text.DcdcRecvHandle)
    DcdcRunModeSet                           0x08003185   Thumb Code    88  task_dcdc.o(.text.DcdcRunModeSet)
    DcdcRunStaSet                            0x080031dd   Thumb Code    84  task_dcdc.o(.text.DcdcRunStaSet)
    DebugDataInqAnalysis                     0x08003285   Thumb Code   374  task_protocol.o(.text.DebugDataInqAnalysis)
    DebugMon_Handler                         0x080033fd   Thumb Code     2  stm32f4xx_it.o(.text.DebugMon_Handler)
    DebugParamSetAnalysis                    0x08003401   Thumb Code   208  task_protocol.o(.text.DebugParamSetAnalysis)
    DebugSystemSetAnalysis                   0x080034d1   Thumb Code   182  task_protocol.o(.text.DebugSystemSetAnalysis)
    DefaultAnalyze                           0x08003589   Thumb Code    38  task_protocol.o(.text.DefaultAnalyze)
    EXTI15_10_IRQHandler                     0x080035b1   Thumb Code    28  stm32f4xx_it.o(.text.EXTI15_10_IRQHandler)
    EXTI9_5_IRQHandler                       0x080035cd   Thumb Code    26  stm32f4xx_it.o(.text.EXTI9_5_IRQHandler)
    EepromDatInit                            0x080035e9   Thumb Code   138  task_init.o(.text.EepromDatInit)
    Err_Info_Pack                            0x080036ad   Thumb Code   292  can_network_transplant.o(.text.Err_Info_Pack)
    Err_Info_Pop                             0x080037d1   Thumb Code   180  can_network_driver.o(.text.Err_Info_Pop)
    Err_Info_Push                            0x08003885   Thumb Code   184  can_network_driver.o(.text.Err_Info_Push)
    Err_Info_Tx_Process                      0x0800393d   Thumb Code     8  can_network_protocol.o(.text.Err_Info_Tx_Process)
    Error_Handler                            0x08003945   Thumb Code    14  main.o(.text.Error_Handler)
    EvrRtxDelay                              0x08003955   Thumb Code     8  rtx_evr.o(.text.EvrRtxDelay)
    EvrRtxDelayCompleted                     0x0800395d   Thumb Code     8  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxDelayError                         0x08003965   Thumb Code     8  rtx_evr.o(.text.EvrRtxDelayError)
    EvrRtxDelayStarted                       0x0800396d   Thumb Code     8  rtx_evr.o(.text.EvrRtxDelayStarted)
    EvrRtxEventFlagsWaitTimeout              0x08003975   Thumb Code     8  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x0800397d   Thumb Code     8  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelInitialize                   0x08003985   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x08003989   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x0800398d   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x08003991   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x08003995   Thumb Code    14  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x080039a5   Thumb Code    10  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x080039b1   Thumb Code    12  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x080039bd   Thumb Code    14  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x080039cd   Thumb Code    12  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x080039d9   Thumb Code    12  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x080039e5   Thumb Code     8  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x080039ed   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x080039f9   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x08003a05   Thumb Code    14  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x08003a15   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x08003a21   Thumb Code     8  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x08003a29   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08003a35   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNew                    0x08003a41   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    EvrRtxMessageQueueNotInserted            0x08003a4d   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x08003a59   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x08003a65   Thumb Code    18  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08003a79   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x08003a85   Thumb Code     8  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x08003a8d   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquireTimeout                0x08003a99   Thumb Code     8  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x08003aa1   Thumb Code    10  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexReleased                      0x08003aad   Thumb Code    10  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquire                   0x08003ab9   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    EvrRtxSemaphoreAcquirePending            0x08003ac5   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    EvrRtxSemaphoreAcquireTimeout            0x08003ad1   Thumb Code     8  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxSemaphoreAcquired                  0x08003ad9   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    EvrRtxSemaphoreCreated                   0x08003ae5   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    EvrRtxSemaphoreError                     0x08003af1   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreError)
    EvrRtxSemaphoreNew                       0x08003afd   Thumb Code    12  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    EvrRtxSemaphoreNotAcquired               0x08003b09   Thumb Code     8  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    EvrRtxSemaphoreRelease                   0x08003b11   Thumb Code     8  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    EvrRtxSemaphoreReleased                  0x08003b19   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    EvrRtxThreadBlocked                      0x08003b25   Thumb Code    10  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x08003b31   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x08003b3d   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x08003b45   Thumb Code    10  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x08003b51   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsWaitCompleted           0x08003b55   Thumb Code    14  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitTimeout             0x08003b65   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadJoined                       0x08003b6d   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x08003b75   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x08003b81   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x08003b89   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x08003b91   Thumb Code    10  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x08003b9d   Thumb Code    10  rtx_evr.o(.text.EvrRtxTimerCallback)
    ExternalAdDatProcess                     0x08003ba9   Thumb Code  1386  task_led.o(.text.ExternalAdDatProcess)
    GlobalProtectDatInit                     0x08004115   Thumb Code   422  task_init.o(.text.GlobalProtectDatInit)
    GlobalProtectInqAnalysis                 0x080042bd   Thumb Code   608  task_protocol.o(.text.GlobalProtectInqAnalysis)
    GlobalProtectSetAnalysis                 0x0800451d   Thumb Code  1036  task_protocol.o(.text.GlobalProtectSetAnalysis)
    GlobleProtectRunParmCheck                0x08004929   Thumb Code  1578  task_protection.o(.text.GlobleProtectRunParmCheck)
    HAL_CAN_ActivateNotification             0x08004f55   Thumb Code    82  stm32f4xx_hal_can.o(.text.HAL_CAN_ActivateNotification)
    HAL_CAN_AddTxMessage                     0x08004fa9   Thumb Code   374  stm32f4xx_hal_can.o(.text.HAL_CAN_AddTxMessage)
    HAL_CAN_ConfigFilter                     0x08005121   Thumb Code   436  stm32f4xx_hal_can.o(.text.HAL_CAN_ConfigFilter)
    HAL_CAN_ErrorCallback                    0x080052d5   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_ErrorCallback)
    HAL_CAN_GetRxMessage                     0x080052dd   Thumb Code   506  stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxMessage)
    HAL_CAN_GetTxMailboxesFreeLevel          0x080054d9   Thumb Code   112  stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxMailboxesFreeLevel)
    HAL_CAN_IRQHandler                       0x08005549   Thumb Code  1028  stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler)
    HAL_CAN_Init                             0x0800594d   Thumb Code   496  stm32f4xx_hal_can.o(.text.HAL_CAN_Init)
    HAL_CAN_MspInit                          0x08005b3d   Thumb Code   418  can.o(.text.HAL_CAN_MspInit)
    HAL_CAN_RxFifo0FullCallback              0x08005ce1   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0FullCallback)
    HAL_CAN_RxFifo0MsgPendingCallback        0x08005ce9   Thumb Code   258  bsp_canlink.o(.text.HAL_CAN_RxFifo0MsgPendingCallback)
    HAL_CAN_RxFifo1FullCallback              0x08005ded   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1FullCallback)
    HAL_CAN_RxFifo1MsgPendingCallback        0x08005df5   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1MsgPendingCallback)
    HAL_CAN_SleepCallback                    0x08005dfd   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_SleepCallback)
    HAL_CAN_Start                            0x08005e05   Thumb Code   140  stm32f4xx_hal_can.o(.text.HAL_CAN_Start)
    HAL_CAN_TxMailbox0AbortCallback          0x08005e91   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0AbortCallback)
    HAL_CAN_TxMailbox0CompleteCallback       0x08005e99   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0CompleteCallback)
    HAL_CAN_TxMailbox1AbortCallback          0x08005ea1   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1AbortCallback)
    HAL_CAN_TxMailbox1CompleteCallback       0x08005ea9   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1CompleteCallback)
    HAL_CAN_TxMailbox2AbortCallback          0x08005eb1   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2AbortCallback)
    HAL_CAN_TxMailbox2CompleteCallback       0x08005eb9   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2CompleteCallback)
    HAL_CAN_WakeUpFromRxMsgCallback          0x08005ec1   Thumb Code     8  stm32f4xx_hal_can.o(.text.HAL_CAN_WakeUpFromRxMsgCallback)
    HAL_DMA_Abort                            0x08005ec9   Thumb Code   244  stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort)
    HAL_DMA_Abort_IT                         0x08005fbd   Thumb Code    68  stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT)
    HAL_GPIO_EXTI_Callback                   0x08006001   Thumb Code  1228  bsp_sgm58601.o(.text.HAL_GPIO_EXTI_Callback)
    HAL_GPIO_EXTI_IRQHandler                 0x080064cd   Thumb Code    58  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler)
    HAL_GPIO_Init                            0x08006509   Thumb Code  1018  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GPIO_ReadPin                         0x08006905   Thumb Code    48  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin)
    HAL_GPIO_TogglePin                       0x08006935   Thumb Code    42  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin)
    HAL_GPIO_WritePin                        0x08006961   Thumb Code    52  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    HAL_GetTick                              0x08006995   Thumb Code    12  stm32f4xx_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x080069a1   Thumb Code    26  stm32f4xx_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x080069bd   Thumb Code    62  stm32f4xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x080069fd   Thumb Code   250  stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08006af9   Thumb Code    82  stm32f4xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x08006b4d   Thumb Code    24  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x08006b65   Thumb Code    64  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x08006ba5   Thumb Code    16  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_PWREx_EnableOverDrive                0x08006bb5   Thumb Code   190  stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive)
    HAL_RCC_ClockConfig                      0x08006c75   Thumb Code   612  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetClockConfig                   0x08006ed9   Thumb Code    84  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    HAL_RCC_GetHCLKFreq                      0x08006f2d   Thumb Code    12  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetPCLK1Freq                     0x08006f39   Thumb Code    34  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    HAL_RCC_GetPCLK2Freq                     0x08006f5d   Thumb Code    34  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    HAL_RCC_GetSysClockFreq                  0x08006f81   Thumb Code   232  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08007069   Thumb Code  1738  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_RNG_Init                             0x08007735   Thumb Code    90  stm32f4xx_hal_rng.o(.text.HAL_RNG_Init)
    HAL_RNG_MspInit                          0x08007791   Thumb Code    62  rng.o(.text.HAL_RNG_MspInit)
    HAL_SPI_Init                             0x080077d1   Thumb Code   260  stm32f4xx_hal_spi.o(.text.HAL_SPI_Init)
    HAL_SPI_MspInit                          0x080078d5   Thumb Code   520  spi.o(.text.HAL_SPI_MspInit)
    HAL_SPI_TransmitReceive                  0x08007add   Thumb Code   910  stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive)
    HAL_TIMEx_BreakCallback                  0x08007e6d   Thumb Code     8  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    HAL_TIMEx_CommutCallback                 0x08007e75   Thumb Code     8  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    HAL_TIMEx_MasterConfigSynchronization    0x08007e7d   Thumb Code   290  stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization)
    HAL_TIM_Base_Init                        0x08007fa1   Thumb Code   166  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    HAL_TIM_Base_MspInit                     0x08008049   Thumb Code     8  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    HAL_TIM_Base_Start                       0x08008051   Thumb Code   234  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start)
    HAL_TIM_Base_Start_IT                    0x0800813d   Thumb Code   246  stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    HAL_TIM_IC_CaptureCallback               0x08008235   Thumb Code     8  stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    HAL_TIM_IRQHandler                       0x0800823d   Thumb Code   642  stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    HAL_TIM_MspPostInit                      0x080084c1   Thumb Code    98  tim.o(.text.HAL_TIM_MspPostInit)
    HAL_TIM_OC_DelayElapsedCallback          0x08008525   Thumb Code     8  stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    HAL_TIM_PWM_ConfigChannel                0x0800852d   Thumb Code   322  stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel)
    HAL_TIM_PWM_Init                         0x08008671   Thumb Code   166  stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init)
    HAL_TIM_PWM_MspInit                      0x08008719   Thumb Code    56  tim.o(.text.HAL_TIM_PWM_MspInit)
    HAL_TIM_PWM_PulseFinishedCallback        0x08008751   Thumb Code     8  stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    HAL_TIM_PeriodElapsedCallback            0x08008759   Thumb Code    34  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    HAL_TIM_TriggerCallback                  0x0800877d   Thumb Code     8  stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    HAL_UARTEx_RxEventCallback               0x08008785   Thumb Code    14  stm32f4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback)
    HAL_UART_ErrorCallback                   0x08008795   Thumb Code     8  stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback)
    HAL_UART_IRQHandler                      0x0800879d   Thumb Code  1072  stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler)
    HAL_UART_Init                            0x08008bcd   Thumb Code   160  stm32f4xx_hal_uart.o(.text.HAL_UART_Init)
    HAL_UART_MspInit                         0x08008c6d   Thumb Code   314  usart.o(.text.HAL_UART_MspInit)
    HAL_UART_RxCpltCallback                  0x08008da9   Thumb Code     8  stm32f4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback)
    HAL_UART_TxCpltCallback                  0x08008db1   Thumb Code     8  stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback)
    HardFault_Handler                        0x08008db9   Thumb Code     4  stm32f4xx_it.o(.text.HardFault_Handler)
    IOSwitch                                 0x08008dbd   Thumb Code   106  iic.o(.text.IOSwitch)
    IntelProtectRunParmCheck                 0x08008e29   Thumb Code  3796  task_protection.o(.text.IntelProtectRunParmCheck)
    InternalProtectDatInit                   0x08009cfd   Thumb Code   740  task_init.o(.text.InternalProtectDatInit)
    InternalProtectInqAnalysis               0x08009fe1   Thumb Code   624  task_protocol.o(.text.InternalProtectInqAnalysis)
    InternalProtectSetAnalysis               0x0800a251   Thumb Code  1060  task_protocol.o(.text.InternalProtectSetAnalysis)
    MB85Ctrl_Read                            0x0800a851   Thumb Code   156  bsp_mb85rs2.o(.text.MB85Ctrl_Read)
    MB85Ctrl_Write                           0x0800a8ed   Thumb Code   202  bsp_mb85rs2.o(.text.MB85Ctrl_Write)
    MX_CAN1_Init                             0x0800a9b9   Thumb Code   152  can.o(.text.MX_CAN1_Init)
    MX_CAN2_Init                             0x0800aa51   Thumb Code   154  can.o(.text.MX_CAN2_Init)
    MX_GPIO_Init                             0x0800aaed   Thumb Code   940  gpio.o(.text.MX_GPIO_Init)
    MX_RNG_Init                              0x0800ae99   Thumb Code    38  rng.o(.text.MX_RNG_Init)
    MX_SPI1_Init                             0x0800aec1   Thumb Code    76  spi.o(.text.MX_SPI1_Init)
    MX_SPI2_Init                             0x0800af0d   Thumb Code    76  spi.o(.text.MX_SPI2_Init)
    MX_SPI3_Init                             0x0800af59   Thumb Code    72  spi.o(.text.MX_SPI3_Init)
    MX_SPI4_Init                             0x0800afa1   Thumb Code    76  spi.o(.text.MX_SPI4_Init)
    MX_TIM2_Init                             0x0800afed   Thumb Code   170  tim.o(.text.MX_TIM2_Init)
    MX_USART1_UART_Init                      0x0800b099   Thumb Code    60  usart.o(.text.MX_USART1_UART_Init)
    MX_USART2_UART_Init                      0x0800b0d5   Thumb Code    60  usart.o(.text.MX_USART2_UART_Init)
    MemManage_Handler                        0x0800b135   Thumb Code     4  stm32f4xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x0800b291   Thumb Code     4  stm32f4xx_it.o(.text.NMI_Handler)
    Network_Data_Pop                         0x0800b305   Thumb Code   320  can_network_driver.o(.text.Network_Data_Pop)
    Network_Data_Push_Rx_Buffer              0x0800b445   Thumb Code   572  can_network_driver.o(.text.Network_Data_Push_Rx_Buffer)
    Network_Data_Push_Tx_Buffer              0x0800b681   Thumb Code   458  can_network_driver.o(.text.Network_Data_Push_Tx_Buffer)
    OS_Tick_AcknowledgeIRQ                   0x0800b84d   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x0800b859   Thumb Code    62  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x0800b899   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x0800b8a1   Thumb Code   128  os_systick.o(.text.OS_Tick_Setup)
    PCA9555_IOConfigReg                      0x0800b921   Thumb Code   246  bsp_nca9555.o(.text.PCA9555_IOConfigReg)
    Pca9555_RegRead                          0x0800ba19   Thumb Code   252  bsp_nca9555.o(.text.Pca9555_RegRead)
    Protect_Action_Func                      0x0800bb15   Thumb Code   490  task_workstep.o(.text.Protect_Action_Func)
    ProtocolDataProcess                      0x0800bd01   Thumb Code   978  task_protocol.o(.text.ProtocolDataProcess)
    ReadAddr                                 0x0800c0d5   Thumb Code   198  task_led.o(.text.ReadAddr)
    RecordDatSync                            0x0800c1a1   Thumb Code  1108  task_protocol.o(.text.RecordDatSync)
    RecordDatUpcast                          0x0800c5f5   Thumb Code   382  task_protocol.o(.text.RecordDatUpcast)
    RecordInqAnalysis                        0x0800c775   Thumb Code   166  task_protocol.o(.text.RecordInqAnalysis)
    SGM58601_CS_0                            0x0800ca01   Thumb Code   120  bsp_sgm58601.o(.text.SGM58601_CS_0)
    SGM58601_CS_1                            0x0800ca79   Thumb Code   120  bsp_sgm58601.o(.text.SGM58601_CS_1)
    SGM58601_INIT                            0x0800caf1   Thumb Code    34  bsp_sgm58601.o(.text.SGM58601_INIT)
    SGM58601_READ_DATA                       0x0800cb15   Thumb Code   158  bsp_sgm58601.o(.text.SGM58601_READ_DATA)
    SGM58601_REG_INIT                        0x0800cbb5   Thumb Code   466  bsp_sgm58601.o(.text.SGM58601_REG_INIT)
    SGM58601_SWITCH_CH                       0x0800cd89   Thumb Code    42  bsp_sgm58601.o(.text.SGM58601_SWITCH_CH)
    SystemClock_Config                       0x0800d1b1   Thumb Code   208  main.o(.text.SystemClock_Config)
    SystemInit                               0x0800d281   Thumb Code    18  system_stm32f4xx.o(.text.SystemInit)
    SystemInqAnalysis                        0x0800d295   Thumb Code   336  task_protocol.o(.text.SystemInqAnalysis)
    SystemSetAnalysis                        0x0800d3e5   Thumb Code  1228  task_protocol.o(.text.SystemSetAnalysis)
    TIM4_IRQHandler                          0x0800d8b1   Thumb Code   236  stm32f4xx_it.o(.text.TIM4_IRQHandler)
    TIM5_IRQHandler                          0x0800d9a1   Thumb Code  1564  stm32f4xx_it.o(.text.TIM5_IRQHandler)
    TIM8_TRG_COM_TIM14_IRQHandler            0x0800dfbd   Thumb Code    16  stm32f4xx_it.o(.text.TIM8_TRG_COM_TIM14_IRQHandler)
    TIM_Base_SetConfig                       0x0800dfcd   Thumb Code   410  stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    TIM_OC2_SetConfig                        0x0800e255   Thumb Code   244  stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig)
    Tier2ToTier1                             0x0800e565   Thumb Code   378  task_init.o(.text.Tier2ToTier1)
    USART1_IRQHandler                        0x0800ebed   Thumb Code    16  stm32f4xx_it.o(.text.USART1_IRQHandler)
    USART2_IRQHandler                        0x0800ebfd   Thumb Code    16  stm32f4xx_it.o(.text.USART2_IRQHandler)
    UsageFault_Handler                       0x0800ec0d   Thumb Code     4  stm32f4xx_it.o(.text.UsageFault_Handler)
    WorkstepInqAnalysis                      0x0800ec11   Thumb Code   636  task_protocol.o(.text.WorkstepInqAnalysis)
    WorkstepProtUpcast                       0x0800ee8d   Thumb Code   400  task_protocol.o(.text.WorkstepProtUpcast)
    WorkstepRunstaSetAnalysis                0x0800f01d   Thumb Code  1522  task_protocol.o(.text.WorkstepRunstaSetAnalysis)
    WorkstepSetAnalysis                      0x0800f611   Thumb Code  2152  task_protocol.o(.text.WorkstepSetAnalysis)
    Workstep_Abort_Func                      0x0800fe79   Thumb Code  3984  task_workstep.o(.text.Workstep_Abort_Func)
    Workstep_Analysis_Func                   0x08010e09   Thumb Code  1454  task_workstep.o(.text.Workstep_Analysis_Func)
    Workstep_Execute_Func                    0x080113b9   Thumb Code   740  task_workstep.o(.text.Workstep_Execute_Func)
    Workstep_Protect_Func                    0x080116a1   Thumb Code  1336  task_workstep.o(.text.Workstep_Protect_Func)
    Workstep_Reload_Func                     0x08011bd9   Thumb Code  3512  task_workstep.o(.text.Workstep_Reload_Func)
    Workstep_Switch_Func                     0x08012991   Thumb Code   560  task_workstep.o(.text.Workstep_Switch_Func)
    bsp_DelayMS                              0x08012f85   Thumb Code    22  bsp_dwt.o(.text.bsp_DelayMS)
    bsp_DelayUS                              0x08012f9d   Thumb Code    84  bsp_dwt.o(.text.bsp_DelayUS)
    bsp_InitDWT                              0x08012ff1   Thumb Code    46  bsp_dwt.o(.text.bsp_InitDWT)
    bsp_RCC_TIM_Enable                       0x08013021   Thumb Code   754  bsp_timer.o(.text.bsp_RCC_TIM_Enable)
    bsp_SetTIMforInt                         0x08013315   Thumb Code   726  bsp_timer.o(.text.bsp_SetTIMforInt)
    channel_runsta_sync                      0x080135ed   Thumb Code   316  task_workstep.o(.text.channel_runsta_sync)
    i2c_Ack                                  0x08013729   Thumb Code   340  iic.o(.text.i2c_Ack)
    i2c_Delay                                0x0801387d   Thumb Code    40  iic.o(.text.i2c_Delay)
    i2c_NAck                                 0x080138a5   Thumb Code   268  iic.o(.text.i2c_NAck)
    i2c_ReadByte                             0x080139b1   Thumb Code   582  iic.o(.text.i2c_ReadByte)
    i2c_SendByte                             0x08013bf9   Thumb Code   612  iic.o(.text.i2c_SendByte)
    i2c_Start                                0x08013e5d   Thumb Code   320  iic.o(.text.i2c_Start)
    i2c_Stop                                 0x08013f9d   Thumb Code   262  iic.o(.text.i2c_Stop)
    i2c_WaitAck                              0x080140a5   Thumb Code   546  iic.o(.text.i2c_WaitAck)
    main                                     0x080145e9   Thumb Code   116  main.o(.text.main)
    osDelay                                  0x0801465d   Thumb Code    88  rtx_delay.o(.text.osDelay)
    osKernelInitialize                       0x080146b5   Thumb Code    78  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08014705   Thumb Code    74  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08014751   Thumb Code   130  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x080147d5   Thumb Code   118  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x0801484d   Thumb Code   148  rtx_msgqueue.o(.text.osMessageQueuePut)
    osRtxErrorNotify                         0x080148e1   Thumb Code    46  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x08014929   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelPreInit                       0x08014949   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x0801494d   Thumb Code   342  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08014aa5   Thumb Code   200  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08014b6d   Thumb Code   160  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08014c0d   Thumb Code    78  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08014c5d   Thumb Code   110  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08014ccd   Thumb Code   162  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08014f19   Thumb Code   156  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x08014fb5   Thumb Code   160  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x08015091   Thumb Code   196  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08015155   Thumb Code    70  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x0801543d   Thumb Code   400  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x080155cd   Thumb Code   154  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08015745   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x0801577d   Thumb Code   124  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x080157f9   Thumb Code    54  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08015855   Thumb Code    94  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x0801591d   Thumb Code    32  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x0801593d   Thumb Code    32  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08015971   Thumb Code    66  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x080159b5   Thumb Code   132  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08015a39   Thumb Code    38  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08015a61   Thumb Code   124  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08015add   Thumb Code    76  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08015b29   Thumb Code   272  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x08015c39   Thumb Code   104  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x08015d49   Thumb Code    98  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x08015dad   Thumb Code   118  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x08015e25   Thumb Code    82  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x08015e79   Thumb Code    36  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x08015e9d   Thumb Code   118  rtx_thread.o(.text.osThreadNew)
    __scatterload_copy                       0x08017117   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08017125   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08017127   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    osRtxConfig                              0x08017134   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x0801719c   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x080171d4   Data          16  system_stm32f4xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x080171e4   Data           8  system_stm32f4xx.o(.rodata.APBPrescTable)
    DcdcCanSema_Attr                         0x080171ec   Data          16  task_start.o(.rodata.DcdcCanSema_Attr)
    ProtectionSema_Attr                      0x080171fc   Data          16  task_start.o(.rodata.ProtectionSema_Attr)
    ThreadDcdc_Attr                          0x0801720c   Data          36  task_start.o(.rodata.ThreadDcdc_Attr)
    ThreadLed_Attr                           0x08017230   Data          36  task_start.o(.rodata.ThreadLed_Attr)
    ThreadProtection_Attr                    0x08017254   Data          36  task_start.o(.rodata.ThreadProtection_Attr)
    ThreadStart_Attr                         0x08017278   Data          36  main.o(.rodata.ThreadStart_Attr)
    ThreadWorkstep_Attr                      0x0801729c   Data          36  task_start.o(.rodata.ThreadWorkstep_Attr)
    osRtxUserSVC                             0x080172c0   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x080173b0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080173d0   Number         0  anon$$obj.o(Region$$Table)
    AcDumpConnectFlag                        0x20000000   Data           1  task_workstep.o(.data.AcDumpConnectFlag)
    GP_CheckList                             0x20000034   Data         144  task_protection.o(.data.GP_CheckList)
    IP_CheckList                             0x200000c4   Data         324  task_protection.o(.data.IP_CheckList)
    SystemCoreClock                          0x20000208   Data           4  system_stm32f4xx.o(.data.SystemCoreClock)
    data_upcast_period                       0x2000020c   Data           4  task_protocol.o(.data.data_upcast_period)
    en_SysMode                               0x20000210   Data           1  task_protocol.o(.data.en_SysMode)
    heart_beat_flag                          0x20000211   Data           1  task_protocol.o(.data.heart_beat_flag)
    osRtxInfo                                0x20000214   Data         164  rtx_kernel.o(.data.os)
    refresh_continue                         0x200002b8   Data           8  task_protocol.o(.data.refresh_continue)
    ucProtocolVersion                        0x200002c0   Data           1  task_protocol.o(.data.ucProtocolVersion)
    upcast_enable                            0x200002c1   Data           1  task_protocol.o(.data.upcast_enable)
    uwTickFreq                               0x200002c3   Data           1  stm32f4xx_hal.o(.data.uwTickFreq)
    uwTickPrio                               0x200002c4   Data           4  stm32f4xx_hal.o(.data.uwTickPrio)
    workstep_flag_AbortPrio                  0x200002c8   Data           8  task_workstep.o(.data.workstep_flag_AbortPrio)
    ADC1Count                                0x200002d0   Data           2  bsp_sgm58601.o(.bss.ADC1Count)
    ADC1_DATA                                0x200002d4   Data          32  bsp_sgm58601.o(.bss.ADC1_DATA)
    ADC1_DATA_AVG                            0x200002f4   Data          32  bsp_sgm58601.o(.bss.ADC1_DATA_AVG)
    ADC1_DATA_SUM                            0x20000318   Data          64  bsp_sgm58601.o(.bss.ADC1_DATA_SUM)
    ADC2Count                                0x20000358   Data           2  bsp_sgm58601.o(.bss.ADC2Count)
    ADC2_DATA                                0x2000035c   Data          32  bsp_sgm58601.o(.bss.ADC2_DATA)
    ADC2_DATA_AVG                            0x2000037c   Data          32  bsp_sgm58601.o(.bss.ADC2_DATA_AVG)
    ADC2_DATA_SUM                            0x200003a0   Data          64  bsp_sgm58601.o(.bss.ADC2_DATA_SUM)
    ADC3Count                                0x200003e0   Data           2  bsp_sgm58601.o(.bss.ADC3Count)
    ADC3_DATA                                0x200003e4   Data          32  bsp_sgm58601.o(.bss.ADC3_DATA)
    ADC3_DATA_AVG                            0x20000404   Data          32  bsp_sgm58601.o(.bss.ADC3_DATA_AVG)
    ADC3_DATA_SUM                            0x20000428   Data          64  bsp_sgm58601.o(.bss.ADC3_DATA_SUM)
    CAN1_RxMsg                               0x20000468   Data          28  bsp_canlink.o(.bss.CAN1_RxMsg)
    CAN2_RxMsg                               0x20000484   Data          28  bsp_canlink.o(.bss.CAN2_RxMsg)
    CAN_TxMsg                                0x200004a0   Data          24  bsp_canlink.o(.bss.CAN_TxMsg)
    CONV_CNT                                 0x200004b8   Data           3  bsp_sgm58601.o(.bss.CONV_CNT)
    ContactCheckFlag                         0x200004bb   Data           8  task_workstep.o(.bss.ContactCheckFlag)
    CurrOk                                   0x200004c3   Data           2  bsp_sgm58601.o(.bss.CurrOk)
    DRDY_NUM                                 0x200004c5   Data           3  bsp_sgm58601.o(.bss.DRDY_NUM)
    DcdcCanId                                0x200004c8   Data           4  task_dcdc.o(.bss.DcdcCanId)
    DcdcParam                                0x200004cc   Data         416  task_dcdc.o(.bss.DcdcParam)
    DcdcRecvBuffer                           0x2000066c   Data           8  task_dcdc.o(.bss.DcdcRecvBuffer)
    DcdcRecvFrame                            0x20000674   Data           8  task_dcdc.o(.bss.DcdcRecvFrame)
    DcdcSendFrame                            0x2000067c   Data           8  task_dcdc.o(.bss.DcdcSendFrame)
    ErrCnt                                   0x20000684   Data           2  bsp_canlink.o(.bss.ErrCnt)
    First_Alarm                              0x2000068a   Data           1  task_protection.o(.bss.First_Alarm)
    GP_Alarm_Flag                            0x2000068c   Data          32  task_protection.o(.bss.GP_Alarm_Flag)
    GP_Alarm_Flag_History                    0x200006ac   Data          32  task_protection.o(.bss.GP_Alarm_Flag_History)
    IP_Alarm_Flag                            0x200006d0   Data          64  task_protection.o(.bss.IP_Alarm_Flag)
    IP_Alarm_Flag_History                    0x20000710   Data          32  task_protection.o(.bss.IP_Alarm_Flag_History)
    ProtectMaskFlag                          0x20000731   Data           8  task_workstep.o(.bss.ProtectMaskFlag)
    Protect_Flag_ACDC                        0x20000739   Data           8  task_workstep.o(.bss.Protect_Flag_ACDC)
    Protect_Flag_Global                      0x20000741   Data           8  task_workstep.o(.bss.Protect_Flag_Global)
    Protect_Flag_Internal                    0x20000749   Data           8  task_workstep.o(.bss.Protect_Flag_Internal)
    Protect_Flag_Workstep                    0x20000751   Data           8  task_workstep.o(.bss.Protect_Flag_Workstep)
    Reconnection_Flg                         0x20000759   Data           1  task_protocol.o(.bss.Reconnection_Flg)
    SemaDcdcCan                              0x2000075c   Data           4  task_start.o(.bss.SemaDcdcCan)
    SemaProtection                           0x20000760   Data           4  task_start.o(.bss.SemaProtection)
    SysModeProtMaskFlag                      0x20000764   Data           1  task_protection.o(.bss.SysModeProtMaskFlag)
    ThreadIdStart                            0x20000768   Data           4  main.o(.bss.ThreadIdStart)
    ThreadIdTaskDcdc                         0x2000076c   Data           4  task_start.o(.bss.ThreadIdTaskDcdc)
    ThreadIdTaskLed                          0x20000770   Data           4  task_start.o(.bss.ThreadIdTaskLed)
    ThreadIdTaskProtection                   0x20000774   Data           4  task_start.o(.bss.ThreadIdTaskProtection)
    ThreadIdTaskWorkstep                     0x20000778   Data           4  task_start.o(.bss.ThreadIdTaskWorkstep)
    Tier1                                    0x2000077c   Data        2664  task_protocol.o(.bss.Tier1)
    Tier2                                    0x200011e4   Data        7700  task_protocol.o(.bss.Tier2)
    Tstamp                                   0x20002ff8   Data           8  task_protocol.o(.bss.Tstamp)
    TxMeg                                    0x20003000   Data          24  can_network_transplant.o(.bss.TxMeg)
    VcontactCur                              0x20003018   Data          32  task_workstep.o(.bss.VcontactCur)
    VcontactPre                              0x20003038   Data          32  task_workstep.o(.bss.VcontactPre)
    abort_type_flag                          0x20003058   Data           8  task_workstep.o(.bss.abort_type_flag)
    can_rx_buffer                            0x20003060   Data        4608  can_network_protocol.o(.bss.can_rx_buffer)
    clear_flag                               0x20004260   Data           1  task_protocol.o(.bss.clear_flag)
    contact_test_once_flag                   0x20004261   Data           8  task_workstep.o(.bss.contact_test_once_flag)
    dcdc_err_flag                            0x20004269   Data           1  task_dcdc.o(.bss.dcdc_err_flag)
    dcdc_on_off_state                        0x2000426a   Data           1  task_workstep.o(.bss.dcdc_on_off_state)
    err_buffer                               0x2000426c   Data        4292  can_network_driver.o(.bss.err_buffer)
    features                                 0x20005330   Data           1  task_protection.o(.bss.features)
    hcan1                                    0x20005334   Data          40  can.o(.bss.hcan1)
    hcan2                                    0x2000535c   Data          40  can.o(.bss.hcan2)
    heart_beat_cnt                           0x20005384   Data           4  task_led.o(.bss.heart_beat_cnt)
    hrng                                     0x20005388   Data          16  rng.o(.bss.hrng)
    hspi1                                    0x20005398   Data          88  spi.o(.bss.hspi1)
    hspi2                                    0x200053f0   Data          88  spi.o(.bss.hspi2)
    hspi3                                    0x20005448   Data          88  spi.o(.bss.hspi3)
    hspi4                                    0x200054a0   Data          88  spi.o(.bss.hspi4)
    htim14                                   0x200054f8   Data          72  stm32f4xx_hal_timebase_tim.o(.bss.htim14)
    htim2                                    0x20005540   Data          72  tim.o(.bss.htim2)
    huart1                                   0x20005588   Data          68  usart.o(.bss.huart1)
    huart2                                   0x200055cc   Data          68  usart.o(.bss.huart2)
    lenAnalysis                              0x20005610   Data           2  task_protocol.o(.bss.lenAnalysis)
    .bss.os.msgqueue.cb$$Base                0x20011de8   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20011e1c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20011e6c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20011ef4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    pack                                     0x200123f8   Data          12  task_protocol.o(.bss.pack)
    protect_flag_upcast                      0x20012404   Data           8  task_workstep.o(.bss.protect_flag_upcast)
    record_data_upcast_flag                  0x2001240c   Data           8  task_workstep.o(.bss.record_data_upcast_flag)
    run_time_cnt                             0x20012418   Data          64  task_workstep.o(.bss.run_time_cnt)
    rx_buffer                                0x2001245c   Data        6340  can_network_driver.o(.bss.rx_buffer)
    st_DebugParameter                        0x20013d20   Data          28  task_protocol.o(.bss.st_DebugParameter)
    start_state_flag                         0x20013d3c   Data           8  task_workstep.o(.bss.start_state_flag)
    time4_cnt                                0x20013d44   Data           1  stm32f4xx_it.o(.bss.time4_cnt)
    time5_cnt                                0x20013d45   Data           1  stm32f4xx_it.o(.bss.time5_cnt)
    time_over_stop                           0x20013d46   Data           8  task_workstep.o(.bss.time_over_stop)
    tx_buffer                                0x20013d50   Data        6340  can_network_driver.o(.bss.tx_buffer)
    ucGProtCntCur                            0x20015618   Data          32  task_protection.o(.bss.ucGProtCntCur)
    ucGProtCntPre                            0x20015638   Data          32  task_protection.o(.bss.ucGProtCntPre)
    ucIProtCntCur                            0x20015658   Data          96  task_protection.o(.bss.ucIProtCntCur)
    ucIProtCntPre                            0x200156b8   Data          96  task_protection.o(.bss.ucIProtCntPre)
    un_AddrAnalysis                          0x20015718   Data           1  task_led.o(.bss.un_AddrAnalysis)
    un_DcdcIdAnalysis                        0x2001571c   Data           4  task_led.o(.bss.un_DcdcIdAnalysis)
    unpack                                   0x20015720   Data          12  task_protocol.o(.bss.unpack)
    uwTick                                   0x2001572c   Data           4  stm32f4xx_hal.o(.bss.uwTick)
    workstep_flag_CriticalZone               0x20015730   Data           8  task_protocol.o(.bss.workstep_flag_CriticalZone)
    workstep_flag_ErrWord                    0x20015738   Data          16  task_workstep.o(.bss.workstep_flag_ErrWord)
    workstep_flag_RunstaSet                  0x20015748   Data           1  task_protocol.o(.bss.workstep_flag_RunstaSet)
    __initial_sp                             0x20017750   Data           0  startup_stm32f427xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001ad

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000176a0, Max: 0x00100000, ABSOLUTE, COMPRESSED[0x000174a0])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000173d0, Max: 0x00100000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001ac   Data   RO            3    RESET               startup_stm32f427xx.o
    0x080001ac   0x080001ac   0x00000000   Code   RO         3050  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x080001ac   0x080001ac   0x00000004   Code   RO         3079    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x080001b0   0x080001b0   0x00000004   Code   RO         3082    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x080001b4   0x080001b4   0x00000000   Code   RO         3084    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x080001b4   0x080001b4   0x00000000   Code   RO         3086    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x080001b4   0x080001b4   0x00000008   Code   RO         3087    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x080001bc   0x080001bc   0x00000000   Code   RO         3089    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x080001bc   0x080001bc   0x00000000   Code   RO         3091    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x080001bc   0x080001bc   0x00000004   Code   RO         3080    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x080001c0   0x080001c0   0x00000024   Code   RO            4    .text               startup_stm32f427xx.o
    0x080001e4   0x080001e4   0x000000c4   Code   RO         1937    .text               irq_cm4f.o
    0x080002a8   0x080002a8   0x00000062   Code   RO         3053    .text               mc_w.l(uldiv.o)
    0x0800030a   0x0800030a   0x00000062   Code   RO         3055    .text               mc_w.l(ldiv.o)
    0x0800036c   0x0800036c   0x00000024   Code   RO         3057    .text               mc_w.l(memcpya.o)
    0x08000390   0x08000390   0x00000024   Code   RO         3059    .text               mc_w.l(memseta.o)
    0x080003b4   0x080003b4   0x0000014e   Code   RO         3063    .text               mf_w.l(dadd.o)
    0x08000502   0x08000502   0x000000e4   Code   RO         3065    .text               mf_w.l(dmul.o)
    0x080005e6   0x080005e6   0x000000de   Code   RO         3067    .text               mf_w.l(ddiv.o)
    0x080006c4   0x080006c4   0x00000036   Code   RO         3069    .text               mf_w.l(dcmple.o)
    0x080006fa   0x080006fa   0x00000036   Code   RO         3071    .text               mf_w.l(dcmpge.o)
    0x08000730   0x08000730   0x0000002c   Code   RO         3073    .text               mf_w.l(ffixul.o)
    0x0800075c   0x0800075c   0x00000026   Code   RO         3075    .text               mf_w.l(f2d.o)
    0x08000782   0x08000782   0x00000038   Code   RO         3077    .text               mf_w.l(d2f.o)
    0x080007ba   0x080007ba   0x0000001e   Code   RO         3093    .text               mc_w.l(llshl.o)
    0x080007d8   0x080007d8   0x00000020   Code   RO         3095    .text               mc_w.l(llushr.o)
    0x080007f8   0x080007f8   0x00000024   Code   RO         3097    .text               mc_w.l(llsshr.o)
    0x0800081c   0x0800081c   0x00000000   Code   RO         3099    .text               mc_w.l(iusefp.o)
    0x0800081c   0x0800081c   0x0000006e   Code   RO         3100    .text               mf_w.l(fepilogue.o)
    0x0800088a   0x0800088a   0x000000ba   Code   RO         3102    .text               mf_w.l(depilogue.o)
    0x08000944   0x08000944   0x00000024   Code   RO         3104    .text               mc_w.l(init.o)
    0x08000968   0x08000968   0x00000056   Code   RO         3114    .text               mc_w.l(__dczerorl2.o)
    0x080009be   0x080009be   0x00000002   PAD
    0x080009c0   0x080009c0   0x0000003c   Code   RO         1512    .text.ADC_COMMAND_SET  bsp_sgm58601.o
    0x080009fc   0x080009fc   0x00000038   Code   RO         1508    .text.ADC_SET_CHANNEL  bsp_sgm58601.o
    0x08000a34   0x08000a34   0x000000ae   Code   RO         1520    .text.ADC_WRITE_TO_ONE_REG  bsp_sgm58601.o
    0x08000ae2   0x08000ae2   0x00000002   PAD
    0x08000ae4   0x08000ae4   0x00000150   Code   RO         1723    .text.AdDataInqAnalysis  task_protocol.o
    0x08000c34   0x08000c34   0x0000006e   Code   RO         1912    .text.AlarmClear    task_protection.o
    0x08000ca2   0x08000ca2   0x00000002   PAD
    0x08000ca4   0x08000ca4   0x0000030e   Code   RO         1910    .text.AlarmQuarry   task_protection.o
    0x08000fb2   0x08000fb2   0x00000002   PAD
    0x08000fb4   0x08000fb4   0x00000034   Code   RO         1868    .text.AppTaskDcdc   task_dcdc.o
    0x08000fe8   0x08000fe8   0x000000e4   Code   RO         1675    .text.AppTaskLed    task_led.o
    0x080010cc   0x080010cc   0x000004e8   Code   RO         1914    .text.AppTaskProtection  task_protection.o
    0x080015b4   0x080015b4   0x0000004e   Code   RO         1769    .text.AppTaskStart  task_start.o
    0x08001602   0x08001602   0x00000002   PAD
    0x08001604   0x08001604   0x0000003c   Code   RO         1813    .text.AppTaskWorkstep  task_workstep.o
    0x08001640   0x08001640   0x00000050   Code   RO         1793    .text.BatteryFormattingStop  task_workstep.o
    0x08001690   0x08001690   0x00000050   Code   RO         1886    .text.Bit2ChNum     task_dcdc.o
    0x080016e0   0x080016e0   0x000000f0   Code   RO         1391    .text.BspInit       bsp.o
    0x080017d0   0x080017d0   0x00000004   Code   RO          132    .text.BusFault_Handler  stm32f4xx_it.o
    0x080017d4   0x080017d4   0x00000010   Code   RO          138    .text.CAN1_RX0_IRQHandler  stm32f4xx_it.o
    0x080017e4   0x080017e4   0x00000010   Code   RO          140    .text.CAN1_RX1_IRQHandler  stm32f4xx_it.o
    0x080017f4   0x080017f4   0x00000010   Code   RO          152    .text.CAN2_RX0_IRQHandler  stm32f4xx_it.o
    0x08001804   0x08001804   0x00000010   Code   RO          154    .text.CAN2_RX1_IRQHandler  stm32f4xx_it.o
    0x08001814   0x08001814   0x00000092   Code   RO         1639    .text.CAN_SendMultiFrames  can_network_transplant.o
    0x080018a6   0x080018a6   0x00000002   PAD
    0x080018a8   0x080018a8   0x00000090   Code   RO         1645    .text.CAN_SendSingleFrame  can_network_transplant.o
    0x08001938   0x08001938   0x00000058   Code   RO         1695    .text.CRC16N        task_protocol.o
    0x08001990   0x08001990   0x00000074   Code   RO         1693    .text.CRC16_2       task_protocol.o
    0x08001a04   0x08001a04   0x00000042   Code   RO         1664    .text.CalibrateDatInit  task_init.o
    0x08001a46   0x08001a46   0x00000002   PAD
    0x08001a48   0x08001a48   0x000001ca   Code   RO         1721    .text.CalibrateInqAnalysis  task_protocol.o
    0x08001c12   0x08001c12   0x00000002   PAD
    0x08001c14   0x08001c14   0x00000328   Code   RO         1719    .text.CalibrateSetAnalysis  task_protocol.o
    0x08001f3c   0x08001f3c   0x0000007a   Code   RO         1417    .text.CanSendMsg    bsp_canlink.o
    0x08001fb6   0x08001fb6   0x00000002   PAD
    0x08001fb8   0x08001fb8   0x00000038   Code   RO         1641    .text.Can_Data_Pack_Analysis  can_network_transplant.o
    0x08001ff0   0x08001ff0   0x00000068   Code   RO         1637    .text.Can_Data_Pack_Send  can_network_transplant.o
    0x08002058   0x08002058   0x000000f0   Code   RO         1613    .text.Can_Network_Analysis_Process  can_network_protocol.o
    0x08002148   0x08002148   0x0000013a   Code   RO         1623    .text.Can_Network_Func  can_network_protocol.o
    0x08002282   0x08002282   0x00000002   PAD
    0x08002284   0x08002284   0x000004ba   Code   RO         1619    .text.Can_Network_Rx_Process  can_network_protocol.o
    0x0800273e   0x0800273e   0x00000002   PAD
    0x08002740   0x08002740   0x000000f4   Code   RO         1615    .text.Can_Network_Rx_Timeout  can_network_protocol.o
    0x08002834   0x08002834   0x0000005a   Code   RO         1609    .text.Can_Network_Tx_Process  can_network_protocol.o
    0x0800288e   0x0800288e   0x00000002   PAD
    0x08002890   0x08002890   0x00000068   Code   RO         1621    .text.Can_Network_Upcast  can_network_protocol.o
    0x080028f8   0x080028f8   0x00000036   Code   RO         1617    .text.Can_Rx_Buffer_Clr  can_network_protocol.o
    0x0800292e   0x0800292e   0x00000002   PAD
    0x08002930   0x08002930   0x00000050   Code   RO         1846    .text.CheckSum      task_dcdc.o
    0x08002980   0x08002980   0x000000c0   Code   RO         1771    .text.CreateTask    task_start.o
    0x08002a40   0x08002a40   0x0000005a   Code   RO         1591    .text.Data_Handler_Inquiry  can_network_driver.o
    0x08002a9a   0x08002a9a   0x00000002   PAD
    0x08002a9c   0x08002a9c   0x00000092   Code   RO         1595    .text.Data_Handler_Request  can_network_driver.o
    0x08002b2e   0x08002b2e   0x00000002   PAD
    0x08002b30   0x08002b30   0x00000066   Code   RO         1882    .text.DcdcAdcDataReadRep  task_dcdc.o
    0x08002b96   0x08002b96   0x00000002   PAD
    0x08002b98   0x08002b98   0x00000064   Code   RO         1880    .text.DcdcClibParamInqRep  task_dcdc.o
    0x08002bfc   0x08002bfc   0x0000008a   Code   RO         1852    .text.DcdcCtrlParaSet  task_dcdc.o
    0x08002c86   0x08002c86   0x00000002   PAD
    0x08002c88   0x08002c88   0x00000092   Code   RO         1878    .text.DcdcCtrlParamInqRep  task_dcdc.o
    0x08002d1a   0x08002d1a   0x00000002   PAD
    0x08002d1c   0x08002d1c   0x00000066   Code   RO         1844    .text.DcdcParaInq   task_dcdc.o
    0x08002d82   0x08002d82   0x00000002   PAD
    0x08002d84   0x08002d84   0x0000006e   Code   RO         1872    .text.DcdcProtectInqRep  task_dcdc.o
    0x08002df2   0x08002df2   0x00000002   PAD
    0x08002df4   0x08002df4   0x00000058   Code   RO         1848    .text.DcdcProtectSet  task_dcdc.o
    0x08002e4c   0x08002e4c   0x00000090   Code   RO         1874    .text.DcdcProtectTrig  task_dcdc.o
    0x08002edc   0x08002edc   0x00000258   Code   RO         1876    .text.DcdcRecordDataInqRep  task_dcdc.o
    0x08003134   0x08003134   0x0000004e   Code   RO         1864    .text.DcdcRecvHandle  task_dcdc.o
    0x08003182   0x08003182   0x00000002   PAD
    0x08003184   0x08003184   0x00000058   Code   RO         1850    .text.DcdcRunModeSet  task_dcdc.o
    0x080031dc   0x080031dc   0x00000054   Code   RO         1854    .text.DcdcRunStaSet  task_dcdc.o
    0x08003230   0x08003230   0x0000001a   Code   RO         1870    .text.DcdcSetCmdRep  task_dcdc.o
    0x0800324a   0x0800324a   0x00000002   PAD
    0x0800324c   0x0800324c   0x00000036   Code   RO         1884    .text.DcdcSystemInqRep  task_dcdc.o
    0x08003282   0x08003282   0x00000002   PAD
    0x08003284   0x08003284   0x00000176   Code   RO         1731    .text.DebugDataInqAnalysis  task_protocol.o
    0x080033fa   0x080033fa   0x00000002   PAD
    0x080033fc   0x080033fc   0x00000002   Code   RO          136    .text.DebugMon_Handler  stm32f4xx_it.o
    0x080033fe   0x080033fe   0x00000002   PAD
    0x08003400   0x08003400   0x000000d0   Code   RO         1729    .text.DebugParamSetAnalysis  task_protocol.o
    0x080034d0   0x080034d0   0x000000b6   Code   RO         1733    .text.DebugSystemSetAnalysis  task_protocol.o
    0x08003586   0x08003586   0x00000002   PAD
    0x08003588   0x08003588   0x00000026   Code   RO         1735    .text.DefaultAnalyze  task_protocol.o
    0x080035ae   0x080035ae   0x00000002   PAD
    0x080035b0   0x080035b0   0x0000001c   Code   RO          148    .text.EXTI15_10_IRQHandler  stm32f4xx_it.o
    0x080035cc   0x080035cc   0x0000001a   Code   RO          142    .text.EXTI9_5_IRQHandler  stm32f4xx_it.o
    0x080035e6   0x080035e6   0x00000002   PAD
    0x080035e8   0x080035e8   0x0000008a   Code   RO         1666    .text.EepromDatInit  task_init.o
    0x08003672   0x08003672   0x00000002   PAD
    0x08003674   0x08003674   0x00000036   Code   RO         1585    .text.Err_Buffer_Clr  can_network_driver.o
    0x080036aa   0x080036aa   0x00000002   PAD
    0x080036ac   0x080036ac   0x00000124   Code   RO         1643    .text.Err_Info_Pack  can_network_transplant.o
    0x080037d0   0x080037d0   0x000000b4   Code   RO         1583    .text.Err_Info_Pop  can_network_driver.o
    0x08003884   0x08003884   0x000000b8   Code   RO         1587    .text.Err_Info_Push  can_network_driver.o
    0x0800393c   0x0800393c   0x00000008   Code   RO         1611    .text.Err_Info_Tx_Process  can_network_protocol.o
    0x08003944   0x08003944   0x0000000e   Code   RO           15    .text.Error_Handler  main.o
    0x08003952   0x08003952   0x00000002   PAD
    0x08003954   0x08003954   0x00000008   Code   RO         2168    .text.EvrRtxDelay   rtx_evr.o
    0x0800395c   0x0800395c   0x00000008   Code   RO         2176    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x08003964   0x08003964   0x00000008   Code   RO         2166    .text.EvrRtxDelayError  rtx_evr.o
    0x0800396c   0x0800396c   0x00000008   Code   RO         2172    .text.EvrRtxDelayStarted  rtx_evr.o
    0x08003974   0x08003974   0x00000008   Code   RO         2224    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x0800397c   0x0800397c   0x00000008   Code   RO         2040    .text.EvrRtxKernelError  rtx_evr.o
    0x08003984   0x08003984   0x00000002   Code   RO         2042    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x08003986   0x08003986   0x00000002   PAD
    0x08003988   0x08003988   0x00000002   Code   RO         2044    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x0800398a   0x0800398a   0x00000002   PAD
    0x0800398c   0x0800398c   0x00000002   Code   RO         2052    .text.EvrRtxKernelStart  rtx_evr.o
    0x0800398e   0x0800398e   0x00000002   PAD
    0x08003990   0x08003990   0x00000002   Code   RO         2054    .text.EvrRtxKernelStarted  rtx_evr.o
    0x08003992   0x08003992   0x00000002   PAD
    0x08003994   0x08003994   0x0000000e   Code   RO         2030    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x080039a2   0x080039a2   0x00000002   PAD
    0x080039a4   0x080039a4   0x0000000a   Code   RO         2036    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x080039ae   0x080039ae   0x00000002   PAD
    0x080039b0   0x080039b0   0x0000000c   Code   RO         2038    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x080039bc   0x080039bc   0x0000000e   Code   RO         2034    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x080039ca   0x080039ca   0x00000002   PAD
    0x080039cc   0x080039cc   0x0000000c   Code   RO         2032    .text.EvrRtxMemoryFree  rtx_evr.o
    0x080039d8   0x080039d8   0x0000000c   Code   RO         2028    .text.EvrRtxMemoryInit  rtx_evr.o
    0x080039e4   0x080039e4   0x00000008   Code   RO         2302    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x080039ec   0x080039ec   0x0000000a   Code   RO         2330    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x080039f6   0x080039f6   0x00000002   PAD
    0x080039f8   0x080039f8   0x0000000a   Code   RO         2326    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x08003a02   0x08003a02   0x00000002   PAD
    0x08003a04   0x08003a04   0x0000000e   Code   RO         2346    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x08003a12   0x08003a12   0x00000002   PAD
    0x08003a14   0x08003a14   0x0000000c   Code   RO         2348    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x08003a20   0x08003a20   0x00000008   Code   RO         2350    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x08003a28   0x08003a28   0x0000000a   Code   RO         2340    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x08003a32   0x08003a32   0x00000002   PAD
    0x08003a34   0x08003a34   0x0000000a   Code   RO         2342    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08003a3e   0x08003a3e   0x00000002   PAD
    0x08003a40   0x08003a40   0x0000000c   Code   RO         2328    .text.EvrRtxMessageQueueNew  rtx_evr.o
    0x08003a4c   0x08003a4c   0x0000000a   Code   RO         2344    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x08003a56   0x08003a56   0x00000002   PAD
    0x08003a58   0x08003a58   0x0000000a   Code   RO         2354    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x08003a62   0x08003a62   0x00000002   PAD
    0x08003a64   0x08003a64   0x00000012   Code   RO         2334    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x08003a76   0x08003a76   0x00000002   PAD
    0x08003a78   0x08003a78   0x0000000c   Code   RO         2336    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x08003a84   0x08003a84   0x00000008   Code   RO         2338    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x08003a8c   0x08003a8c   0x0000000a   Code   RO         2352    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x08003a96   0x08003a96   0x00000002   PAD
    0x08003a98   0x08003a98   0x00000008   Code   RO         2246    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x08003aa0   0x08003aa0   0x0000000a   Code   RO         2248    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x08003aaa   0x08003aaa   0x00000002   PAD
    0x08003aac   0x08003aac   0x0000000a   Code   RO         2254    .text.EvrRtxMutexReleased  rtx_evr.o
    0x08003ab6   0x08003ab6   0x00000002   PAD
    0x08003ab8   0x08003ab8   0x0000000a   Code   RO         2270    .text.EvrRtxSemaphoreAcquire  rtx_evr.o
    0x08003ac2   0x08003ac2   0x00000002   PAD
    0x08003ac4   0x08003ac4   0x0000000a   Code   RO         2272    .text.EvrRtxSemaphoreAcquirePending  rtx_evr.o
    0x08003ace   0x08003ace   0x00000002   PAD
    0x08003ad0   0x08003ad0   0x00000008   Code   RO         2274    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x08003ad8   0x08003ad8   0x0000000a   Code   RO         2276    .text.EvrRtxSemaphoreAcquired  rtx_evr.o
    0x08003ae2   0x08003ae2   0x00000002   PAD
    0x08003ae4   0x08003ae4   0x0000000a   Code   RO         2266    .text.EvrRtxSemaphoreCreated  rtx_evr.o
    0x08003aee   0x08003aee   0x00000002   PAD
    0x08003af0   0x08003af0   0x0000000a   Code   RO         2262    .text.EvrRtxSemaphoreError  rtx_evr.o
    0x08003afa   0x08003afa   0x00000002   PAD
    0x08003afc   0x08003afc   0x0000000c   Code   RO         2264    .text.EvrRtxSemaphoreNew  rtx_evr.o
    0x08003b08   0x08003b08   0x00000008   Code   RO         2278    .text.EvrRtxSemaphoreNotAcquired  rtx_evr.o
    0x08003b10   0x08003b10   0x00000008   Code   RO         2280    .text.EvrRtxSemaphoreRelease  rtx_evr.o
    0x08003b18   0x08003b18   0x0000000a   Code   RO         2282    .text.EvrRtxSemaphoreReleased  rtx_evr.o
    0x08003b22   0x08003b22   0x00000002   PAD
    0x08003b24   0x08003b24   0x0000000a   Code   RO         2126    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x08003b2e   0x08003b2e   0x00000002   PAD
    0x08003b30   0x08003b30   0x0000000c   Code   RO         2088    .text.EvrRtxThreadCreated  rtx_evr.o
    0x08003b3c   0x08003b3c   0x00000008   Code   RO         2138    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x08003b44   0x08003b44   0x0000000a   Code   RO         2084    .text.EvrRtxThreadError  rtx_evr.o
    0x08003b4e   0x08003b4e   0x00000002   PAD
    0x08003b50   0x08003b50   0x00000002   Code   RO         2134    .text.EvrRtxThreadExit  rtx_evr.o
    0x08003b52   0x08003b52   0x00000002   PAD
    0x08003b54   0x08003b54   0x0000000e   Code   RO         2162    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x08003b62   0x08003b62   0x00000002   PAD
    0x08003b64   0x08003b64   0x00000008   Code   RO         2160    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x08003b6c   0x08003b6c   0x00000008   Code   RO         2124    .text.EvrRtxThreadJoined  rtx_evr.o
    0x08003b74   0x08003b74   0x0000000c   Code   RO         2086    .text.EvrRtxThreadNew  rtx_evr.o
    0x08003b80   0x08003b80   0x00000008   Code   RO         2130    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x08003b88   0x08003b88   0x00000008   Code   RO         2132    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x08003b90   0x08003b90   0x0000000a   Code   RO         2128    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x08003b9a   0x08003b9a   0x00000002   PAD
    0x08003b9c   0x08003b9c   0x0000000a   Code   RO         2180    .text.EvrRtxTimerCallback  rtx_evr.o
    0x08003ba6   0x08003ba6   0x00000002   PAD
    0x08003ba8   0x08003ba8   0x0000056a   Code   RO         1679    .text.ExternalAdDatProcess  task_led.o
    0x08004112   0x08004112   0x00000002   PAD
    0x08004114   0x08004114   0x000001a6   Code   RO         1660    .text.GlobalProtectDatInit  task_init.o
    0x080042ba   0x080042ba   0x00000002   PAD
    0x080042bc   0x080042bc   0x00000260   Code   RO         1699    .text.GlobalProtectInqAnalysis  task_protocol.o
    0x0800451c   0x0800451c   0x0000040c   Code   RO         1697    .text.GlobalProtectSetAnalysis  task_protocol.o
    0x08004928   0x08004928   0x0000062a   Code   RO         1908    .text.GlobleProtectRunParmCheck  task_protection.o
    0x08004f52   0x08004f52   0x00000002   PAD
    0x08004f54   0x08004f54   0x00000052   Code   RO          253    .text.HAL_CAN_ActivateNotification  stm32f4xx_hal_can.o
    0x08004fa6   0x08004fa6   0x00000002   PAD
    0x08004fa8   0x08004fa8   0x00000176   Code   RO          239    .text.HAL_CAN_AddTxMessage  stm32f4xx_hal_can.o
    0x0800511e   0x0800511e   0x00000002   PAD
    0x08005120   0x08005120   0x000001b4   Code   RO          229    .text.HAL_CAN_ConfigFilter  stm32f4xx_hal_can.o
    0x080052d4   0x080052d4   0x00000008   Code   RO          283    .text.HAL_CAN_ErrorCallback  stm32f4xx_hal_can.o
    0x080052dc   0x080052dc   0x000001fa   Code   RO          249    .text.HAL_CAN_GetRxMessage  stm32f4xx_hal_can.o
    0x080054d6   0x080054d6   0x00000002   PAD
    0x080054d8   0x080054d8   0x00000070   Code   RO          243    .text.HAL_CAN_GetTxMailboxesFreeLevel  stm32f4xx_hal_can.o
    0x08005548   0x08005548   0x00000404   Code   RO          257    .text.HAL_CAN_IRQHandler  stm32f4xx_hal_can.o
    0x0800594c   0x0800594c   0x000001f0   Code   RO          219    .text.HAL_CAN_Init  stm32f4xx_hal_can.o
    0x08005b3c   0x08005b3c   0x000001a2   Code   RO           41    .text.HAL_CAN_MspInit  can.o
    0x08005cde   0x08005cde   0x00000002   PAD
    0x08005ce0   0x08005ce0   0x00000008   Code   RO          271    .text.HAL_CAN_RxFifo0FullCallback  stm32f4xx_hal_can.o
    0x08005ce8   0x08005ce8   0x00000102   Code   RO         1415    .text.HAL_CAN_RxFifo0MsgPendingCallback  bsp_canlink.o
    0x08005dea   0x08005dea   0x00000002   PAD
    0x08005dec   0x08005dec   0x00000008   Code   RO          275    .text.HAL_CAN_RxFifo1FullCallback  stm32f4xx_hal_can.o
    0x08005df4   0x08005df4   0x00000008   Code   RO          277    .text.HAL_CAN_RxFifo1MsgPendingCallback  stm32f4xx_hal_can.o
    0x08005dfc   0x08005dfc   0x00000008   Code   RO          279    .text.HAL_CAN_SleepCallback  stm32f4xx_hal_can.o
    0x08005e04   0x08005e04   0x0000008c   Code   RO          231    .text.HAL_CAN_Start  stm32f4xx_hal_can.o
    0x08005e90   0x08005e90   0x00000008   Code   RO          261    .text.HAL_CAN_TxMailbox0AbortCallback  stm32f4xx_hal_can.o
    0x08005e98   0x08005e98   0x00000008   Code   RO          259    .text.HAL_CAN_TxMailbox0CompleteCallback  stm32f4xx_hal_can.o
    0x08005ea0   0x08005ea0   0x00000008   Code   RO          265    .text.HAL_CAN_TxMailbox1AbortCallback  stm32f4xx_hal_can.o
    0x08005ea8   0x08005ea8   0x00000008   Code   RO          263    .text.HAL_CAN_TxMailbox1CompleteCallback  stm32f4xx_hal_can.o
    0x08005eb0   0x08005eb0   0x00000008   Code   RO          269    .text.HAL_CAN_TxMailbox2AbortCallback  stm32f4xx_hal_can.o
    0x08005eb8   0x08005eb8   0x00000008   Code   RO          267    .text.HAL_CAN_TxMailbox2CompleteCallback  stm32f4xx_hal_can.o
    0x08005ec0   0x08005ec0   0x00000008   Code   RO          281    .text.HAL_CAN_WakeUpFromRxMsgCallback  stm32f4xx_hal_can.o
    0x08005ec8   0x08005ec8   0x000000f4   Code   RO          506    .text.HAL_DMA_Abort  stm32f4xx_hal_dma.o
    0x08005fbc   0x08005fbc   0x00000044   Code   RO          508    .text.HAL_DMA_Abort_IT  stm32f4xx_hal_dma.o
    0x08006000   0x08006000   0x000004cc   Code   RO         1522    .text.HAL_GPIO_EXTI_Callback  bsp_sgm58601.o
    0x080064cc   0x080064cc   0x0000003a   Code   RO          466    .text.HAL_GPIO_EXTI_IRQHandler  stm32f4xx_hal_gpio.o
    0x08006506   0x08006506   0x00000002   PAD
    0x08006508   0x08006508   0x000003fa   Code   RO          454    .text.HAL_GPIO_Init  stm32f4xx_hal_gpio.o
    0x08006902   0x08006902   0x00000002   PAD
    0x08006904   0x08006904   0x00000030   Code   RO          458    .text.HAL_GPIO_ReadPin  stm32f4xx_hal_gpio.o
    0x08006934   0x08006934   0x0000002a   Code   RO          462    .text.HAL_GPIO_TogglePin  stm32f4xx_hal_gpio.o
    0x0800695e   0x0800695e   0x00000002   PAD
    0x08006960   0x08006960   0x00000034   Code   RO          460    .text.HAL_GPIO_WritePin  stm32f4xx_hal_gpio.o
    0x08006994   0x08006994   0x0000000c   Code   RO          679    .text.HAL_GetTick   stm32f4xx_hal.o
    0x080069a0   0x080069a0   0x0000001a   Code   RO          677    .text.HAL_IncTick   stm32f4xx_hal.o
    0x080069ba   0x080069ba   0x00000002   PAD
    0x080069bc   0x080069bc   0x0000003e   Code   RO          667    .text.HAL_Init      stm32f4xx_hal.o
    0x080069fa   0x080069fa   0x00000002   PAD
    0x080069fc   0x080069fc   0x000000fa   Code   RO          177    .text.HAL_InitTick  stm32f4xx_hal_timebase_tim.o
    0x08006af6   0x08006af6   0x00000002   PAD
    0x08006af8   0x08006af8   0x00000052   Code   RO          169    .text.HAL_MspInit   stm32f4xx_hal_msp.o
    0x08006b4a   0x08006b4a   0x00000002   PAD
    0x08006b4c   0x08006b4c   0x00000018   Code   RO          608    .text.HAL_NVIC_EnableIRQ  stm32f4xx_hal_cortex.o
    0x08006b64   0x08006b64   0x00000040   Code   RO          600    .text.HAL_NVIC_SetPriority  stm32f4xx_hal_cortex.o
    0x08006ba4   0x08006ba4   0x00000010   Code   RO          596    .text.HAL_NVIC_SetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x08006bb4   0x08006bb4   0x000000be   Code   RO          583    .text.HAL_PWREx_EnableOverDrive  stm32f4xx_hal_pwr_ex.o
    0x08006c72   0x08006c72   0x00000002   PAD
    0x08006c74   0x08006c74   0x00000264   Code   RO          302    .text.HAL_RCC_ClockConfig  stm32f4xx_hal_rcc.o
    0x08006ed8   0x08006ed8   0x00000054   Code   RO          320    .text.HAL_RCC_GetClockConfig  stm32f4xx_hal_rcc.o
    0x08006f2c   0x08006f2c   0x0000000c   Code   RO          312    .text.HAL_RCC_GetHCLKFreq  stm32f4xx_hal_rcc.o
    0x08006f38   0x08006f38   0x00000022   Code   RO          314    .text.HAL_RCC_GetPCLK1Freq  stm32f4xx_hal_rcc.o
    0x08006f5a   0x08006f5a   0x00000002   PAD
    0x08006f5c   0x08006f5c   0x00000022   Code   RO          316    .text.HAL_RCC_GetPCLK2Freq  stm32f4xx_hal_rcc.o
    0x08006f7e   0x08006f7e   0x00000002   PAD
    0x08006f80   0x08006f80   0x000000e8   Code   RO          304    .text.HAL_RCC_GetSysClockFreq  stm32f4xx_hal_rcc.o
    0x08007068   0x08007068   0x000006ca   Code   RO          300    .text.HAL_RCC_OscConfig  stm32f4xx_hal_rcc.o
    0x08007732   0x08007732   0x00000002   PAD
    0x08007734   0x08007734   0x0000005a   Code   RO          760    .text.HAL_RNG_Init  stm32f4xx_hal_rng.o
    0x0800778e   0x0800778e   0x00000002   PAD
    0x08007790   0x08007790   0x0000003e   Code   RO           58    .text.HAL_RNG_MspInit  rng.o
    0x080077ce   0x080077ce   0x00000002   PAD
    0x080077d0   0x080077d0   0x00000104   Code   RO          795    .text.HAL_SPI_Init  stm32f4xx_hal_spi.o
    0x080078d4   0x080078d4   0x00000208   Code   RO           78    .text.HAL_SPI_MspInit  spi.o
    0x08007adc   0x08007adc   0x0000038e   Code   RO          809    .text.HAL_SPI_TransmitReceive  stm32f4xx_hal_spi.o
    0x08007e6a   0x08007e6a   0x00000002   PAD
    0x08007e6c   0x08007e6c   0x00000008   Code   RO         1235    .text.HAL_TIMEx_BreakCallback  stm32f4xx_hal_tim_ex.o
    0x08007e74   0x08007e74   0x00000008   Code   RO         1231    .text.HAL_TIMEx_CommutCallback  stm32f4xx_hal_tim_ex.o
    0x08007e7c   0x08007e7c   0x00000122   Code   RO         1225    .text.HAL_TIMEx_MasterConfigSynchronization  stm32f4xx_hal_tim_ex.o
    0x08007f9e   0x08007f9e   0x00000002   PAD
    0x08007fa0   0x08007fa0   0x000000a6   Code   RO          912    .text.HAL_TIM_Base_Init  stm32f4xx_hal_tim.o
    0x08008046   0x08008046   0x00000002   PAD
    0x08008048   0x08008048   0x00000008   Code   RO          914    .text.HAL_TIM_Base_MspInit  stm32f4xx_hal_tim.o
    0x08008050   0x08008050   0x000000ea   Code   RO          922    .text.HAL_TIM_Base_Start  stm32f4xx_hal_tim.o
    0x0800813a   0x0800813a   0x00000002   PAD
    0x0800813c   0x0800813c   0x000000f6   Code   RO          926    .text.HAL_TIM_Base_Start_IT  stm32f4xx_hal_tim.o
    0x08008232   0x08008232   0x00000002   PAD
    0x08008234   0x08008234   0x00000008   Code   RO         1048    .text.HAL_TIM_IC_CaptureCallback  stm32f4xx_hal_tim.o
    0x0800823c   0x0800823c   0x00000282   Code   RO         1046    .text.HAL_TIM_IRQHandler  stm32f4xx_hal_tim.o
    0x080084be   0x080084be   0x00000002   PAD
    0x080084c0   0x080084c0   0x00000062   Code   RO           95    .text.HAL_TIM_MspPostInit  tim.o
    0x08008522   0x08008522   0x00000002   PAD
    0x08008524   0x08008524   0x00000008   Code   RO         1050    .text.HAL_TIM_OC_DelayElapsedCallback  stm32f4xx_hal_tim.o
    0x0800852c   0x0800852c   0x00000142   Code   RO         1078    .text.HAL_TIM_PWM_ConfigChannel  stm32f4xx_hal_tim.o
    0x0800866e   0x0800866e   0x00000002   PAD
    0x08008670   0x08008670   0x000000a6   Code   RO          966    .text.HAL_TIM_PWM_Init  stm32f4xx_hal_tim.o
    0x08008716   0x08008716   0x00000002   PAD
    0x08008718   0x08008718   0x00000038   Code   RO           97    .text.HAL_TIM_PWM_MspInit  tim.o
    0x08008750   0x08008750   0x00000008   Code   RO         1052    .text.HAL_TIM_PWM_PulseFinishedCallback  stm32f4xx_hal_tim.o
    0x08008758   0x08008758   0x00000022   Code   RO           17    .text.HAL_TIM_PeriodElapsedCallback  main.o
    0x0800877a   0x0800877a   0x00000002   PAD
    0x0800877c   0x0800877c   0x00000008   Code   RO         1056    .text.HAL_TIM_TriggerCallback  stm32f4xx_hal_tim.o
    0x08008784   0x08008784   0x0000000e   Code   RO         1338    .text.HAL_UARTEx_RxEventCallback  stm32f4xx_hal_uart.o
    0x08008792   0x08008792   0x00000002   PAD
    0x08008794   0x08008794   0x00000008   Code   RO         1336    .text.HAL_UART_ErrorCallback  stm32f4xx_hal_uart.o
    0x0800879c   0x0800879c   0x00000430   Code   RO         1330    .text.HAL_UART_IRQHandler  stm32f4xx_hal_uart.o
    0x08008bcc   0x08008bcc   0x000000a0   Code   RO         1248    .text.HAL_UART_Init  stm32f4xx_hal_uart.o
    0x08008c6c   0x08008c6c   0x0000013a   Code   RO          113    .text.HAL_UART_MspInit  usart.o
    0x08008da6   0x08008da6   0x00000002   PAD
    0x08008da8   0x08008da8   0x00000008   Code   RO         1348    .text.HAL_UART_RxCpltCallback  stm32f4xx_hal_uart.o
    0x08008db0   0x08008db0   0x00000008   Code   RO         1344    .text.HAL_UART_TxCpltCallback  stm32f4xx_hal_uart.o
    0x08008db8   0x08008db8   0x00000004   Code   RO          128    .text.HardFault_Handler  stm32f4xx_it.o
    0x08008dbc   0x08008dbc   0x0000006a   Code   RO          207    .text.IOSwitch      iic.o
    0x08008e26   0x08008e26   0x00000002   PAD
    0x08008e28   0x08008e28   0x00000ed4   Code   RO         1906    .text.IntelProtectRunParmCheck  task_protection.o
    0x08009cfc   0x08009cfc   0x000002e4   Code   RO         1662    .text.InternalProtectDatInit  task_init.o
    0x08009fe0   0x08009fe0   0x00000270   Code   RO         1703    .text.InternalProtectInqAnalysis  task_protocol.o
    0x0800a250   0x0800a250   0x00000424   Code   RO         1701    .text.InternalProtectSetAnalysis  task_protocol.o
    0x0800a674   0x0800a674   0x00000086   Code   RO         1866    .text.IsFrameValid  task_dcdc.o
    0x0800a6fa   0x0800a6fa   0x00000002   PAD
    0x0800a6fc   0x0800a6fc   0x00000030   Code   RO         1946    .text.IsIrqMasked   rtx_delay.o
    0x0800a72c   0x0800a72c   0x00000030   Code   RO         2385    .text.IsIrqMasked   rtx_kernel.o
    0x0800a75c   0x0800a75c   0x00000030   Code   RO         2574    .text.IsIrqMasked   rtx_msgqueue.o
    0x0800a78c   0x0800a78c   0x00000030   Code   RO         2694    .text.IsIrqMasked   rtx_semaphore.o
    0x0800a7bc   0x0800a7bc   0x00000030   Code   RO         2846    .text.IsIrqMasked   rtx_thread.o
    0x0800a7ec   0x0800a7ec   0x00000014   Code   RO         1944    .text.IsIrqMode     rtx_delay.o
    0x0800a800   0x0800a800   0x00000014   Code   RO         2383    .text.IsIrqMode     rtx_kernel.o
    0x0800a814   0x0800a814   0x00000014   Code   RO         2572    .text.IsIrqMode     rtx_msgqueue.o
    0x0800a828   0x0800a828   0x00000014   Code   RO         2692    .text.IsIrqMode     rtx_semaphore.o
    0x0800a83c   0x0800a83c   0x00000014   Code   RO         2844    .text.IsIrqMode     rtx_thread.o
    0x0800a850   0x0800a850   0x0000009c   Code   RO         1466    .text.MB85Ctrl_Read  bsp_mb85rs2.o
    0x0800a8ec   0x0800a8ec   0x000000ca   Code   RO         1462    .text.MB85Ctrl_Write  bsp_mb85rs2.o
    0x0800a9b6   0x0800a9b6   0x00000002   PAD
    0x0800a9b8   0x0800a9b8   0x00000098   Code   RO           37    .text.MX_CAN1_Init  can.o
    0x0800aa50   0x0800aa50   0x0000009a   Code   RO           39    .text.MX_CAN2_Init  can.o
    0x0800aaea   0x0800aaea   0x00000002   PAD
    0x0800aaec   0x0800aaec   0x000003ac   Code   RO           29    .text.MX_GPIO_Init  gpio.o
    0x0800ae98   0x0800ae98   0x00000026   Code   RO           56    .text.MX_RNG_Init   rng.o
    0x0800aebe   0x0800aebe   0x00000002   PAD
    0x0800aec0   0x0800aec0   0x0000004c   Code   RO           70    .text.MX_SPI1_Init  spi.o
    0x0800af0c   0x0800af0c   0x0000004c   Code   RO           72    .text.MX_SPI2_Init  spi.o
    0x0800af58   0x0800af58   0x00000048   Code   RO           74    .text.MX_SPI3_Init  spi.o
    0x0800afa0   0x0800afa0   0x0000004c   Code   RO           76    .text.MX_SPI4_Init  spi.o
    0x0800afec   0x0800afec   0x000000aa   Code   RO           93    .text.MX_TIM2_Init  tim.o
    0x0800b096   0x0800b096   0x00000002   PAD
    0x0800b098   0x0800b098   0x0000003c   Code   RO          109    .text.MX_USART1_UART_Init  usart.o
    0x0800b0d4   0x0800b0d4   0x0000003c   Code   RO          111    .text.MX_USART2_UART_Init  usart.o
    0x0800b110   0x0800b110   0x00000018   Code   RO         2484    .text.MemBlockPtr   rtx_memory.o
    0x0800b128   0x0800b128   0x0000000a   Code   RO         2482    .text.MemHeadPtr    rtx_memory.o
    0x0800b132   0x0800b132   0x00000002   PAD
    0x0800b134   0x0800b134   0x00000004   Code   RO          130    .text.MemManage_Handler  stm32f4xx_it.o
    0x0800b138   0x0800b138   0x00000058   Code   RO         2626    .text.MessageQueueGet  rtx_msgqueue.o
    0x0800b190   0x0800b190   0x000000b6   Code   RO         2614    .text.MessageQueuePut  rtx_msgqueue.o
    0x0800b246   0x0800b246   0x00000002   PAD
    0x0800b248   0x0800b248   0x00000046   Code   RO         2610    .text.MessageQueueRemove  rtx_msgqueue.o
    0x0800b28e   0x0800b28e   0x00000002   PAD
    0x0800b290   0x0800b290   0x00000004   Code   RO          126    .text.NMI_Handler   stm32f4xx_it.o
    0x0800b294   0x0800b294   0x0000006e   Code   RO          606    .text.NVIC_EncodePriority  stm32f4xx_hal_cortex.o
    0x0800b302   0x0800b302   0x00000002   PAD
    0x0800b304   0x0800b304   0x00000140   Code   RO         1589    .text.Network_Data_Pop  can_network_driver.o
    0x0800b444   0x0800b444   0x0000023c   Code   RO         1597    .text.Network_Data_Push_Rx_Buffer  can_network_driver.o
    0x0800b680   0x0800b680   0x000001ca   Code   RO         1593    .text.Network_Data_Push_Tx_Buffer  can_network_driver.o
    0x0800b84a   0x0800b84a   0x00000002   PAD
    0x0800b84c   0x0800b84c   0x0000000c   Code   RO         3020    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x0800b858   0x0800b858   0x0000003e   Code   RO         3016    .text.OS_Tick_Enable  os_systick.o
    0x0800b896   0x0800b896   0x00000002   PAD
    0x0800b898   0x0800b898   0x00000006   Code   RO         3022    .text.OS_Tick_GetIRQn  os_systick.o
    0x0800b89e   0x0800b89e   0x00000002   PAD
    0x0800b8a0   0x0800b8a0   0x00000080   Code   RO         3014    .text.OS_Tick_Setup  os_systick.o
    0x0800b920   0x0800b920   0x000000f6   Code   RO         1477    .text.PCA9555_IOConfigReg  bsp_nca9555.o
    0x0800ba16   0x0800ba16   0x00000002   PAD
    0x0800ba18   0x0800ba18   0x000000fc   Code   RO         1483    .text.Pca9555_RegRead  bsp_nca9555.o
    0x0800bb14   0x0800bb14   0x000001ea   Code   RO         1797    .text.Protect_Action_Func  task_workstep.o
    0x0800bcfe   0x0800bcfe   0x00000002   PAD
    0x0800bd00   0x0800bd00   0x000003d2   Code   RO         1737    .text.ProtocolDataProcess  task_protocol.o
    0x0800c0d2   0x0800c0d2   0x00000002   PAD
    0x0800c0d4   0x0800c0d4   0x000000c6   Code   RO         1677    .text.ReadAddr      task_led.o
    0x0800c19a   0x0800c19a   0x00000006   PAD
    0x0800c1a0   0x0800c1a0   0x00000454   Code   RO         1705    .text.RecordDatSync  task_protocol.o
    0x0800c5f4   0x0800c5f4   0x0000017e   Code   RO         1709    .text.RecordDatUpcast  task_protocol.o
    0x0800c772   0x0800c772   0x00000002   PAD
    0x0800c774   0x0800c774   0x000000a6   Code   RO         1707    .text.RecordInqAnalysis  task_protocol.o
    0x0800c81a   0x0800c81a   0x00000002   PAD
    0x0800c81c   0x0800c81c   0x000001e2   Code   RO         1739    .text.RecvUnpack    task_protocol.o
    0x0800c9fe   0x0800c9fe   0x00000002   PAD
    0x0800ca00   0x0800ca00   0x00000078   Code   RO         1494    .text.SGM58601_CS_0  bsp_sgm58601.o
    0x0800ca78   0x0800ca78   0x00000078   Code   RO         1496    .text.SGM58601_CS_1  bsp_sgm58601.o
    0x0800caf0   0x0800caf0   0x00000022   Code   RO         1504    .text.SGM58601_INIT  bsp_sgm58601.o
    0x0800cb12   0x0800cb12   0x00000002   PAD
    0x0800cb14   0x0800cb14   0x0000009e   Code   RO         1510    .text.SGM58601_READ_DATA  bsp_sgm58601.o
    0x0800cbb2   0x0800cbb2   0x00000002   PAD
    0x0800cbb4   0x0800cbb4   0x000001d2   Code   RO         1500    .text.SGM58601_REG_INIT  bsp_sgm58601.o
    0x0800cd86   0x0800cd86   0x00000002   PAD
    0x0800cd88   0x0800cd88   0x0000002a   Code   RO         1506    .text.SGM58601_SWITCH_CH  bsp_sgm58601.o
    0x0800cdb2   0x0800cdb2   0x00000002   PAD
    0x0800cdb4   0x0800cdb4   0x000000a8   Code   RO          805    .text.SPI_EndRxTxTransaction  stm32f4xx_hal_spi.o
    0x0800ce5c   0x0800ce5c   0x0000004c   Code   RO         1464    .text.SPI_ReadWriteByte  bsp_mb85rs2.o
    0x0800cea8   0x0800cea8   0x00000134   Code   RO          903    .text.SPI_WaitFlagStateUntilTimeout  stm32f4xx_hal_spi.o
    0x0800cfdc   0x0800cfdc   0x0000004e   Code   RO         2431    .text.SVC_Setup     rtx_kernel.o
    0x0800d02a   0x0800d02a   0x00000002   PAD
    0x0800d02c   0x0800d02c   0x00000026   Code   RO         2716    .text.SemaphoreTokenDecrement  rtx_semaphore.o
    0x0800d052   0x0800d052   0x00000002   PAD
    0x0800d054   0x0800d054   0x00000034   Code   RO         2730    .text.SemaphoreTokenIncrement  rtx_semaphore.o
    0x0800d088   0x0800d088   0x000000fa   Code   RO         1741    .text.SendPack      task_protocol.o
    0x0800d182   0x0800d182   0x00000002   PAD
    0x0800d184   0x0800d184   0x00000010   Code   RO         2767    .text.SetPendSV     rtx_system.o
    0x0800d194   0x0800d194   0x0000001c   Code   RO         2814    .text.StackOffsetR0  rtx_thread.o
    0x0800d1b0   0x0800d1b0   0x000000d0   Code   RO           13    .text.SystemClock_Config  main.o
    0x0800d280   0x0800d280   0x00000012   Code   RO         1377    .text.SystemInit    system_stm32f4xx.o
    0x0800d292   0x0800d292   0x00000002   PAD
    0x0800d294   0x0800d294   0x00000150   Code   RO         1725    .text.SystemInqAnalysis  task_protocol.o
    0x0800d3e4   0x0800d3e4   0x000004cc   Code   RO         1727    .text.SystemSetAnalysis  task_protocol.o
    0x0800d8b0   0x0800d8b0   0x000000ec   Code   RO          156    .text.TIM4_IRQHandler  stm32f4xx_it.o
    0x0800d99c   0x0800d99c   0x00000004   PAD
    0x0800d9a0   0x0800d9a0   0x0000061c   Code   RO          158    .text.TIM5_IRQHandler  stm32f4xx_it.o
    0x0800dfbc   0x0800dfbc   0x00000010   Code   RO          150    .text.TIM8_TRG_COM_TIM14_IRQHandler  stm32f4xx_it.o
    0x0800dfcc   0x0800dfcc   0x0000019a   Code   RO          916    .text.TIM_Base_SetConfig  stm32f4xx_hal_tim.o
    0x0800e166   0x0800e166   0x00000002   PAD
    0x0800e168   0x0800e168   0x000000ea   Code   RO         1060    .text.TIM_OC1_SetConfig  stm32f4xx_hal_tim.o
    0x0800e252   0x0800e252   0x00000002   PAD
    0x0800e254   0x0800e254   0x000000f4   Code   RO         1062    .text.TIM_OC2_SetConfig  stm32f4xx_hal_tim.o
    0x0800e348   0x0800e348   0x000000f2   Code   RO         1064    .text.TIM_OC3_SetConfig  stm32f4xx_hal_tim.o
    0x0800e43a   0x0800e43a   0x00000002   PAD
    0x0800e43c   0x0800e43c   0x000000a4   Code   RO         1066    .text.TIM_OC4_SetConfig  stm32f4xx_hal_tim.o
    0x0800e4e0   0x0800e4e0   0x00000082   Code   RO         2896    .text.ThreadFlagsCheck  rtx_thread.o
    0x0800e562   0x0800e562   0x00000002   PAD
    0x0800e564   0x0800e564   0x0000017a   Code   RO         1658    .text.Tier2ToTier1  task_init.o
    0x0800e6de   0x0800e6de   0x00000002   PAD
    0x0800e6e0   0x0800e6e0   0x000000a6   Code   RO         2989    .text.TimerInsert   rtx_timer.o
    0x0800e786   0x0800e786   0x00000002   PAD
    0x0800e788   0x0800e788   0x0000002a   Code   RO         2987    .text.TimerUnlink   rtx_timer.o
    0x0800e7b2   0x0800e7b2   0x00000002   PAD
    0x0800e7b4   0x0800e7b4   0x00000020   Code   RO         1334    .text.UART_DMAAbortOnError  stm32f4xx_hal_uart.o
    0x0800e7d4   0x0800e7d4   0x00000094   Code   RO         1296    .text.UART_EndRxTransfer  stm32f4xx_hal_uart.o
    0x0800e868   0x0800e868   0x00000026   Code   RO         1342    .text.UART_EndTransmit_IT  stm32f4xx_hal_uart.o
    0x0800e88e   0x0800e88e   0x00000002   PAD
    0x0800e890   0x0800e890   0x0000016a   Code   RO         1332    .text.UART_Receive_IT  stm32f4xx_hal_uart.o
    0x0800e9fa   0x0800e9fa   0x00000002   PAD
    0x0800e9fc   0x0800e9fc   0x00000156   Code   RO         1252    .text.UART_SetConfig  stm32f4xx_hal_uart.o
    0x0800eb52   0x0800eb52   0x00000002   PAD
    0x0800eb54   0x0800eb54   0x00000098   Code   RO         1340    .text.UART_Transmit_IT  stm32f4xx_hal_uart.o
    0x0800ebec   0x0800ebec   0x00000010   Code   RO          144    .text.USART1_IRQHandler  stm32f4xx_it.o
    0x0800ebfc   0x0800ebfc   0x00000010   Code   RO          146    .text.USART2_IRQHandler  stm32f4xx_it.o
    0x0800ec0c   0x0800ec0c   0x00000004   Code   RO          134    .text.UsageFault_Handler  stm32f4xx_it.o
    0x0800ec10   0x0800ec10   0x0000027c   Code   RO         1717    .text.WorkstepInqAnalysis  task_protocol.o
    0x0800ee8c   0x0800ee8c   0x00000190   Code   RO         1711    .text.WorkstepProtUpcast  task_protocol.o
    0x0800f01c   0x0800f01c   0x000005f2   Code   RO         1715    .text.WorkstepRunstaSetAnalysis  task_protocol.o
    0x0800f60e   0x0800f60e   0x00000002   PAD
    0x0800f610   0x0800f610   0x00000868   Code   RO         1713    .text.WorkstepSetAnalysis  task_protocol.o
    0x0800fe78   0x0800fe78   0x00000f90   Code   RO         1809    .text.Workstep_Abort_Func  task_workstep.o
    0x08010e08   0x08010e08   0x000005ae   Code   RO         1807    .text.Workstep_Analysis_Func  task_workstep.o
    0x080113b6   0x080113b6   0x00000002   PAD
    0x080113b8   0x080113b8   0x000002e4   Code   RO         1801    .text.Workstep_Execute_Func  task_workstep.o
    0x0801169c   0x0801169c   0x00000004   PAD
    0x080116a0   0x080116a0   0x00000538   Code   RO         1799    .text.Workstep_Protect_Func  task_workstep.o
    0x08011bd8   0x08011bd8   0x00000db8   Code   RO         1803    .text.Workstep_Reload_Func  task_workstep.o
    0x08012990   0x08012990   0x00000230   Code   RO         1805    .text.Workstep_Switch_Func  task_workstep.o
    0x08012bc0   0x08012bc0   0x0000003c   Code   RO         1524    .text.__NVIC_DisableIRQ  bsp_sgm58601.o
    0x08012bfc   0x08012bfc   0x00000034   Code   RO          610    .text.__NVIC_EnableIRQ  stm32f4xx_hal_cortex.o
    0x08012c30   0x08012c30   0x00000034   Code   RO         1526    .text.__NVIC_EnableIRQ  bsp_sgm58601.o
    0x08012c64   0x08012c64   0x00000010   Code   RO          602    .text.__NVIC_GetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x08012c74   0x08012c74   0x00000010   Code   RO         2433    .text.__NVIC_GetPriorityGrouping  rtx_kernel.o
    0x08012c84   0x08012c84   0x00000044   Code   RO          604    .text.__NVIC_SetPriority  stm32f4xx_hal_cortex.o
    0x08012cc8   0x08012cc8   0x0000003c   Code   RO          598    .text.__NVIC_SetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x08012d04   0x08012d04   0x00000038   Code   RO         2898    .text.atomic_chk32_all  rtx_thread.o
    0x08012d3c   0x08012d3c   0x00000034   Code   RO         2900    .text.atomic_chk32_any  rtx_thread.o
    0x08012d70   0x08012d70   0x0000002c   Code   RO         2720    .text.atomic_dec16_nz  rtx_semaphore.o
    0x08012d9c   0x08012d9c   0x0000002c   Code   RO         2769    .text.atomic_dec16_nz  rtx_system.o
    0x08012dc8   0x08012dc8   0x00000020   Code   RO         2509    .text.atomic_dec32  rtx_mempool.o
    0x08012de8   0x08012de8   0x00000028   Code   RO         2628    .text.atomic_dec32_nz  rtx_msgqueue.o
    0x08012e10   0x08012e10   0x00000036   Code   RO         2771    .text.atomic_inc16_lim  rtx_system.o
    0x08012e46   0x08012e46   0x00000002   PAD
    0x08012e48   0x08012e48   0x0000003a   Code   RO         2732    .text.atomic_inc16_lt  rtx_semaphore.o
    0x08012e82   0x08012e82   0x00000002   PAD
    0x08012e84   0x08012e84   0x0000003a   Code   RO         2775    .text.atomic_inc16_lt  rtx_system.o
    0x08012ebe   0x08012ebe   0x00000002   PAD
    0x08012ec0   0x08012ec0   0x00000020   Code   RO         2503    .text.atomic_inc32  rtx_mempool.o
    0x08012ee0   0x08012ee0   0x00000020   Code   RO         2616    .text.atomic_inc32  rtx_msgqueue.o
    0x08012f00   0x08012f00   0x00000028   Code   RO         2501    .text.atomic_link_get  rtx_mempool.o
    0x08012f28   0x08012f28   0x00000030   Code   RO         2507    .text.atomic_link_put  rtx_mempool.o
    0x08012f58   0x08012f58   0x0000002c   Code   RO         2630    .text.atomic_wr8    rtx_msgqueue.o
    0x08012f84   0x08012f84   0x00000016   Code   RO         1451    .text.bsp_DelayMS   bsp_dwt.o
    0x08012f9a   0x08012f9a   0x00000002   PAD
    0x08012f9c   0x08012f9c   0x00000054   Code   RO         1453    .text.bsp_DelayUS   bsp_dwt.o
    0x08012ff0   0x08012ff0   0x0000002e   Code   RO         1449    .text.bsp_InitDWT   bsp_dwt.o
    0x0801301e   0x0801301e   0x00000002   PAD
    0x08013020   0x08013020   0x000002f2   Code   RO         1570    .text.bsp_RCC_TIM_Enable  bsp_timer.o
    0x08013312   0x08013312   0x00000002   PAD
    0x08013314   0x08013314   0x000002d6   Code   RO         1574    .text.bsp_SetTIMforInt  bsp_timer.o
    0x080135ea   0x080135ea   0x00000002   PAD
    0x080135ec   0x080135ec   0x0000013c   Code   RO         1811    .text.channel_runsta_sync  task_workstep.o
    0x08013728   0x08013728   0x00000154   Code   RO          197    .text.i2c_Ack       iic.o
    0x0801387c   0x0801387c   0x00000028   Code   RO          209    .text.i2c_Delay     iic.o
    0x080138a4   0x080138a4   0x0000010c   Code   RO          199    .text.i2c_NAck      iic.o
    0x080139b0   0x080139b0   0x00000246   Code   RO          201    .text.i2c_ReadByte  iic.o
    0x08013bf6   0x08013bf6   0x00000002   PAD
    0x08013bf8   0x08013bf8   0x00000264   Code   RO          195    .text.i2c_SendByte  iic.o
    0x08013e5c   0x08013e5c   0x00000140   Code   RO          191    .text.i2c_Start     iic.o
    0x08013f9c   0x08013f9c   0x00000106   Code   RO          193    .text.i2c_Stop      iic.o
    0x080140a2   0x080140a2   0x00000002   PAD
    0x080140a4   0x080140a4   0x00000222   Code   RO          203    .text.i2c_WaitAck   iic.o
    0x080142c6   0x080142c6   0x00000002   PAD
    0x080142c8   0x080142c8   0x000000b2   Code   RO         2584    .text.isrRtxMessageQueueGet  rtx_msgqueue.o
    0x0801437a   0x0801437a   0x00000002   PAD
    0x0801437c   0x0801437c   0x000000ca   Code   RO         2580    .text.isrRtxMessageQueuePut  rtx_msgqueue.o
    0x08014446   0x08014446   0x00000002   PAD
    0x08014448   0x08014448   0x00000070   Code   RO         2700    .text.isrRtxSemaphoreAcquire  rtx_semaphore.o
    0x080144b8   0x080144b8   0x00000074   Code   RO         2704    .text.isrRtxSemaphoreRelease  rtx_semaphore.o
    0x0801452c   0x0801452c   0x00000058   Code   RO         2751    .text.isr_queue_get  rtx_system.o
    0x08014584   0x08014584   0x00000062   Code   RO         2765    .text.isr_queue_put  rtx_system.o
    0x080145e6   0x080145e6   0x00000002   PAD
    0x080145e8   0x080145e8   0x00000074   Code   RO           11    .text.main          main.o
    0x0801465c   0x0801465c   0x00000058   Code   RO         1942    .text.osDelay       rtx_delay.o
    0x080146b4   0x080146b4   0x0000004e   Code   RO         2381    .text.osKernelInitialize  rtx_kernel.o
    0x08014702   0x08014702   0x00000002   PAD
    0x08014704   0x08014704   0x0000004a   Code   RO         2397    .text.osKernelStart  rtx_kernel.o
    0x0801474e   0x0801474e   0x00000002   PAD
    0x08014750   0x08014750   0x00000082   Code   RO         2582    .text.osMessageQueueGet  rtx_msgqueue.o
    0x080147d2   0x080147d2   0x00000002   PAD
    0x080147d4   0x080147d4   0x00000076   Code   RO         2570    .text.osMessageQueueNew  rtx_msgqueue.o
    0x0801484a   0x0801484a   0x00000002   PAD
    0x0801484c   0x0801484c   0x00000094   Code   RO         2578    .text.osMessageQueuePut  rtx_msgqueue.o
    0x080148e0   0x080148e0   0x0000002e   Code   RO         3042    .text.osRtxErrorNotify  rtx_config.o
    0x0801490e   0x0801490e   0x00000002   PAD
    0x08014910   0x08014910   0x0000000a   Code   RO         2755    .text.osRtxEventFlagsObject  rtx_system.o
    0x0801491a   0x0801491a   0x00000002   PAD
    0x0801491c   0x0801491c   0x0000000a   Code   RO         2802    .text.osRtxEventFlagsObject  rtx_thread.o
    0x08014926   0x08014926   0x00000002   PAD
    0x08014928   0x08014928   0x00000008   Code   RO         3040    .text.osRtxIdleThread  rtx_config.o
    0x08014930   0x08014930   0x0000000c   Code   RO         2747    .text.osRtxKernelGetState  rtx_system.o
    0x0801493c   0x0801493c   0x0000000c   Code   RO         2822    .text.osRtxKernelGetState  rtx_thread.o
    0x08014948   0x08014948   0x00000002   Code   RO         2379    .text.osRtxKernelPreInit  rtx_kernel.o
    0x0801494a   0x0801494a   0x00000002   PAD
    0x0801494c   0x0801494c   0x00000156   Code   RO         2486    .text.osRtxMemoryAlloc  rtx_memory.o
    0x08014aa2   0x08014aa2   0x00000002   PAD
    0x08014aa4   0x08014aa4   0x000000c8   Code   RO         2488    .text.osRtxMemoryFree  rtx_memory.o
    0x08014b6c   0x08014b6c   0x000000a0   Code   RO         2480    .text.osRtxMemoryInit  rtx_memory.o
    0x08014c0c   0x08014c0c   0x0000004e   Code   RO         2499    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x08014c5a   0x08014c5a   0x00000002   PAD
    0x08014c5c   0x08014c5c   0x0000006e   Code   RO         2505    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x08014cca   0x08014cca   0x00000002   PAD
    0x08014ccc   0x08014ccc   0x000000a2   Code   RO         2497    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x08014d6e   0x08014d6e   0x00000002   PAD
    0x08014d70   0x08014d70   0x0000000a   Code   RO         2759    .text.osRtxMemoryPoolObject  rtx_system.o
    0x08014d7a   0x08014d7a   0x00000002   PAD
    0x08014d7c   0x08014d7c   0x0000000a   Code   RO         2808    .text.osRtxMemoryPoolObject  rtx_thread.o
    0x08014d86   0x08014d86   0x00000002   PAD
    0x08014d88   0x08014d88   0x0000000a   Code   RO         2761    .text.osRtxMessageObject  rtx_system.o
    0x08014d92   0x08014d92   0x00000002   PAD
    0x08014d94   0x08014d94   0x0000000a   Code   RO         2620    .text.osRtxMessageQueueId  rtx_msgqueue.o
    0x08014d9e   0x08014d9e   0x00000002   PAD
    0x08014da0   0x08014da0   0x0000000a   Code   RO         2967    .text.osRtxMessageQueueId  rtx_timer.o
    0x08014daa   0x08014daa   0x00000002   PAD
    0x08014dac   0x08014dac   0x0000000a   Code   RO         2810    .text.osRtxMessageQueueObject  rtx_thread.o
    0x08014db6   0x08014db6   0x00000002   PAD
    0x08014db8   0x08014db8   0x00000154   Code   RO         2608    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x08014f0c   0x08014f0c   0x0000000a   Code   RO         2804    .text.osRtxMutexObject  rtx_thread.o
    0x08014f16   0x08014f16   0x00000002   PAD
    0x08014f18   0x08014f18   0x0000009c   Code   RO         2645    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x08014fb4   0x08014fb4   0x000000a0   Code   RO         2649    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x08015054   0x08015054   0x0000000a   Code   RO         2612    .text.osRtxObject   rtx_msgqueue.o
    0x0801505e   0x0801505e   0x00000002   PAD
    0x08015060   0x08015060   0x0000000a   Code   RO         2647    .text.osRtxObject   rtx_mutex.o
    0x0801506a   0x0801506a   0x00000002   PAD
    0x0801506c   0x0801506c   0x0000000a   Code   RO         2718    .text.osRtxObject   rtx_semaphore.o
    0x08015076   0x08015076   0x00000002   PAD
    0x08015078   0x08015078   0x0000000a   Code   RO         2773    .text.osRtxObject   rtx_system.o
    0x08015082   0x08015082   0x00000002   PAD
    0x08015084   0x08015084   0x0000000a   Code   RO         2792    .text.osRtxObject   rtx_thread.o
    0x0801508e   0x0801508e   0x00000002   PAD
    0x08015090   0x08015090   0x000000c4   Code   RO         2749    .text.osRtxPendSV_Handler  rtx_system.o
    0x08015154   0x08015154   0x00000046   Code   RO         2763    .text.osRtxPostProcess  rtx_system.o
    0x0801519a   0x0801519a   0x00000002   PAD
    0x0801519c   0x0801519c   0x0000000a   Code   RO         2724    .text.osRtxSemaphoreId  rtx_semaphore.o
    0x080151a6   0x080151a6   0x00000002   PAD
    0x080151a8   0x080151a8   0x0000000a   Code   RO         2757    .text.osRtxSemaphoreObject  rtx_system.o
    0x080151b2   0x080151b2   0x00000002   PAD
    0x080151b4   0x080151b4   0x0000000a   Code   RO         2806    .text.osRtxSemaphoreObject  rtx_thread.o
    0x080151be   0x080151be   0x00000002   PAD
    0x080151c0   0x080151c0   0x00000044   Code   RO         2714    .text.osRtxSemaphorePostProcess  rtx_semaphore.o
    0x08015204   0x08015204   0x0000008e   Code   RO         2826    .text.osRtxThreadBlock  rtx_thread.o
    0x08015292   0x08015292   0x00000002   PAD
    0x08015294   0x08015294   0x00000108   Code   RO         2834    .text.osRtxThreadDelayInsert  rtx_thread.o
    0x0801539c   0x0801539c   0x000000a0   Code   RO         2830    .text.osRtxThreadDelayRemove  rtx_thread.o
    0x0801543c   0x0801543c   0x00000190   Code   RO         2798    .text.osRtxThreadDelayTick  rtx_thread.o
    0x080155cc   0x080155cc   0x0000009a   Code   RO         2820    .text.osRtxThreadDispatch  rtx_thread.o
    0x08015666   0x08015666   0x00000002   PAD
    0x08015668   0x08015668   0x000000a0   Code   RO         2928    .text.osRtxThreadFree  rtx_thread.o
    0x08015708   0x08015708   0x0000000c   Code   RO         1952    .text.osRtxThreadGetRunning  rtx_delay.o
    0x08015714   0x08015714   0x0000000c   Code   RO         2624    .text.osRtxThreadGetRunning  rtx_msgqueue.o
    0x08015720   0x08015720   0x0000000c   Code   RO         2728    .text.osRtxThreadGetRunning  rtx_semaphore.o
    0x0801572c   0x0801572c   0x0000000c   Code   RO         2824    .text.osRtxThreadGetRunning  rtx_thread.o
    0x08015738   0x08015738   0x0000000a   Code   RO         2838    .text.osRtxThreadId  rtx_thread.o
    0x08015742   0x08015742   0x00000002   PAD
    0x08015744   0x08015744   0x00000038   Code   RO         2788    .text.osRtxThreadListGet  rtx_thread.o
    0x0801577c   0x0801577c   0x0000007c   Code   RO         2784    .text.osRtxThreadListPut  rtx_thread.o
    0x080157f8   0x080157f8   0x00000036   Code   RO         2794    .text.osRtxThreadListRemove  rtx_thread.o
    0x0801582e   0x0801582e   0x00000002   PAD
    0x08015830   0x08015830   0x00000022   Code   RO         2800    .text.osRtxThreadListRoot  rtx_thread.o
    0x08015852   0x08015852   0x00000002   PAD
    0x08015854   0x08015854   0x0000005e   Code   RO         2790    .text.osRtxThreadListSort  rtx_thread.o
    0x080158b2   0x080158b2   0x00000002   PAD
    0x080158b4   0x080158b4   0x0000000a   Code   RO         2753    .text.osRtxThreadObject  rtx_system.o
    0x080158be   0x080158be   0x00000002   PAD
    0x080158c0   0x080158c0   0x0000000a   Code   RO         2786    .text.osRtxThreadObject  rtx_thread.o
    0x080158ca   0x080158ca   0x00000002   PAD
    0x080158cc   0x080158cc   0x00000050   Code   RO         2894    .text.osRtxThreadPostProcess  rtx_thread.o
    0x0801591c   0x0801591c   0x00000020   Code   RO         2796    .text.osRtxThreadReadyPut  rtx_thread.o
    0x0801593c   0x0801593c   0x00000020   Code   RO         2812    .text.osRtxThreadRegPtr  rtx_thread.o
    0x0801595c   0x0801595c   0x00000014   Code   RO         2934    .text.osRtxThreadSetRunning  rtx_thread.o
    0x08015970   0x08015970   0x00000042   Code   RO         2818    .text.osRtxThreadStackCheck  rtx_thread.o
    0x080159b2   0x080159b2   0x00000002   PAD
    0x080159b4   0x080159b4   0x00000084   Code   RO         2836    .text.osRtxThreadStartup  rtx_thread.o
    0x08015a38   0x08015a38   0x00000026   Code   RO         2816    .text.osRtxThreadSwitch  rtx_thread.o
    0x08015a5e   0x08015a5e   0x00000002   PAD
    0x08015a60   0x08015a60   0x0000007c   Code   RO         2832    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x08015adc   0x08015adc   0x0000004c   Code   RO         2828    .text.osRtxThreadWaitExit  rtx_thread.o
    0x08015b28   0x08015b28   0x00000110   Code   RO         2745    .text.osRtxTick_Handler  rtx_system.o
    0x08015c38   0x08015c38   0x00000068   Code   RO         2965    .text.osRtxTimerThread  rtx_timer.o
    0x08015ca0   0x08015ca0   0x000000a8   Code   RO         2969    .text.osRtxTimerTick  rtx_timer.o
    0x08015d48   0x08015d48   0x00000062   Code   RO         2698    .text.osSemaphoreAcquire  rtx_semaphore.o
    0x08015daa   0x08015daa   0x00000002   PAD
    0x08015dac   0x08015dac   0x00000076   Code   RO         2690    .text.osSemaphoreNew  rtx_semaphore.o
    0x08015e22   0x08015e22   0x00000002   PAD
    0x08015e24   0x08015e24   0x00000052   Code   RO         2702    .text.osSemaphoreRelease  rtx_semaphore.o
    0x08015e76   0x08015e76   0x00000002   PAD
    0x08015e78   0x08015e78   0x00000024   Code   RO         2874    .text.osThreadExit  rtx_thread.o
    0x08015e9c   0x08015e9c   0x00000076   Code   RO         2842    .text.osThreadNew   rtx_thread.o
    0x08015f12   0x08015f12   0x00000002   PAD
    0x08015f14   0x08015f14   0x00000036   Code   RO         1950    .text.svcRtxDelay   rtx_delay.o
    0x08015f4a   0x08015f4a   0x00000002   PAD
    0x08015f4c   0x08015f4c   0x0000038c   Code   RO         2425    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x080162d8   0x080162d8   0x000000d8   Code   RO         2429    .text.svcRtxKernelStart  rtx_kernel.o
    0x080163b0   0x080163b0   0x00000192   Code   RO         2632    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x08016542   0x08016542   0x00000002   PAD
    0x08016544   0x08016544   0x00000294   Code   RO         2606    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x080167d8   0x080167d8   0x0000018e   Code   RO         2622    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x08016966   0x08016966   0x00000002   PAD
    0x08016968   0x08016968   0x000000b2   Code   RO         2726    .text.svcRtxSemaphoreAcquire  rtx_semaphore.o
    0x08016a1a   0x08016a1a   0x00000002   PAD
    0x08016a1c   0x08016a1c   0x0000015e   Code   RO         2712    .text.svcRtxSemaphoreNew  rtx_semaphore.o
    0x08016b7a   0x08016b7a   0x00000002   PAD
    0x08016b7c   0x08016b7c   0x000000a4   Code   RO         2734    .text.svcRtxSemaphoreRelease  rtx_semaphore.o
    0x08016c20   0x08016c20   0x000000d4   Code   RO         2932    .text.svcRtxThreadExit  rtx_thread.o
    0x08016cf4   0x08016cf4   0x0000040c   Code   RO         2840    .text.svcRtxThreadNew  rtx_thread.o
    0x08017100   0x08017100   0x00000016   Code   RO         2892    .text.xPSR_InitVal  rtx_thread.o
    0x08017116   0x08017116   0x0000000e   Code   RO         3108    i.__scatterload_copy  mc_w.l(handlers.o)
    0x08017124   0x08017124   0x00000002   Code   RO         3109    i.__scatterload_null  mc_w.l(handlers.o)
    0x08017126   0x08017126   0x0000000e   Code   RO         3110    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x08017134   0x08017134   0x000000a0   Data   RO         2468    .rodata             rtx_lib.o
    0x080171d4   0x080171d4   0x00000010   Data   RO         1382    .rodata.AHBPrescTable  system_stm32f4xx.o
    0x080171e4   0x080171e4   0x00000008   Data   RO         1383    .rodata.APBPrescTable  system_stm32f4xx.o
    0x080171ec   0x080171ec   0x00000010   Data   RO         1784    .rodata.DcdcCanSema_Attr  task_start.o
    0x080171fc   0x080171fc   0x00000010   Data   RO         1785    .rodata.ProtectionSema_Attr  task_start.o
    0x0801720c   0x0801720c   0x00000024   Data   RO         1780    .rodata.ThreadDcdc_Attr  task_start.o
    0x08017230   0x08017230   0x00000024   Data   RO         1779    .rodata.ThreadLed_Attr  task_start.o
    0x08017254   0x08017254   0x00000024   Data   RO         1781    .rodata.ThreadProtection_Attr  task_start.o
    0x08017278   0x08017278   0x00000024   Data   RO           21    .rodata.ThreadStart_Attr  main.o
    0x0801729c   0x0801729c   0x00000024   Data   RO         1778    .rodata.ThreadWorkstep_Attr  task_start.o
    0x080172c0   0x080172c0   0x00000004   Data   RO         2470    .rodata.osRtxUserSVC  rtx_lib.o
    0x080172c4   0x080172c4   0x00000024   Data   RO         2465    .rodata.os_idle_thread_attr  rtx_lib.o
    0x080172e8   0x080172e8   0x00000018   Data   RO         2467    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08017300   0x08017300   0x00000024   Data   RO         2466    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08017324   0x08017324   0x00000011   Data   RO           20    .rodata.str1.1      main.o
    0x08017335   0x08017335   0x00000070   Data   RO         1777    .rodata.str1.1      task_start.o
    0x080173a5   0x080173a5   0x0000000b   Data   RO         2455    .rodata.str1.1      rtx_kernel.o
    0x080173b0   0x080173b0   0x00000020   Data   RO         3107    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x080173d0, Size: 0x00017750, Max: 0x00030000, ABSOLUTE, COMPRESSED[0x000000d0])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000001   Data   RW         1815    .data.AcDumpConnectFlag  task_workstep.o
    0x20000001   COMPRESSED   0x00000003   PAD
    0x20000004   COMPRESSED   0x00000030   Data   RW         1896    .data.DcdcRepHandle  task_dcdc.o
    0x20000034   COMPRESSED   0x00000090   Data   RW         1927    .data.GP_CheckList  task_protection.o
    0x200000c4   COMPRESSED   0x00000144   Data   RW         1926    .data.IP_CheckList  task_protection.o
    0x20000208   COMPRESSED   0x00000004   Data   RW         1381    .data.SystemCoreClock  system_stm32f4xx.o
    0x2000020c   COMPRESSED   0x00000004   Data   RW         1752    .data.data_upcast_period  task_protocol.o
    0x20000210   COMPRESSED   0x00000001   Data   RW         1754    .data.en_SysMode    task_protocol.o
    0x20000211   COMPRESSED   0x00000001   Data   RW         1750    .data.heart_beat_flag  task_protocol.o
    0x20000212   COMPRESSED   0x00000002   PAD
    0x20000214   COMPRESSED   0x000000a4   Data   RW         2456    .data.os            rtx_kernel.o
    0x200002b8   COMPRESSED   0x00000008   Data   RW         1745    .data.refresh_continue  task_protocol.o
    0x200002c0   COMPRESSED   0x00000001   Data   RW         1743    .data.ucProtocolVersion  task_protocol.o
    0x200002c1   COMPRESSED   0x00000001   Data   RW         1747    .data.upcast_enable  task_protocol.o
    0x200002c2   COMPRESSED   0x00000001   Data   RW         1626    .data.upcast_feat_id  can_network_protocol.o
    0x200002c3   COMPRESSED   0x00000001   Data   RW          726    .data.uwTickFreq    stm32f4xx_hal.o
    0x200002c4   COMPRESSED   0x00000004   Data   RW          725    .data.uwTickPrio    stm32f4xx_hal.o
    0x200002c8   COMPRESSED   0x00000008   Data   RW         1831    .data.workstep_flag_AbortPrio  task_workstep.o
    0x200002d0        -       0x00000002   Zero   RW         1559    .bss.ADC1Count      bsp_sgm58601.o
    0x200002d2   COMPRESSED   0x00000002   PAD
    0x200002d4        -       0x00000020   Zero   RW         1548    .bss.ADC1_DATA      bsp_sgm58601.o
    0x200002f4        -       0x00000020   Zero   RW         1554    .bss.ADC1_DATA_AVG  bsp_sgm58601.o
    0x20000314   COMPRESSED   0x00000004   PAD
    0x20000318        -       0x00000040   Zero   RW         1551    .bss.ADC1_DATA_SUM  bsp_sgm58601.o
    0x20000358        -       0x00000002   Zero   RW         1560    .bss.ADC2Count      bsp_sgm58601.o
    0x2000035a   COMPRESSED   0x00000002   PAD
    0x2000035c        -       0x00000020   Zero   RW         1549    .bss.ADC2_DATA      bsp_sgm58601.o
    0x2000037c        -       0x00000020   Zero   RW         1555    .bss.ADC2_DATA_AVG  bsp_sgm58601.o
    0x2000039c   COMPRESSED   0x00000004   PAD
    0x200003a0        -       0x00000040   Zero   RW         1552    .bss.ADC2_DATA_SUM  bsp_sgm58601.o
    0x200003e0        -       0x00000002   Zero   RW         1561    .bss.ADC3Count      bsp_sgm58601.o
    0x200003e2   COMPRESSED   0x00000002   PAD
    0x200003e4        -       0x00000020   Zero   RW         1550    .bss.ADC3_DATA      bsp_sgm58601.o
    0x20000404        -       0x00000020   Zero   RW         1556    .bss.ADC3_DATA_AVG  bsp_sgm58601.o
    0x20000424   COMPRESSED   0x00000004   PAD
    0x20000428        -       0x00000040   Zero   RW         1553    .bss.ADC3_DATA_SUM  bsp_sgm58601.o
    0x20000468        -       0x0000001c   Zero   RW         1438    .bss.CAN1_RxMsg     bsp_canlink.o
    0x20000484        -       0x0000001c   Zero   RW         1439    .bss.CAN2_RxMsg     bsp_canlink.o
    0x200004a0        -       0x00000018   Zero   RW         1440    .bss.CAN_TxMsg      bsp_canlink.o
    0x200004b8        -       0x00000003   Zero   RW         1558    .bss.CONV_CNT       bsp_sgm58601.o
    0x200004bb        -       0x00000008   Zero   RW         1816    .bss.ContactCheckFlag  task_workstep.o
    0x200004c3        -       0x00000002   Zero   RW         1562    .bss.CurrOk         bsp_sgm58601.o
    0x200004c5        -       0x00000003   Zero   RW         1557    .bss.DRDY_NUM       bsp_sgm58601.o
    0x200004c8        -       0x00000004   Zero   RW         1894    .bss.DcdcCanId      task_dcdc.o
    0x200004cc        -       0x000001a0   Zero   RW         1891    .bss.DcdcParam      task_dcdc.o
    0x2000066c        -       0x00000008   Zero   RW         1888    .bss.DcdcRecvBuffer  task_dcdc.o
    0x20000674        -       0x00000008   Zero   RW         1889    .bss.DcdcRecvFrame  task_dcdc.o
    0x2000067c        -       0x00000008   Zero   RW         1890    .bss.DcdcSendFrame  task_dcdc.o
    0x20000684        -       0x00000002   Zero   RW         1426    .bss.ErrCnt         bsp_canlink.o
    0x20000686        -       0x00000002   Zero   RW         1684    .bss.ExternalAdDatProcess.ins_cnt  task_led.o
    0x20000688        -       0x00000002   Zero   RW         1685    .bss.ExternalAdDatProcess.sum_cnt  task_led.o
    0x2000068a        -       0x00000001   Zero   RW         1920    .bss.First_Alarm    task_protection.o
    0x2000068b   COMPRESSED   0x00000001   PAD
    0x2000068c        -       0x00000020   Zero   RW         1917    .bss.GP_Alarm_Flag  task_protection.o
    0x200006ac        -       0x00000020   Zero   RW         1919    .bss.GP_Alarm_Flag_History  task_protection.o
    0x200006cc        -       0x00000004   Zero   RW           47    .bss.HAL_RCC_CAN1_CLK_ENABLED  can.o
    0x200006d0        -       0x00000040   Zero   RW         1916    .bss.IP_Alarm_Flag  task_protection.o
    0x20000710        -       0x00000020   Zero   RW         1918    .bss.IP_Alarm_Flag_History  task_protection.o
    0x20000730        -       0x00000001   Zero   RW         3032    .bss.PendST         os_systick.o
    0x20000731        -       0x00000008   Zero   RW         1829    .bss.ProtectMaskFlag  task_workstep.o
    0x20000739        -       0x00000008   Zero   RW         1825    .bss.Protect_Flag_ACDC  task_workstep.o
    0x20000741        -       0x00000008   Zero   RW         1822    .bss.Protect_Flag_Global  task_workstep.o
    0x20000749        -       0x00000008   Zero   RW         1823    .bss.Protect_Flag_Internal  task_workstep.o
    0x20000751        -       0x00000008   Zero   RW         1824    .bss.Protect_Flag_Workstep  task_workstep.o
    0x20000759        -       0x00000001   Zero   RW         1751    .bss.Reconnection_Flg  task_protocol.o
    0x2000075a   COMPRESSED   0x00000002   PAD
    0x2000075c        -       0x00000004   Zero   RW         1782    .bss.SemaDcdcCan    task_start.o
    0x20000760        -       0x00000004   Zero   RW         1783    .bss.SemaProtection  task_start.o
    0x20000764        -       0x00000001   Zero   RW         1922    .bss.SysModeProtMaskFlag  task_protection.o
    0x20000765   COMPRESSED   0x00000003   PAD
    0x20000768        -       0x00000004   Zero   RW           19    .bss.ThreadIdStart  main.o
    0x2000076c        -       0x00000004   Zero   RW         1775    .bss.ThreadIdTaskDcdc  task_start.o
    0x20000770        -       0x00000004   Zero   RW         1774    .bss.ThreadIdTaskLed  task_start.o
    0x20000774        -       0x00000004   Zero   RW         1776    .bss.ThreadIdTaskProtection  task_start.o
    0x20000778        -       0x00000004   Zero   RW         1773    .bss.ThreadIdTaskWorkstep  task_start.o
    0x2000077c        -       0x00000a68   Zero   RW         1756    .bss.Tier1          task_protocol.o
    0x200011e4        -       0x00001e14   Zero   RW         1757    .bss.Tier2          task_protocol.o
    0x20002ff8        -       0x00000008   Zero   RW         1749    .bss.Tstamp         task_protocol.o
    0x20003000        -       0x00000018   Zero   RW         1647    .bss.TxMeg          can_network_transplant.o
    0x20003018        -       0x00000020   Zero   RW         1836    .bss.VcontactCur    task_workstep.o
    0x20003038        -       0x00000020   Zero   RW         1835    .bss.VcontactPre    task_workstep.o
    0x20003058        -       0x00000008   Zero   RW         1821    .bss.abort_type_flag  task_workstep.o
    0x20003060        -       0x00001200   Zero   RW         1625    .bss.can_rx_buffer  can_network_protocol.o
    0x20004260        -       0x00000001   Zero   RW         1748    .bss.clear_flag     task_protocol.o
    0x20004261        -       0x00000008   Zero   RW         1818    .bss.contact_test_once_flag  task_workstep.o
    0x20004269        -       0x00000001   Zero   RW         1893    .bss.dcdc_err_flag  task_dcdc.o
    0x2000426a        -       0x00000001   Zero   RW         1832    .bss.dcdc_on_off_state  task_workstep.o
    0x2000426b   COMPRESSED   0x00000001   PAD
    0x2000426c        -       0x000010c4   Zero   RW         1599    .bss.err_buffer     can_network_driver.o
    0x20005330        -       0x00000001   Zero   RW         1928    .bss.features       task_protection.o
    0x20005331   COMPRESSED   0x00000003   PAD
    0x20005334        -       0x00000028   Zero   RW           45    .bss.hcan1          can.o
    0x2000535c        -       0x00000028   Zero   RW           46    .bss.hcan2          can.o
    0x20005384        -       0x00000004   Zero   RW         1681    .bss.heart_beat_cnt  task_led.o
    0x20005388        -       0x00000010   Zero   RW           62    .bss.hrng           rng.o
    0x20005398        -       0x00000058   Zero   RW           82    .bss.hspi1          spi.o
    0x200053f0        -       0x00000058   Zero   RW           83    .bss.hspi2          spi.o
    0x20005448        -       0x00000058   Zero   RW           84    .bss.hspi3          spi.o
    0x200054a0        -       0x00000058   Zero   RW           85    .bss.hspi4          spi.o
    0x200054f8        -       0x00000048   Zero   RW          183    .bss.htim14         stm32f4xx_hal_timebase_tim.o
    0x20005540        -       0x00000048   Zero   RW          101    .bss.htim2          tim.o
    0x20005588        -       0x00000044   Zero   RW          117    .bss.huart1         usart.o
    0x200055cc        -       0x00000044   Zero   RW          118    .bss.huart2         usart.o
    0x20005610        -       0x00000002   Zero   RW         1744    .bss.lenAnalysis    task_protocol.o
    0x20005612   COMPRESSED   0x00000006   PAD
    0x20005618        -       0x0000c7d0   Zero   RW         2464    .bss.os             rtx_lib.o
    0x20011de8        -       0x00000034   Zero   RW         2473    .bss.os.msgqueue.cb  rtx_lib.o
    0x20011e1c        -       0x00000050   Zero   RW         2474    .bss.os.msgqueue.mem  rtx_lib.o
    0x20011e6c        -       0x00000088   Zero   RW         2471    .bss.os.thread.cb   rtx_lib.o
    0x20011ef4   COMPRESSED   0x00000004   PAD
    0x20011ef8        -       0x00000500   Zero   RW         2472    .bss.os.thread.stack  rtx_lib.o
    0x200123f8        -       0x0000000c   Zero   RW         1760    .bss.pack           task_protocol.o
    0x20012404        -       0x00000008   Zero   RW         1826    .bss.protect_flag_upcast  task_workstep.o
    0x2001240c        -       0x00000008   Zero   RW         1819    .bss.record_data_upcast_flag  task_workstep.o
    0x20012414   COMPRESSED   0x00000004   PAD
    0x20012418        -       0x00000040   Zero   RW         1834    .bss.run_time_cnt   task_workstep.o
    0x20012458        -       0x00000002   Zero   RW         1627    .bss.rx_analysis_cnt  can_network_protocol.o
    0x2001245a   COMPRESSED   0x00000002   PAD
    0x2001245c        -       0x000018c4   Zero   RW         1601    .bss.rx_buffer      can_network_driver.o
    0x20013d20        -       0x0000001c   Zero   RW         1759    .bss.st_DebugParameter  task_protocol.o
    0x20013d3c        -       0x00000008   Zero   RW         1817    .bss.start_state_flag  task_workstep.o
    0x20013d44        -       0x00000001   Zero   RW          160    .bss.time4_cnt      stm32f4xx_it.o
    0x20013d45        -       0x00000001   Zero   RW          161    .bss.time5_cnt      stm32f4xx_it.o
    0x20013d46        -       0x00000008   Zero   RW         1820    .bss.time_over_stop  task_workstep.o
    0x20013d4e   COMPRESSED   0x00000002   PAD
    0x20013d50        -       0x000018c4   Zero   RW         1600    .bss.tx_buffer      can_network_driver.o
    0x20015614        -       0x00000002   Zero   RW         1629    .bss.tx_err_cnt     can_network_protocol.o
    0x20015616        -       0x00000002   Zero   RW         1628    .bss.tx_reply_cnt   can_network_protocol.o
    0x20015618        -       0x00000020   Zero   RW         1925    .bss.ucGProtCntCur  task_protection.o
    0x20015638        -       0x00000020   Zero   RW         1924    .bss.ucGProtCntPre  task_protection.o
    0x20015658        -       0x00000060   Zero   RW         1923    .bss.ucIProtCntCur  task_protection.o
    0x200156b8        -       0x00000060   Zero   RW         1921    .bss.ucIProtCntPre  task_protection.o
    0x20015718        -       0x00000001   Zero   RW         1682    .bss.un_AddrAnalysis  task_led.o
    0x20015719   COMPRESSED   0x00000003   PAD
    0x2001571c        -       0x00000004   Zero   RW         1683    .bss.un_DcdcIdAnalysis  task_led.o
    0x20015720        -       0x0000000c   Zero   RW         1755    .bss.unpack         task_protocol.o
    0x2001572c        -       0x00000004   Zero   RW          727    .bss.uwTick         stm32f4xx_hal.o
    0x20015730        -       0x00000008   Zero   RW         1753    .bss.workstep_flag_CriticalZone  task_protocol.o
    0x20015738        -       0x00000010   Zero   RW         1833    .bss.workstep_flag_ErrWord  task_workstep.o
    0x20015748        -       0x00000001   Zero   RW         1746    .bss.workstep_flag_RunstaSet  task_protocol.o
    0x20015749   COMPRESSED   0x00000007   PAD
    0x20015750        -       0x00002000   Zero   RW            1    STACK               startup_stm32f427xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       240          0          0          0          0       3628   bsp.o
       380          0          0          0         82       7085   bsp_canlink.o
       152          0          0          0          0        947   bsp_dwt.o
       434          0          0          0          0       2068   bsp_mb85rs2.o
       498          0          0          0          0       2382   bsp_nca9555.o
      2570          6          0          0        398      13227   bsp_sgm58601.o
      1480          0          0          0          0       8262   bsp_timer.o
       724          0          0          0         84       7296   can.o
      2004          0          0          0      16972       4424   can_network_driver.o
      2264          0          0          1       4614       4791   can_network_protocol.o
       742          0          0          0         24       4614   can_network_transplant.o
       940          0          0          0          0       4528   gpio.o
      3076          0          0          0          0       4832   iic.o
       196         12          0          0          0        636   irq_cm4f.o
       372          0         53          0          4       7502   main.o
       208          0          0          0          1       4722   os_systick.o
       100          0          0          0         16       2524   rng.o
        54          6          0          0          0        750   rtx_config.o
       222          0          0          0          0       3786   rtx_delay.o
       536          0          0          0          0      25067   rtx_evr.o
      1440          0         11        164          0      14136   rtx_kernel.o
         0          0        260          0      52700       5410   rtx_lib.o
       736          0          0          0          0       2353   rtx_memory.o
       502          0          0          0          0      12089   rtx_mempool.o
      3132          0          0          0          0      14663   rtx_msgqueue.o
       326          0          0          0          0       8790   rtx_mutex.o
      1578          0          0          0          0       9049   rtx_semaphore.o
       968         10          0          0          0       6051   rtx_system.o
      4104          0          0          0          0      27655   rtx_thread.o
       490          0          0          0          0       8927   rtx_timer.o
       820          0          0          0        352       5872   spi.o
        36          8        428          0       8192        860   startup_stm32f427xx.o
       100          0          0          5          4       7548   stm32f4xx_hal.o
      3270          0          0          0          0      11400   stm32f4xx_hal_can.o
       410          0          0          0          0       9615   stm32f4xx_hal_cortex.o
       312          0          0          0          0       8508   stm32f4xx_hal_dma.o
      1218          0          0          0          0       5205   stm32f4xx_hal_gpio.o
        82          0          0          0          0       1551   stm32f4xx_hal_msp.o
       190          0          0          0          0       4478   stm32f4xx_hal_pwr_ex.o
      2746          0          0          0          0       7662   stm32f4xx_hal_rcc.o
        90          0          0          0          0       3856   stm32f4xx_hal_rng.o
      1646          0          0          0          0      19764   stm32f4xx_hal_spi.o
      3110         14          0          0          0      36011   stm32f4xx_hal_tim.o
       306          0          0          0          0      15353   stm32f4xx_hal_tim_ex.o
       250          0          0          0         72       7291   stm32f4xx_hal_timebase_tim.o
      2344          0          0          0          0      20233   stm32f4xx_hal_uart.o
      1988         32          0          0          2       4138   stm32f4xx_it.o
        18          0         24          4          0       2587   system_stm32f4xx.o
      2206         20          0         48        445       7250   task_dcdc.o
      1744          0          0          0          0       2890   task_init.o
      1812          4          0          0         13       3063   task_led.o
      7522         36          0        468        419       8241   task_protection.o
     15576        490          0         16      10437      26907   task_protocol.o
       270          0        288          0         24       3588   task_start.o
     12532         64          0          9        241      12428   task_workstep.o
       324          0          0          0         72       5858   tim.o
       434          0          0          0        136       7159   usart.o

    ----------------------------------------------------------------------
     92222        702       1096        720      95360     471510   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       398          0          0          5         56          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        98          0          0          0          0         84   ldiv.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
        98          0          0          0          0         92   uldiv.o
        56          0          0          0          0         88   d2f.o
       334          0          0          0          0        148   dadd.o
        54          0          0          0          0         80   dcmpge.o
        54          0          0          0          0         80   dcmple.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
       228          0          0          0          0         96   dmul.o
        38          0          0          0          0         68   f2d.o
       110          0          0          0          0        168   fepilogue.o
        44          0          0          0          0         68   ffixul.o

    ----------------------------------------------------------------------
      1866         16          0          0          0       1696   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       538         16          0          0          0        624   mc_w.l
      1326          0          0          0          0       1072   mf_w.l

    ----------------------------------------------------------------------
      1866         16          0          0          0       1696   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     94088        718       1096        720      95360     471762   Grand Totals
     94088        718       1096        208      95360     471762   ELF Image Totals (compressed)
     94088        718       1096        208          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                95184 (  92.95kB)
    Total RW  Size (RW Data + ZI Data)             96080 (  93.83kB)
    Total ROM Size (Code + RO Data + RW Data)      95392 (  93.16kB)

==============================================================================

