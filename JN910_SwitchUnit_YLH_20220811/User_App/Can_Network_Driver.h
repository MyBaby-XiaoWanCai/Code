/**********************************************************************************************************
** Company     : JNE WuHan Co.,Ltd.
** Project     :
** --------------------------------------------------------------------------------------------------------
** File name   : Can_Network_Driver.h
** Author      : Cai Heng
** Date        : 2021-01-25
** Description : CAN组网协议底层驱动文件
**********************************************************************************************************/

#ifndef _CAN_NETWORK_DRIVER_H_
#define _CAN_NETWORK_DRIVER_H_

#ifdef __cplusplus
extern "C" {
#endif
    
/**********************************************************************************************************
**                                          头文件引用区
**********************************************************************************************************/
#include "main.h"								/* >>>>>> 主头文件 <<<<<< */

/**********************************************************************************************************
**                                            宏定义区
**********************************************************************************************************/
//#define DATA_PACK_LEN			32 * 8 * 5		/* >>>>>> 数据缓存长度上限 <<<<<< */
#define DATA_PACK_LEN			256				/* >>>>>> 数据缓存长度上限 <<<<<< */
//#define DATA_PACK_LEN			32 * 8			/* >>>>>> 数据缓存长度上限 <<<<<< */
#define DATA_PACK_NUM			24				/* >>>>>> 数据缓存包数上限 <<<<<< */

#define MAJOR_REQUEST			0				/* 紧急请求 */
#define COMMON_REQUEST			1				/* 普通请求 */

/**********************************************************************************************************
**                                           类型定义区
**********************************************************************************************************/
/* 数据包结构体 */
typedef struct
{
	u32_t feat_id;								/* 数据包特征ID */
	u16_t len;									/* 数据包长度 */
	u8_t dat[DATA_PACK_LEN];					/* 数据包数据 */
}Data_Pack_Struct ;

/* 数据缓存结构体 */
typedef struct
{
	u8_t pack_cnt;								/* 缓存数据包数 */
	u8_t head_ptr;								/* 头指针(数据包缓存指针) */
	u8_t tail_ptr;								/* 尾指针(数据包处理指针) */
	Data_Pack_Struct data_pack[DATA_PACK_NUM];	/* 数据包缓存区 */
}Data_Buffer_Struct;

/**********************************************************************************************************
**                                         外部引用变量区
**********************************************************************************************************/	
extern Data_Buffer_Struct rx_buffer;
extern Data_Buffer_Struct tx_buffer;
extern Err_Buffer_Struct err_buffer;

/**********************************************************************************************************
**                                         外部引用函数区
**********************************************************************************************************/
extern s8_t Err_Info_Pop(void);
extern void Err_Info_Push(u8_t err_sta, u32_t err_id, u16_t err_len, u8_t* err_dat);
extern s8_t Network_Data_Pop(u8_t* dat, u32_t* feat_id, u16_t* len, Data_Buffer_Struct *p);
extern s8_t Network_Data_Push_Tx_Buffer(u8_t* dat, u32_t feat_id, u16_t len, u8_t cmd);
extern s8_t Network_Data_Push_Rx_Buffer(u8_t* dat, u32_t feat_id, u16_t len, u8_t cmd);

#ifdef __cplusplus
}
#endif

#endif
