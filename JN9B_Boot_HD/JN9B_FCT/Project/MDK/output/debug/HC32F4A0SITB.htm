<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\debug\HC32F4A0SITB.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\debug\HC32F4A0SITB.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Feb 28 11:23:25 2022
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; $Super$$main &rArr; System_Init &rArr; bsp_Init &rArr; W25Q_MB85R_SpiInit &rArr; GPIO_SetFunc &rArr; DDL_AssertHandler &rArr; __2printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from hc32f4a0_interrupts.o(i.BusFault_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from hc32f4a0_interrupts.o(i.DebugMon_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from hc32f4a0_interrupts.o(i.HardFault_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[a]">IRQ000_Handler</a> from hc32f4a0_interrupts.o(i.IRQ000_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[b]">IRQ001_Handler</a> from hc32f4a0_interrupts.o(i.IRQ001_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[c]">IRQ002_Handler</a> from hc32f4a0_interrupts.o(i.IRQ002_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[d]">IRQ003_Handler</a> from hc32f4a0_interrupts.o(i.IRQ003_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[e]">IRQ004_Handler</a> from hc32f4a0_interrupts.o(i.IRQ004_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[f]">IRQ005_Handler</a> from hc32f4a0_interrupts.o(i.IRQ005_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[10]">IRQ006_Handler</a> from hc32f4a0_interrupts.o(i.IRQ006_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[11]">IRQ007_Handler</a> from hc32f4a0_interrupts.o(i.IRQ007_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[12]">IRQ008_Handler</a> from hc32f4a0_interrupts.o(i.IRQ008_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[13]">IRQ009_Handler</a> from hc32f4a0_interrupts.o(i.IRQ009_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[14]">IRQ010_Handler</a> from hc32f4a0_interrupts.o(i.IRQ010_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[15]">IRQ011_Handler</a> from hc32f4a0_interrupts.o(i.IRQ011_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[16]">IRQ012_Handler</a> from hc32f4a0_interrupts.o(i.IRQ012_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[17]">IRQ013_Handler</a> from hc32f4a0_interrupts.o(i.IRQ013_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[18]">IRQ014_Handler</a> from hc32f4a0_interrupts.o(i.IRQ014_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[19]">IRQ015_Handler</a> from hc32f4a0_interrupts.o(i.IRQ015_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[1a]">IRQ016_Handler</a> from hc32f4a0_interrupts.o(i.IRQ016_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[1b]">IRQ017_Handler</a> from hc32f4a0_interrupts.o(i.IRQ017_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[1c]">IRQ018_Handler</a> from hc32f4a0_interrupts.o(i.IRQ018_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[1d]">IRQ019_Handler</a> from hc32f4a0_interrupts.o(i.IRQ019_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[1e]">IRQ020_Handler</a> from hc32f4a0_interrupts.o(i.IRQ020_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[1f]">IRQ021_Handler</a> from hc32f4a0_interrupts.o(i.IRQ021_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[20]">IRQ022_Handler</a> from hc32f4a0_interrupts.o(i.IRQ022_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[21]">IRQ023_Handler</a> from hc32f4a0_interrupts.o(i.IRQ023_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[22]">IRQ024_Handler</a> from hc32f4a0_interrupts.o(i.IRQ024_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[23]">IRQ025_Handler</a> from hc32f4a0_interrupts.o(i.IRQ025_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[24]">IRQ026_Handler</a> from hc32f4a0_interrupts.o(i.IRQ026_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[25]">IRQ027_Handler</a> from hc32f4a0_interrupts.o(i.IRQ027_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[26]">IRQ028_Handler</a> from hc32f4a0_interrupts.o(i.IRQ028_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[27]">IRQ029_Handler</a> from hc32f4a0_interrupts.o(i.IRQ029_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[28]">IRQ030_Handler</a> from hc32f4a0_interrupts.o(i.IRQ030_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[29]">IRQ031_Handler</a> from hc32f4a0_interrupts.o(i.IRQ031_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[2a]">IRQ032_Handler</a> from hc32f4a0_interrupts.o(i.IRQ032_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[2b]">IRQ033_Handler</a> from hc32f4a0_interrupts.o(i.IRQ033_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[2c]">IRQ034_Handler</a> from hc32f4a0_interrupts.o(i.IRQ034_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[2d]">IRQ035_Handler</a> from hc32f4a0_interrupts.o(i.IRQ035_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[2e]">IRQ036_Handler</a> from hc32f4a0_interrupts.o(i.IRQ036_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[2f]">IRQ037_Handler</a> from hc32f4a0_interrupts.o(i.IRQ037_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[30]">IRQ038_Handler</a> from hc32f4a0_interrupts.o(i.IRQ038_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[31]">IRQ039_Handler</a> from hc32f4a0_interrupts.o(i.IRQ039_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[32]">IRQ040_Handler</a> from hc32f4a0_interrupts.o(i.IRQ040_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[33]">IRQ041_Handler</a> from hc32f4a0_interrupts.o(i.IRQ041_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[34]">IRQ042_Handler</a> from hc32f4a0_interrupts.o(i.IRQ042_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[35]">IRQ043_Handler</a> from hc32f4a0_interrupts.o(i.IRQ043_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[36]">IRQ044_Handler</a> from hc32f4a0_interrupts.o(i.IRQ044_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[37]">IRQ045_Handler</a> from hc32f4a0_interrupts.o(i.IRQ045_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[38]">IRQ046_Handler</a> from hc32f4a0_interrupts.o(i.IRQ046_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[39]">IRQ047_Handler</a> from hc32f4a0_interrupts.o(i.IRQ047_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[3a]">IRQ048_Handler</a> from hc32f4a0_interrupts.o(i.IRQ048_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[3b]">IRQ049_Handler</a> from hc32f4a0_interrupts.o(i.IRQ049_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[3c]">IRQ050_Handler</a> from hc32f4a0_interrupts.o(i.IRQ050_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[3d]">IRQ051_Handler</a> from hc32f4a0_interrupts.o(i.IRQ051_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[3e]">IRQ052_Handler</a> from hc32f4a0_interrupts.o(i.IRQ052_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[3f]">IRQ053_Handler</a> from hc32f4a0_interrupts.o(i.IRQ053_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[40]">IRQ054_Handler</a> from hc32f4a0_interrupts.o(i.IRQ054_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[41]">IRQ055_Handler</a> from hc32f4a0_interrupts.o(i.IRQ055_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[42]">IRQ056_Handler</a> from hc32f4a0_interrupts.o(i.IRQ056_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[43]">IRQ057_Handler</a> from hc32f4a0_interrupts.o(i.IRQ057_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[44]">IRQ058_Handler</a> from hc32f4a0_interrupts.o(i.IRQ058_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[45]">IRQ059_Handler</a> from hc32f4a0_interrupts.o(i.IRQ059_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[46]">IRQ060_Handler</a> from hc32f4a0_interrupts.o(i.IRQ060_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[47]">IRQ061_Handler</a> from hc32f4a0_interrupts.o(i.IRQ061_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[48]">IRQ062_Handler</a> from hc32f4a0_interrupts.o(i.IRQ062_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[49]">IRQ063_Handler</a> from hc32f4a0_interrupts.o(i.IRQ063_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[4a]">IRQ064_Handler</a> from hc32f4a0_interrupts.o(i.IRQ064_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[4b]">IRQ065_Handler</a> from hc32f4a0_interrupts.o(i.IRQ065_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[4c]">IRQ066_Handler</a> from hc32f4a0_interrupts.o(i.IRQ066_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[4d]">IRQ067_Handler</a> from hc32f4a0_interrupts.o(i.IRQ067_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[4e]">IRQ068_Handler</a> from hc32f4a0_interrupts.o(i.IRQ068_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[4f]">IRQ069_Handler</a> from hc32f4a0_interrupts.o(i.IRQ069_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[50]">IRQ070_Handler</a> from hc32f4a0_interrupts.o(i.IRQ070_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[51]">IRQ071_Handler</a> from hc32f4a0_interrupts.o(i.IRQ071_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[52]">IRQ072_Handler</a> from hc32f4a0_interrupts.o(i.IRQ072_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[53]">IRQ073_Handler</a> from hc32f4a0_interrupts.o(i.IRQ073_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[54]">IRQ074_Handler</a> from hc32f4a0_interrupts.o(i.IRQ074_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[55]">IRQ075_Handler</a> from hc32f4a0_interrupts.o(i.IRQ075_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[56]">IRQ076_Handler</a> from hc32f4a0_interrupts.o(i.IRQ076_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[57]">IRQ077_Handler</a> from hc32f4a0_interrupts.o(i.IRQ077_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[58]">IRQ078_Handler</a> from hc32f4a0_interrupts.o(i.IRQ078_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[59]">IRQ079_Handler</a> from hc32f4a0_interrupts.o(i.IRQ079_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[5a]">IRQ080_Handler</a> from hc32f4a0_interrupts.o(i.IRQ080_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[5b]">IRQ081_Handler</a> from hc32f4a0_interrupts.o(i.IRQ081_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[5c]">IRQ082_Handler</a> from hc32f4a0_interrupts.o(i.IRQ082_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[5d]">IRQ083_Handler</a> from hc32f4a0_interrupts.o(i.IRQ083_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[5e]">IRQ084_Handler</a> from hc32f4a0_interrupts.o(i.IRQ084_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[5f]">IRQ085_Handler</a> from hc32f4a0_interrupts.o(i.IRQ085_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[60]">IRQ086_Handler</a> from hc32f4a0_interrupts.o(i.IRQ086_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[61]">IRQ087_Handler</a> from hc32f4a0_interrupts.o(i.IRQ087_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[62]">IRQ088_Handler</a> from hc32f4a0_interrupts.o(i.IRQ088_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[63]">IRQ089_Handler</a> from hc32f4a0_interrupts.o(i.IRQ089_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[64]">IRQ090_Handler</a> from hc32f4a0_interrupts.o(i.IRQ090_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[65]">IRQ091_Handler</a> from hc32f4a0_interrupts.o(i.IRQ091_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[66]">IRQ092_Handler</a> from hc32f4a0_interrupts.o(i.IRQ092_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[67]">IRQ093_Handler</a> from hc32f4a0_interrupts.o(i.IRQ093_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[68]">IRQ094_Handler</a> from hc32f4a0_interrupts.o(i.IRQ094_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[69]">IRQ095_Handler</a> from hc32f4a0_interrupts.o(i.IRQ095_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[6a]">IRQ096_Handler</a> from hc32f4a0_interrupts.o(i.IRQ096_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[6b]">IRQ097_Handler</a> from hc32f4a0_interrupts.o(i.IRQ097_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[6c]">IRQ098_Handler</a> from hc32f4a0_interrupts.o(i.IRQ098_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[6d]">IRQ099_Handler</a> from hc32f4a0_interrupts.o(i.IRQ099_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[6e]">IRQ100_Handler</a> from hc32f4a0_interrupts.o(i.IRQ100_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[6f]">IRQ101_Handler</a> from hc32f4a0_interrupts.o(i.IRQ101_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[70]">IRQ102_Handler</a> from hc32f4a0_interrupts.o(i.IRQ102_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[71]">IRQ103_Handler</a> from hc32f4a0_interrupts.o(i.IRQ103_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[72]">IRQ104_Handler</a> from hc32f4a0_interrupts.o(i.IRQ104_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[73]">IRQ105_Handler</a> from hc32f4a0_interrupts.o(i.IRQ105_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[74]">IRQ106_Handler</a> from hc32f4a0_interrupts.o(i.IRQ106_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[75]">IRQ107_Handler</a> from hc32f4a0_interrupts.o(i.IRQ107_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[76]">IRQ108_Handler</a> from hc32f4a0_interrupts.o(i.IRQ108_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[77]">IRQ109_Handler</a> from hc32f4a0_interrupts.o(i.IRQ109_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[78]">IRQ110_Handler</a> from hc32f4a0_interrupts.o(i.IRQ110_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[79]">IRQ111_Handler</a> from hc32f4a0_interrupts.o(i.IRQ111_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[7a]">IRQ112_Handler</a> from hc32f4a0_interrupts.o(i.IRQ112_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[7b]">IRQ113_Handler</a> from hc32f4a0_interrupts.o(i.IRQ113_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[7c]">IRQ114_Handler</a> from hc32f4a0_interrupts.o(i.IRQ114_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[7d]">IRQ115_Handler</a> from hc32f4a0_interrupts.o(i.IRQ115_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[7e]">IRQ116_Handler</a> from hc32f4a0_interrupts.o(i.IRQ116_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[7f]">IRQ117_Handler</a> from hc32f4a0_interrupts.o(i.IRQ117_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[80]">IRQ118_Handler</a> from hc32f4a0_interrupts.o(i.IRQ118_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[81]">IRQ119_Handler</a> from hc32f4a0_interrupts.o(i.IRQ119_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[82]">IRQ120_Handler</a> from hc32f4a0_interrupts.o(i.IRQ120_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[83]">IRQ121_Handler</a> from hc32f4a0_interrupts.o(i.IRQ121_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[84]">IRQ122_Handler</a> from hc32f4a0_interrupts.o(i.IRQ122_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[85]">IRQ123_Handler</a> from hc32f4a0_interrupts.o(i.IRQ123_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[86]">IRQ124_Handler</a> from hc32f4a0_interrupts.o(i.IRQ124_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[87]">IRQ125_Handler</a> from hc32f4a0_interrupts.o(i.IRQ125_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[88]">IRQ126_Handler</a> from hc32f4a0_interrupts.o(i.IRQ126_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[89]">IRQ127_Handler</a> from hc32f4a0_interrupts.o(i.IRQ127_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[8a]">IRQ128_Handler</a> from hc32f4a0_interrupts.o(i.IRQ128_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[8b]">IRQ129_Handler</a> from hc32f4a0_interrupts.o(i.IRQ129_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[8c]">IRQ130_Handler</a> from hc32f4a0_interrupts.o(i.IRQ130_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[8d]">IRQ131_Handler</a> from hc32f4a0_interrupts.o(i.IRQ131_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[8e]">IRQ132_Handler</a> from hc32f4a0_interrupts.o(i.IRQ132_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[8f]">IRQ133_Handler</a> from hc32f4a0_interrupts.o(i.IRQ133_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[90]">IRQ134_Handler</a> from hc32f4a0_interrupts.o(i.IRQ134_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[91]">IRQ135_Handler</a> from hc32f4a0_interrupts.o(i.IRQ135_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[92]">IRQ136_Handler</a> from hc32f4a0_interrupts.o(i.IRQ136_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[93]">IRQ137_Handler</a> from hc32f4a0_interrupts.o(i.IRQ137_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[94]">IRQ138_Handler</a> from hc32f4a0_interrupts.o(i.IRQ138_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[95]">IRQ139_Handler</a> from hc32f4a0_interrupts.o(i.IRQ139_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[96]">IRQ140_Handler</a> from hc32f4a0_interrupts.o(i.IRQ140_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[97]">IRQ141_Handler</a> from hc32f4a0_interrupts.o(i.IRQ141_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[98]">IRQ142_Handler</a> from hc32f4a0_interrupts.o(i.IRQ142_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[99]">IRQ143_Handler</a> from hc32f4a0_interrupts.o(i.IRQ143_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from hc32f4a0_interrupts.o(i.MemManage_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from hc32f4a0_interrupts.o(i.NMI_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_hc32f4a0sitb.o(.text) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_hc32f4a0sitb.o(.text) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_hc32f4a0sitb.o(.text) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_hc32f4a0sitb.o(.text) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[9b]">SystemInit</a> from system_hc32f4a0sitb.o(i.SystemInit) referenced from startup_hc32f4a0sitb.o(.text)
 <LI><a href="#[9d]">TimerAUnit1_OvfIrqCallback</a> from bsp_timer.o(i.TimerAUnit1_OvfIrqCallback) referenced from bsp_timer.o(i.TimerAUint1_IrqConfig)
 <LI><a href="#[5]">UsageFault_Handler</a> from hc32f4a0_interrupts.o(i.UsageFault_Handler) referenced from startup_hc32f4a0sitb.o(RESET)
 <LI><a href="#[9c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_hc32f4a0sitb.o(.text)
 <LI><a href="#[9e]">fputc</a> from fputc.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[9a]">main</a> from system_hc32f4a0sitb.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(.text)
</UL>
<P><STRONG><a name="[2d4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[281]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[283]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2d5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[2d6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[2d7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2d8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[2d9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hc32f4a0sitb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f4a0sitb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f4a0sitb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32f4a0sitb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[2da]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2cd]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[282]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2db]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2dc]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[2dd]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, system_hc32f4a0sitb.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main &rArr; $Super$$main &rArr; System_Init &rArr; bsp_Init &rArr; W25Q_MB85R_SpiInit &rArr; GPIO_SetFunc &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a1]"></a>ADC_1_Cmp0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_1_Cmp0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[a2]"></a>ADC_1_Cmp1Comb_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_1_Cmp1Comb_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[a3]"></a>ADC_1_Cmp1Ind_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_1_Cmp1Ind_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[a4]"></a>ADC_1_SeqA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_1_SeqA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[a5]"></a>ADC_1_SeqB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_1_SeqB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[a6]"></a>ADC_2_Cmp0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_2_Cmp0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[a7]"></a>ADC_2_Cmp1Comb_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_2_Cmp1Comb_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[a8]"></a>ADC_2_Cmp1Ind_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_2_Cmp1Ind_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[a9]"></a>ADC_2_SeqA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_2_SeqA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[aa]"></a>ADC_2_SeqB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_2_SeqB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[ab]"></a>ADC_3_Cmp0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_3_Cmp0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[ac]"></a>ADC_3_Cmp1Comb_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_3_Cmp1Comb_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[ad]"></a>ADC_3_Cmp1Ind_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_3_Cmp1Ind_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[ae]"></a>ADC_3_SeqA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_3_SeqA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[af]"></a>ADC_3_SeqB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ADC_3_SeqB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[286]"></a>Boot_JMP_APP</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, main.o(i.Boot_JMP_APP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Boot_JMP_APP
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.BusFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BusFault_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>BusFault_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.BusFault_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[b1]"></a>CAN_1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.CAN_1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[b2]"></a>CAN_2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.CAN_2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[288]"></a>CLK_GetStableStatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hc32f4a0_clk.o(i.CLK_GetStableStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CLK_GetStableStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_XtalCmd
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_PLLHCmd
</UL>

<P><STRONG><a name="[b3]"></a>CLK_XtalStop_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.CLK_XtalStop_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[b4]"></a>CTC_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.CTC_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[b5]"></a>CTC_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.CTC_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[b6]"></a>DCU_1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DCU_1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[289]"></a>CLK_ClkDiv</STRONG> (Thumb, 962 bytes, Stack size 40 bytes, hc32f4a0_clk.o(i.CLK_ClkDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLK_ClkDiv &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[28a]"></a>CLK_PLLHCmd</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, hc32f4a0_clk.o(i.CLK_PLLHCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CLK_PLLHCmd &rArr; CLK_GetStableStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetStableStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_PLLHInit
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[28b]"></a>CLK_PLLHInit</STRONG> (Thumb, 588 bytes, Stack size 24 bytes, hc32f4a0_clk.o(i.CLK_PLLHInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CLK_PLLHInit &rArr; CLK_PLLHCmd &rArr; CLK_GetStableStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_PLLHCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2b6]"></a>CLK_PLLHStrucInit</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, hc32f4a0_clk.o(i.CLK_PLLHStrucInit))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[28c]"></a>CLK_SetSysClkSrc</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, hc32f4a0_clk.o(i.CLK_SetSysClkSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CLK_SetSysClkSrc &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[28d]"></a>CLK_XtalCmd</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, hc32f4a0_clk.o(i.CLK_XtalCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CLK_XtalCmd &rArr; CLK_GetStableStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetStableStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_XtalInit
</UL>

<P><STRONG><a name="[28e]"></a>CLK_XtalInit</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, hc32f4a0_clk.o(i.CLK_XtalInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLK_XtalInit &rArr; CLK_XtalCmd &rArr; CLK_GetStableStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_XtalCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2b5]"></a>CLK_XtalStrucInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hc32f4a0_clk.o(i.CLK_XtalStrucInit))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[b7]"></a>DCU_2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DCU_2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[b8]"></a>DCU_3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DCU_3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[b9]"></a>DCU_4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DCU_4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[ba]"></a>DCU_5_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DCU_5_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[bb]"></a>DCU_6_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DCU_6_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[bc]"></a>DCU_7_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DCU_7_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[bd]"></a>DCU_8_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DCU_8_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[9f]"></a>DDL_AssertHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hc32f4a0_utility.o(i.DDL_AssertHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_XtalInit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_XtalCmd
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetSysClkSrc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_PLLHInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_PLLHCmd
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetStableStatus
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_ClkDiv
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_TogglePins
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPins
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetFunc
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetPins
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SingleProgram
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SetWaitCycle
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SectorErase
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SectorCmd_Sequential
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_GetFlagStatus
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_FWMC_Unlock
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_FWMC_Lock
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_ClearFlag
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWDT_Init
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FunctionCmd
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DeInit
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWC_Fcg2PeriphClockCmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWC_Fcg1PeriphClockCmd
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_Stop
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_Start
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_IntCmd
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_Init
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_GetStatus
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_ClrStatus
</UL>

<P><STRONG><a name="[be]"></a>DMA_1_Btc0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Btc0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[bf]"></a>DMA_1_Btc1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Btc1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c0]"></a>DMA_1_Btc2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Btc2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c1]"></a>DMA_1_Btc3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Btc3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c2]"></a>DMA_1_Btc4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Btc4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c3]"></a>DMA_1_Btc5_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Btc5_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c4]"></a>DMA_1_Btc6_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Btc6_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c5]"></a>DMA_1_Btc7_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Btc7_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c6]"></a>DMA_1_Err0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Err0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c7]"></a>DMA_1_Err1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Err1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c8]"></a>DMA_1_Err2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Err2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[c9]"></a>DMA_1_Err3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Err3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[ca]"></a>DMA_1_Err4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Err4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[cb]"></a>DMA_1_Err5_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Err5_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[cc]"></a>DMA_1_Err6_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Err6_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[cd]"></a>DMA_1_Err7_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Err7_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[ce]"></a>DMA_1_Tc0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Tc0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[cf]"></a>DMA_1_Tc1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Tc1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[d0]"></a>DMA_1_Tc2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Tc2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[d1]"></a>DMA_1_Tc3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Tc3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[d2]"></a>DMA_1_Tc4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Tc4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[d3]"></a>DMA_1_Tc5_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Tc5_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[d4]"></a>DMA_1_Tc6_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Tc6_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[d5]"></a>DMA_1_Tc7_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_1_Tc7_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[d6]"></a>DMA_2_Btc0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Btc0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[d7]"></a>DMA_2_Btc1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Btc1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[d8]"></a>DMA_2_Btc2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Btc2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[d9]"></a>DMA_2_Btc3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Btc3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[da]"></a>DMA_2_Btc4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Btc4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[db]"></a>DMA_2_Btc5_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Btc5_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[dc]"></a>DMA_2_Btc6_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Btc6_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[dd]"></a>DMA_2_Btc7_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Btc7_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[de]"></a>DMA_2_Err0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Err0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[df]"></a>DMA_2_Err1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Err1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e0]"></a>DMA_2_Err2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Err2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e1]"></a>DMA_2_Err3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Err3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e2]"></a>DMA_2_Err4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Err4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e3]"></a>DMA_2_Err5_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Err5_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e4]"></a>DMA_2_Err6_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Err6_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e5]"></a>DMA_2_Err7_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Err7_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e6]"></a>DMA_2_Tc0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Tc0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e7]"></a>DMA_2_Tc1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Tc1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e8]"></a>DMA_2_Tc2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Tc2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[e9]"></a>DMA_2_Tc3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Tc3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[ea]"></a>DMA_2_Tc4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Tc4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[eb]"></a>DMA_2_Tc5_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Tc5_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[ec]"></a>DMA_2_Tc6_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Tc6_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[ed]"></a>DMA_2_Tc7_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DMA_2_Tc7_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[ee]"></a>DVP_FifoErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DVP_FifoErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[ef]"></a>DVP_FrameEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DVP_FrameEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[f0]"></a>DVP_FrameStart_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DVP_FrameStart_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[f1]"></a>DVP_LineEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DVP_LineEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[f2]"></a>DVP_LineStart_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DVP_LineStart_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[f3]"></a>DVP_SwSyncErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DVP_SwSyncErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.DebugMon_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DebugMon_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[f4]"></a>DebugMon_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.DebugMon_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>

<P><STRONG><a name="[2a4]"></a>Dis_int</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bsp.o(i.Dis_int))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_CheckWrite
</UL>

<P><STRONG><a name="[290]"></a>EFM_ClearFlag</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hc32f4a0_efm.o(i.EFM_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EFM_ClearFlag &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SingleProgram
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SectorErase
</UL>

<P><STRONG><a name="[f5]"></a>EFM_ColErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EFM_ColErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[291]"></a>EFM_FCT_Init</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, main.o(i.EFM_FCT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EFM_FCT_Init &rArr; EFM_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_StructInit
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[295]"></a>EFM_FWMC_Lock</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, hc32f4a0_efm.o(i.EFM_FWMC_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EFM_FWMC_Lock &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_WP
</UL>

<P><STRONG><a name="[296]"></a>EFM_FWMC_Unlock</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hc32f4a0_efm.o(i.EFM_FWMC_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EFM_FWMC_Unlock &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_WE
</UL>

<P><STRONG><a name="[294]"></a>EFM_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hc32f4a0_efm.o(i.EFM_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EFM_GetFlagStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SingleProgram
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SectorErase
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_FCT_Init
</UL>

<P><STRONG><a name="[293]"></a>EFM_Init</STRONG> (Thumb, 444 bytes, Stack size 16 bytes, hc32f4a0_efm.o(i.EFM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EFM_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_FCT_Init
</UL>

<P><STRONG><a name="[f6]"></a>EFM_OpEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EFM_OpEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[f7]"></a>EFM_PgmEraseErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EFM_PgmEraseErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[297]"></a>EFM_SectorCmd_Sequential</STRONG> (Thumb, 316 bytes, Stack size 64 bytes, hc32f4a0_efm.o(i.EFM_SectorCmd_Sequential))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EFM_SectorCmd_Sequential &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_APP_Zone
</UL>

<P><STRONG><a name="[298]"></a>EFM_SectorErase</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, hc32f4a0_efm.o(i.EFM_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EFM_SectorErase &rArr; EFM_GetFlagStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_GetFlagStatus
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_APP_Zone
</UL>

<P><STRONG><a name="[299]"></a>EFM_SetWaitCycle</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, hc32f4a0_efm.o(i.EFM_SetWaitCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EFM_SetWaitCycle &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[29a]"></a>EFM_SingleProgram</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, hc32f4a0_efm.o(i.EFM_SingleProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EFM_SingleProgram &rArr; EFM_GetFlagStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_GetFlagStatus
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[292]"></a>EFM_StructInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hc32f4a0_efm.o(i.EFM_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_FCT_Init
</UL>

<P><STRONG><a name="[f8]"></a>EMB_GR0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EMB_GR0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[f9]"></a>EMB_GR1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EMB_GR1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[fa]"></a>EMB_GR2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EMB_GR2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[fb]"></a>EMB_GR3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EMB_GR3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[fc]"></a>EMB_GR4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EMB_GR4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[fd]"></a>EMB_GR5_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EMB_GR5_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[fe]"></a>EMB_GR6_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EMB_GR6_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[ff]"></a>ETH_Global_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ETH_Global_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[100]"></a>ETH_Wakeup_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.ETH_Wakeup_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[101]"></a>EXTINT_00_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_00_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[102]"></a>EXTINT_01_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_01_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[103]"></a>EXTINT_02_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_02_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[104]"></a>EXTINT_03_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_03_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[105]"></a>EXTINT_04_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_04_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[106]"></a>EXTINT_05_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_05_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[107]"></a>EXTINT_06_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_06_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[108]"></a>EXTINT_07_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_07_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[109]"></a>EXTINT_08_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_08_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[10a]"></a>EXTINT_09_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_09_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[10b]"></a>EXTINT_10_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_10_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[10c]"></a>EXTINT_11_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_11_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[10d]"></a>EXTINT_12_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_12_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[10e]"></a>EXTINT_13_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_13_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[10f]"></a>EXTINT_14_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_14_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[110]"></a>EXTINT_15_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.EXTINT_15_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ128_Handler
</UL>

<P><STRONG><a name="[2a7]"></a>En_int</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, bsp.o(i.En_int))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_CheckWrite
</UL>

<P><STRONG><a name="[29b]"></a>Erase_APP_Zone</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(i.Erase_APP_Zone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Erase_APP_Zone &rArr; EFM_SectorCmd_Sequential &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SectorErase
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SectorCmd_Sequential
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_WDG
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[280]"></a>Error_Handler</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bsp.o(i.Error_Handler), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Error_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[111]"></a>FCM_End_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.FCM_End_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[112]"></a>FCM_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.FCM_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[113]"></a>FCM_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.FCM_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[114]"></a>FMAC_1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.FMAC_1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[115]"></a>FMAC_2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.FMAC_2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[116]"></a>FMAC_3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.FMAC_3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[117]"></a>FMAC_4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.FMAC_4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[29c]"></a>Feed_WDG</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_gpio.o(i.Feed_WDG))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Feed_WDG &rArr; GPIO_TogglePins &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_TogglePins
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWDT_Feed
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUnit1_OvfIrqCallback
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_APP_Zone
</UL>

<P><STRONG><a name="[29f]"></a>GPIO_Init</STRONG> (Thumb, 424 bytes, Stack size 32 bytes, hc32f4a0_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLed
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_HWDG_InitGPIO
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_FR_ADDR_InitGPIO
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
</UL>

<P><STRONG><a name="[2a0]"></a>GPIO_ResetPins</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, hc32f4a0_gpio.o(i.GPIO_ResetPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_ResetPins &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Write
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Read
</UL>

<P><STRONG><a name="[2a1]"></a>GPIO_SetFunc</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, hc32f4a0_gpio.o(i.GPIO_SetFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_SetFunc &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
</UL>

<P><STRONG><a name="[2a2]"></a>GPIO_SetPins</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, hc32f4a0_gpio.o(i.GPIO_SetPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_SetPins &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Write
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Read
</UL>

<P><STRONG><a name="[2c9]"></a>GPIO_StructInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hc32f4a0_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLed
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_HWDG_InitGPIO
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_FR_ADDR_InitGPIO
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
</UL>

<P><STRONG><a name="[29e]"></a>GPIO_TogglePins</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, hc32f4a0_gpio.o(i.GPIO_TogglePins))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_TogglePins &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_WDG
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HardFault_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[118]"></a>HardFault_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.HardFault_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[119]"></a>I2C_1_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_1_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[11a]"></a>I2C_1_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_1_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[11b]"></a>I2C_1_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_1_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[11c]"></a>I2C_1_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_1_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[11d]"></a>I2C_2_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_2_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[11e]"></a>I2C_2_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_2_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[11f]"></a>I2C_2_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_2_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[120]"></a>I2C_2_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_2_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[121]"></a>I2C_3_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_3_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[122]"></a>I2C_3_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_3_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[123]"></a>I2C_3_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_3_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[124]"></a>I2C_3_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_3_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[125]"></a>I2C_4_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_4_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[126]"></a>I2C_4_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_4_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[127]"></a>I2C_4_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_4_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[128]"></a>I2C_4_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_4_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[129]"></a>I2C_5_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_5_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[12a]"></a>I2C_5_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_5_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[12b]"></a>I2C_5_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_5_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[12c]"></a>I2C_5_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_5_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[12d]"></a>I2C_6_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_6_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[12e]"></a>I2C_6_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_6_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[12f]"></a>I2C_6_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_6_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[130]"></a>I2C_6_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2C_6_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[131]"></a>I2S_1_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_1_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[132]"></a>I2S_1_Rx_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_1_Rx_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[133]"></a>I2S_1_Tx_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_1_Tx_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[134]"></a>I2S_2_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_2_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[135]"></a>I2S_2_Rx_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_2_Rx_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[136]"></a>I2S_2_Tx_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_2_Tx_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[137]"></a>I2S_3_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_3_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[138]"></a>I2S_3_Rx_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_3_Rx_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[139]"></a>I2S_3_Tx_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_3_Tx_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[13a]"></a>I2S_4_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_4_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[13b]"></a>I2S_4_Rx_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_4_Rx_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[13c]"></a>I2S_4_Tx_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.I2S_4_Tx_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[2c2]"></a>INTC_IrqSignIn</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, hc32f4a0_interrupts.o(i.INTC_IrqSignIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = INTC_IrqSignIn
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_IrqConfig
</UL>

<P><STRONG><a name="[a]"></a>IRQ000_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ000_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ000_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>IRQ001_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ001_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ001_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>IRQ002_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ002_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ002_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>IRQ003_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ003_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ003_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>IRQ004_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ004_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ004_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>IRQ005_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ005_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ005_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>IRQ006_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ006_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ006_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>IRQ007_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ007_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ007_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>IRQ008_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ008_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ008_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IRQ009_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ009_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ009_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>IRQ010_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ010_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ010_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>IRQ011_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ011_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ011_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>IRQ012_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ012_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ012_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>IRQ013_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ013_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ013_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>IRQ014_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ014_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ014_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>IRQ015_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ015_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ015_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>IRQ016_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ016_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ016_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>IRQ017_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ017_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ017_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>IRQ018_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ018_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ018_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>IRQ019_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ019_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ019_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>IRQ020_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ020_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ020_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>IRQ021_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ021_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ021_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>IRQ022_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ022_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ022_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>IRQ023_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ023_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ023_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>IRQ024_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ024_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ024_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>IRQ025_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ025_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ025_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>IRQ026_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ026_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ026_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>IRQ027_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ027_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ027_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>IRQ028_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ028_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ028_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>IRQ029_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ029_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ029_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>IRQ030_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ030_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ030_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>IRQ031_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ031_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ031_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>IRQ032_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ032_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ032_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>IRQ033_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ033_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ033_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>IRQ034_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ034_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ034_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>IRQ035_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ035_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ035_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>IRQ036_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ036_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ036_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>IRQ037_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ037_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ037_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>IRQ038_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ038_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ038_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>IRQ039_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ039_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ039_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>IRQ040_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ040_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ040_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>IRQ041_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ041_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ041_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>IRQ042_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ042_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ042_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>IRQ043_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ043_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ043_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>IRQ044_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ044_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ044_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>IRQ045_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ045_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ045_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>IRQ046_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ046_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ046_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>IRQ047_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ047_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ047_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>IRQ048_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ048_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ048_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>IRQ049_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ049_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ049_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>IRQ050_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ050_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ050_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>IRQ051_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ051_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ051_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>IRQ052_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ052_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ052_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>IRQ053_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ053_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ053_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>IRQ054_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ054_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ054_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>IRQ055_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ055_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ055_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>IRQ056_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ056_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ056_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>IRQ057_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ057_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ057_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>IRQ058_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ058_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ058_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>IRQ059_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ059_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ059_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>IRQ060_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ060_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ060_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>IRQ061_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ061_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ061_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>IRQ062_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ062_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ062_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>IRQ063_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ063_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ063_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>IRQ064_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ064_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ064_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>IRQ065_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ065_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ065_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>IRQ066_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ066_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ066_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>IRQ067_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ067_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ067_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>IRQ068_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ068_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ068_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>IRQ069_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ069_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ069_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>IRQ070_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ070_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ070_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>IRQ071_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ071_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ071_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>IRQ072_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ072_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ072_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>IRQ073_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ073_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ073_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>IRQ074_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ074_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ074_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>IRQ075_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ075_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ075_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>IRQ076_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ076_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ076_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>IRQ077_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ077_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ077_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>IRQ078_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ078_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ078_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>IRQ079_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ079_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ079_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>IRQ080_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ080_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ080_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>IRQ081_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ081_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ081_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>IRQ082_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ082_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ082_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>IRQ083_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ083_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ083_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>IRQ084_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ084_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ084_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>IRQ085_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ085_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ085_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>IRQ086_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ086_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ086_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>IRQ087_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ087_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ087_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>IRQ088_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ088_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ088_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>IRQ089_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ089_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ089_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>IRQ090_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ090_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ090_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>IRQ091_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ091_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ091_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>IRQ092_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ092_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ092_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>IRQ093_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ093_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ093_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>IRQ094_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ094_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ094_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>IRQ095_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ095_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ095_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>IRQ096_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ096_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ096_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>IRQ097_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ097_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ097_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>IRQ098_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ098_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ098_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>IRQ099_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ099_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ099_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>IRQ100_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ100_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ100_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>IRQ101_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ101_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ101_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>IRQ102_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ102_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ102_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>IRQ103_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ103_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ103_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>IRQ104_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ104_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ104_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>IRQ105_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ105_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ105_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>IRQ106_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ106_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ106_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>IRQ107_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ107_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ107_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>IRQ108_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ108_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ108_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>IRQ109_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ109_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ109_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>IRQ110_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ110_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ110_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>IRQ111_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ111_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ111_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>IRQ112_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ112_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ112_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>IRQ113_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ113_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ113_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>IRQ114_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ114_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ114_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>IRQ115_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ115_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ115_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>IRQ116_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ116_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ116_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>IRQ117_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ117_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ117_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>IRQ118_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ118_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ118_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>IRQ119_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ119_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ119_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>IRQ120_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ120_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ120_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>IRQ121_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ121_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ121_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>IRQ122_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ122_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ122_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>IRQ123_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ123_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ123_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>IRQ124_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ124_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ124_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>IRQ125_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ125_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ125_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>IRQ126_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ126_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ126_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>IRQ127_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ127_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ127_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>IRQ128_Handler</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ128_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ128_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_15_IrqHandler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_14_IrqHandler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_13_IrqHandler
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_12_IrqHandler
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_11_IrqHandler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_10_IrqHandler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_09_IrqHandler
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_08_IrqHandler
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_07_IrqHandler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_06_IrqHandler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_05_IrqHandler
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_04_IrqHandler
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_03_IrqHandler
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_02_IrqHandler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_01_IrqHandler
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTINT_00_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>IRQ129_Handler</STRONG> (Thumb, 1244 bytes, Stack size 16 bytes, hc32f4a0_interrupts.o(i.IRQ129_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ129_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Err_IrqHandler
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_PgmEraseErr_IrqHandler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_OpEnd_IrqHandler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_ColErr_IrqHandler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Tc7_IrqHandler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Tc6_IrqHandler
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Tc5_IrqHandler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Tc4_IrqHandler
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Tc3_IrqHandler
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Tc2_IrqHandler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Tc1_IrqHandler
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Tc0_IrqHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Err7_IrqHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Err6_IrqHandler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Err5_IrqHandler
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Err4_IrqHandler
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Err3_IrqHandler
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Err2_IrqHandler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Err1_IrqHandler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Err0_IrqHandler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Btc7_IrqHandler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Btc6_IrqHandler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Btc5_IrqHandler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Btc4_IrqHandler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Btc3_IrqHandler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Btc2_IrqHandler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Btc1_IrqHandler
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_1_Btc0_IrqHandler
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCU_8_IrqHandler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCU_7_IrqHandler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCU_6_IrqHandler
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCU_5_IrqHandler
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCU_4_IrqHandler
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCU_3_IrqHandler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCU_2_IrqHandler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCU_1_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>IRQ130_Handler</STRONG> (Thumb, 1180 bytes, Stack size 16 bytes, hc32f4a0_interrupts.o(i.IRQ130_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ130_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAU_Sqrt_IrqHandler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMAC_4_IrqHandler
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMAC_3_IrqHandler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMAC_2_IrqHandler
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMAC_1_IrqHandler
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DVP_SwSyncErr_IrqHandler
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DVP_LineStart_IrqHandler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DVP_LineEnd_IrqHandler
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DVP_FrameStart_IrqHandler
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DVP_FrameEnd_IrqHandler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DVP_FifoErr_IrqHandler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Tc7_IrqHandler
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Tc6_IrqHandler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Tc5_IrqHandler
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Tc4_IrqHandler
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Tc3_IrqHandler
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Tc2_IrqHandler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Tc1_IrqHandler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Tc0_IrqHandler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Err7_IrqHandler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Err6_IrqHandler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Err5_IrqHandler
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Err4_IrqHandler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Err3_IrqHandler
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Err2_IrqHandler
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Err1_IrqHandler
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Err0_IrqHandler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Btc7_IrqHandler
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Btc6_IrqHandler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Btc5_IrqHandler
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Btc4_IrqHandler
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Btc3_IrqHandler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Btc2_IrqHandler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Btc1_IrqHandler
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_2_Btc0_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>IRQ131_Handler</STRONG> (Thumb, 784 bytes, Stack size 16 bytes, hc32f4a0_interrupts.o(i.IRQ131_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ131_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_4_OvfB_IrqHandler
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_4_OvfA_IrqHandler
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_4_CmpB_IrqHandler
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_4_CmpA_IrqHandler
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_3_OvfB_IrqHandler
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_3_OvfA_IrqHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_3_CmpB_IrqHandler
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_3_CmpA_IrqHandler
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_2_OvfB_IrqHandler
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_2_OvfA_IrqHandler
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_2_CmpB_IrqHandler
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_2_CmpA_IrqHandler
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_1_OvfB_IrqHandler
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_1_OvfA_IrqHandler
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_1_CmpB_IrqHandler
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_1_CmpA_IrqHandler
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_2_CmpB_IrqHandler
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_2_CmpA_IrqHandler
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_1_CmpB_IrqHandler
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_1_CmpA_IrqHandler
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWDT_IrqHandler
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeStamp1_IrqHandler
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeStamp0_IrqHandler
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Period_IrqHandler
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IrqHandler
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWC_WakeupTimer_IrqHandler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_XtalStop_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>IRQ132_Handler</STRONG> (Thumb, 892 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ132_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ132_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_GUdf_IrqHandler
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_GOvf_IrqHandler
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_GCmpF_IrqHandler
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_GCmpE_IrqHandler
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_GCmpD_IrqHandler
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_GCmpC_IrqHandler
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_GCmpB_IrqHandler
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_GCmpA_IrqHandler
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_GUdf_IrqHandler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_GOvf_IrqHandler
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_GCmpF_IrqHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_GCmpE_IrqHandler
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_GCmpD_IrqHandler
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_GCmpC_IrqHandler
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_GCmpB_IrqHandler
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_GCmpA_IrqHandler
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_Udf_IrqHandler
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_Ovf_IrqHandler
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_GCmpWL_IrqHandler
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_GCmpWH_IrqHandler
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_GCmpVL_IrqHandler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_GCmpVH_IrqHandler
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_GCmpUL_IrqHandler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_GCmpUH_IrqHandler
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_Udf_IrqHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_Ovf_IrqHandler
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_GCmpWL_IrqHandler
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_GCmpWH_IrqHandler
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_GCmpVL_IrqHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_GCmpVH_IrqHandler
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_GCmpUL_IrqHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_GCmpUH_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>IRQ133_Handler</STRONG> (Thumb, 854 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ133_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ133_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_GUdf_IrqHandler
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_GOvf_IrqHandler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_GCmpF_IrqHandler
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_GCmpE_IrqHandler
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_GCmpD_IrqHandler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_GCmpC_IrqHandler
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_GCmpB_IrqHandler
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_GCmpA_IrqHandler
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_SCmpUpB_IrqHandler
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_SCmpUpA_IrqHandler
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_SCmpDownB_IrqHandler
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_SCmpDownA_IrqHandler
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_2_Gdte_IrqHandler
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_SCmpUpB_IrqHandler
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_SCmpUpA_IrqHandler
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_SCmpDownB_IrqHandler
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_SCmpDownA_IrqHandler
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_1_Gdte_IrqHandler
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_Udf_IrqHandler
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_Ovf_IrqHandler
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_GCmpWL_IrqHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_GCmpWH_IrqHandler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_GCmpVL_IrqHandler
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_GCmpVH_IrqHandler
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_GCmpUL_IrqHandler
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_GCmpUH_IrqHandler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_2_ReloadU_IrqHandler
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_1_ReloadU_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>IRQ134_Handler</STRONG> (Thumb, 548 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ134_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ134_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_SCmpUpB_IrqHandler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_SCmpUpA_IrqHandler
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_SCmpDownB_IrqHandler
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_SCmpDownA_IrqHandler
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_Gdte_IrqHandler
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_GUdf_IrqHandler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_GOvf_IrqHandler
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_GCmpF_IrqHandler
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_GCmpE_IrqHandler
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_GCmpD_IrqHandler
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_GCmpC_IrqHandler
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_GCmpB_IrqHandler
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_4_GCmpA_IrqHandler
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_SCmpUpB_IrqHandler
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_SCmpUpA_IrqHandler
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_SCmpDownB_IrqHandler
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_SCmpDownA_IrqHandler
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_3_Gdte_IrqHandler
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_3_ReloadU_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>IRQ135_Handler</STRONG> (Thumb, 1040 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ135_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ135_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_2_Udf_IrqHandler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_2_Ovf_IrqHandler
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_2_Cmp4_IrqHandler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_2_Cmp3_IrqHandler
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_2_Cmp2_IrqHandler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_2_Cmp1_IrqHandler
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_1_Udf_IrqHandler
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_1_Ovf_IrqHandler
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_1_Cmp4_IrqHandler
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_1_Cmp3_IrqHandler
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_1_Cmp2_IrqHandler
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_1_Cmp1_IrqHandler
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_SCmpUpB_IrqHandler
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_SCmpUpA_IrqHandler
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_SCmpDownB_IrqHandler
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_SCmpDownA_IrqHandler
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_Gdte_IrqHandler
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_GUdf_IrqHandler
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_GOvf_IrqHandler
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_GCmpF_IrqHandler
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_GCmpE_IrqHandler
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_GCmpD_IrqHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_GCmpC_IrqHandler
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_GCmpB_IrqHandler
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_6_GCmpA_IrqHandler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_SCmpUpB_IrqHandler
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_SCmpUpA_IrqHandler
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_SCmpDownB_IrqHandler
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_SCmpDownA_IrqHandler
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_Gdte_IrqHandler
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_GUdf_IrqHandler
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_GOvf_IrqHandler
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_GCmpF_IrqHandler
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_GCmpE_IrqHandler
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_GCmpD_IrqHandler
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_GCmpC_IrqHandler
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_GCmpB_IrqHandler
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_5_GCmpA_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>IRQ136_Handler</STRONG> (Thumb, 1040 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.IRQ136_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ136_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_4_Udf_IrqHandler
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_4_Ovf_IrqHandler
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_4_Cmp4_IrqHandler
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_4_Cmp3_IrqHandler
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_4_Cmp2_IrqHandler
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_4_Cmp1_IrqHandler
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_3_Udf_IrqHandler
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_3_Ovf_IrqHandler
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_3_Cmp4_IrqHandler
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_3_Cmp3_IrqHandler
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_3_Cmp2_IrqHandler
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_3_Cmp1_IrqHandler
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_SCmpUpB_IrqHandler
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_SCmpUpA_IrqHandler
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_SCmpDownB_IrqHandler
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_SCmpDownA_IrqHandler
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_Gdte_IrqHandler
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_GUdf_IrqHandler
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_GOvf_IrqHandler
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_GCmpF_IrqHandler
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_GCmpE_IrqHandler
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_GCmpD_IrqHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_GCmpC_IrqHandler
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_GCmpB_IrqHandler
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_8_GCmpA_IrqHandler
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_SCmpUpB_IrqHandler
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_SCmpUpA_IrqHandler
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_SCmpDownB_IrqHandler
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_SCmpDownA_IrqHandler
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_Gdte_IrqHandler
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_GUdf_IrqHandler
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_GOvf_IrqHandler
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_GCmpF_IrqHandler
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_GCmpE_IrqHandler
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_GCmpD_IrqHandler
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_GCmpC_IrqHandler
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_GCmpB_IrqHandler
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_7_GCmpA_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>IRQ137_Handler</STRONG> (Thumb, 774 bytes, Stack size 16 bytes, hc32f4a0_interrupts.o(i.IRQ137_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ137_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_2_TxEnd_IrqHandler
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_2_TxEmpty_IrqHandler
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_2_RxTO_IrqHandler
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_2_RxErr_IrqHandler
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_2_RxEnd_IrqHandler
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_1_TxEnd_IrqHandler
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_1_TxEmpty_IrqHandler
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_1_RxTO_IrqHandler
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_1_RxErr_IrqHandler
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_1_RxEnd_IrqHandler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2_TxEmpty_IrqHandler
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2_RxEnd_IrqHandler
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2_Idle_IrqHandler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2_Err_IrqHandler
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1_TxEmpty_IrqHandler
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1_RxEnd_IrqHandler
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1_Idle_IrqHandler
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1_Err_IrqHandler
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMB_GR6_IrqHandler
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMB_GR5_IrqHandler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMB_GR4_IrqHandler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMB_GR3_IrqHandler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMB_GR2_IrqHandler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMB_GR1_IrqHandler
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMB_GR0_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>IRQ138_Handler</STRONG> (Thumb, 1408 bytes, Stack size 32 bytes, hc32f4a0_interrupts.o(i.IRQ138_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IRQ138_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_4_TxEnd_IrqHandler
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_4_TxEmpty_IrqHandler
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_4_RxErr_IrqHandler
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_4_RxEnd_IrqHandler
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_3_TxEnd_IrqHandler
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_3_TxEmpty_IrqHandler
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_3_RxErr_IrqHandler
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_3_RxEnd_IrqHandler
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_8_Udf_IrqHandler
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_8_Ovf_IrqHandler
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_8_Cmp4_IrqHandler
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_8_Cmp3_IrqHandler
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_8_Cmp2_IrqHandler
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_8_Cmp1_IrqHandler
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_7_Udf_IrqHandler
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_7_Ovf_IrqHandler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_7_Cmp4_IrqHandler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_7_Cmp3_IrqHandler
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_7_Cmp2_IrqHandler
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_7_Cmp1_IrqHandler
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_6_Udf_IrqHandler
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_6_Ovf_IrqHandler
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_6_Cmp4_IrqHandler
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_6_Cmp3_IrqHandler
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_6_Cmp2_IrqHandler
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_6_Cmp1_IrqHandler
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_5_Udf_IrqHandler
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_5_Ovf_IrqHandler
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_5_Cmp4_IrqHandler
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_5_Cmp3_IrqHandler
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_5_Cmp2_IrqHandler
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_5_Cmp1_IrqHandler
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_4_TxEmpty_IrqHandler
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_4_RxEnd_IrqHandler
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_4_Idle_IrqHandler
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_4_Err_IrqHandler
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_3_TxEmpty_IrqHandler
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_3_RxEnd_IrqHandler
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_3_Idle_IrqHandler
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_3_Err_IrqHandler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_2_IrqHandler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_1_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>IRQ139_Handler</STRONG> (Thumb, 1240 bytes, Stack size 16 bytes, hc32f4a0_interrupts.o(i.IRQ139_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ139_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_6_TxEnd_IrqHandler
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_6_TxEmpty_IrqHandler
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_6_RxTO_IrqHandler
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_6_RxErr_IrqHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_6_RxEnd_IrqHandler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_5_TxEnd_IrqHandler
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_5_TxEmpty_IrqHandler
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_5_RxErr_IrqHandler
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_5_RxEnd_IrqHandler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_5_LinWakeup_IrqHandler
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_5_LinBreakField_IrqHandler
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_9_Udf_IrqHandler
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_9_Ovf_IrqHandler
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_9_Cmp4_IrqHandler
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_9_Cmp3_IrqHandler
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_9_Cmp2_IrqHandler
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_9_Cmp1_IrqHandler
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_12_Udf_IrqHandler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_12_Ovf_IrqHandler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_12_Cmp4_IrqHandler
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_12_Cmp3_IrqHandler
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_12_Cmp2_IrqHandler
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_12_Cmp1_IrqHandler
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_11_Udf_IrqHandler
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_11_Ovf_IrqHandler
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_11_Cmp4_IrqHandler
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_11_Cmp3_IrqHandler
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_11_Cmp2_IrqHandler
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_11_Cmp1_IrqHandler
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_10_Udf_IrqHandler
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_10_Ovf_IrqHandler
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_10_Cmp4_IrqHandler
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_10_Cmp3_IrqHandler
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_10_Cmp2_IrqHandler
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_10_Cmp1_IrqHandler
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_6_TxEmpty_IrqHandler
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_6_RxEnd_IrqHandler
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_6_Idle_IrqHandler
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_6_Err_IrqHandler
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_5_TxEmpty_IrqHandler
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_5_RxEnd_IrqHandler
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_5_Idle_IrqHandler
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_5_Err_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>IRQ140_Handler</STRONG> (Thumb, 802 bytes, Stack size 72 bytes, hc32f4a0_interrupts.o(i.IRQ140_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = IRQ140_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBFS_Global_IrqHandler
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_8_TxEnd_IrqHandler
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_8_TxEmpty_IrqHandler
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_8_RxErr_IrqHandler
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_8_RxEnd_IrqHandler
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_7_TxEnd_IrqHandler
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_7_TxEmpty_IrqHandler
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_7_RxTO_IrqHandler
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_7_RxErr_IrqHandler
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_7_RxEnd_IrqHandler
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIOC_2_Normal_IrqHandler
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIOC_2_Error_IrqHandler
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIOC_1_Normal_IrqHandler
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIOC_1_Error_IrqHandler
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_2_Tx_IrqHandler
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_2_Rx_IrqHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_2_Err_IrqHandler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_1_Tx_IrqHandler
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_1_Rx_IrqHandler
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_1_Err_IrqHandler
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Wakeup_IrqHandler
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Global_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>IRQ141_Handler</STRONG> (Thumb, 800 bytes, Stack size 16 bytes, hc32f4a0_interrupts.o(i.IRQ141_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ141_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_9_TxEnd_IrqHandler
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_9_TxEmpty_IrqHandler
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_9_RxErr_IrqHandler
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_9_RxEnd_IrqHandler
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_10_TxEnd_IrqHandler
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_10_TxEmpty_IrqHandler
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_10_RxErr_IrqHandler
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_10_RxEnd_IrqHandler
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_10_LinWakeup_IrqHandler
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_10_LinBreakField_IrqHandler
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_4_Tx_IrqHandler
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_4_Rx_IrqHandler
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_4_Err_IrqHandler
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_3_Tx_IrqHandler
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_3_Rx_IrqHandler
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_3_Err_IrqHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_3_TxEnd_IrqHandler
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_3_TxEmpty_IrqHandler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_3_RxEnd_IrqHandler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_3_Err_IrqHandler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_2_TxEnd_IrqHandler
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_2_TxEmpty_IrqHandler
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_2_RxEnd_IrqHandler
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_2_Err_IrqHandler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_1_TxEnd_IrqHandler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_1_TxEmpty_IrqHandler
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_1_RxEnd_IrqHandler
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_1_Err_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>IRQ142_Handler</STRONG> (Thumb, 592 bytes, Stack size 16 bytes, hc32f4a0_interrupts.o(i.IRQ142_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ142_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_IrqHandler
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWC_Pvd2_IrqHandler
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWC_Pvd1_IrqHandler
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_6_TxEnd_IrqHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_6_TxEmpty_IrqHandler
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_6_RxEnd_IrqHandler
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_6_Err_IrqHandler
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_5_TxEnd_IrqHandler
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_5_TxEmpty_IrqHandler
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_5_RxEnd_IrqHandler
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_5_Err_IrqHandler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_4_TxEnd_IrqHandler
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_4_TxEmpty_IrqHandler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_4_RxEnd_IrqHandler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_4_Err_IrqHandler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCM_Ovf_IrqHandler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCM_Err_IrqHandler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCM_End_IrqHandler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTC_Udf_IrqHandler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTC_Ovf_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>IRQ143_Handler</STRONG> (Thumb, 484 bytes, Stack size 16 bytes, hc32f4a0_interrupts.o(i.IRQ143_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ143_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_IrqHandler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_3_SeqB_IrqHandler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_3_SeqA_IrqHandler
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_3_Cmp1Ind_IrqHandler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_3_Cmp1Comb_IrqHandler
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_3_Cmp0_IrqHandler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_2_SeqB_IrqHandler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_2_SeqA_IrqHandler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_2_Cmp1Ind_IrqHandler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_2_Cmp1Comb_IrqHandler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_2_Cmp0_IrqHandler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_1_SeqB_IrqHandler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_1_SeqA_IrqHandler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_1_Cmp1Ind_IrqHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_1_Cmp1Comb_IrqHandler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_1_Cmp0_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[13d]"></a>MAU_Sqrt_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.MAU_Sqrt_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ130_Handler
</UL>

<P><STRONG><a name="[2a3]"></a>MB85Ctrl_CheckWrite</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, bsp_mb85rs2.o(i.MB85Ctrl_CheckWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MB85Ctrl_CheckWrite &rArr; MB85Ctrl_Write &rArr; SPI_ReadWriteByte &rArr; SPI_TransmitReceive &rArr; SPI_TxRx
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Write
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;En_int
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_int
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[2a6]"></a>MB85Ctrl_Read</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, bsp_mb85rs2.o(i.MB85Ctrl_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MB85Ctrl_Read &rArr; SPI_ReadWriteByte &rArr; SPI_TransmitReceive &rArr; SPI_TxRx
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPins
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetPins
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_CheckWrite
</UL>

<P><STRONG><a name="[2a5]"></a>MB85Ctrl_Write</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, bsp_mb85rs2.o(i.MB85Ctrl_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MB85Ctrl_Write &rArr; SPI_ReadWriteByte &rArr; SPI_TransmitReceive &rArr; SPI_TxRx
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPins
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetPins
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_CheckWrite
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.MemManage_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MemManage_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[13e]"></a>MemManage_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.MemManage_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>

<P><STRONG><a name="[13f]"></a>NFC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.NFC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ143_Handler
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.NMI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NMI_Handler &rArr; NMI_IrqHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>NMI_IrqHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.NMI_IrqHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NMI_IrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[2aa]"></a>PWC_Fcg1PeriphClockCmd</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hc32f4a0_pwc.o(i.PWC_Fcg1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PWC_Fcg1PeriphClockCmd &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
</UL>

<P><STRONG><a name="[2ab]"></a>PWC_Fcg2PeriphClockCmd</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hc32f4a0_pwc.o(i.PWC_Fcg2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PWC_Fcg2PeriphClockCmd &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_Config
</UL>

<P><STRONG><a name="[140]"></a>PWC_Pvd1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.PWC_Pvd1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[141]"></a>PWC_Pvd2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.PWC_Pvd2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[142]"></a>PWC_WakeupTimer_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.PWC_WakeupTimer_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[143]"></a>PendSV_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.PendSV_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[2ac]"></a>Peripheral_WE</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp.o(i.Peripheral_WE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Peripheral_WE &rArr; EFM_FWMC_Unlock &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_FWMC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[2ad]"></a>Peripheral_WP</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bsp.o(i.Peripheral_WP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Peripheral_WP &rArr; EFM_FWMC_Lock &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_FWMC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[144]"></a>QSPI_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.QSPI_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ129_Handler
</UL>

<P><STRONG><a name="[145]"></a>RTC_Alarm_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.RTC_Alarm_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[146]"></a>RTC_Period_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.RTC_Period_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[147]"></a>RTC_TimeStamp0_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.RTC_TimeStamp0_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[148]"></a>RTC_TimeStamp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.RTC_TimeStamp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[149]"></a>SDIOC_1_Error_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SDIOC_1_Error_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[14a]"></a>SDIOC_1_Normal_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SDIOC_1_Normal_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[14b]"></a>SDIOC_2_Error_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SDIOC_2_Error_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[14c]"></a>SDIOC_2_Normal_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SDIOC_2_Normal_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[14d]"></a>SPI_1_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_1_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[14e]"></a>SPI_1_Idle_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_1_Idle_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[14f]"></a>SPI_1_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_1_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[150]"></a>SPI_1_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_1_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[151]"></a>SPI_2_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_2_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[152]"></a>SPI_2_Idle_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_2_Idle_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[153]"></a>SPI_2_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_2_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[154]"></a>SPI_2_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_2_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[155]"></a>SPI_3_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_3_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[156]"></a>SPI_3_Idle_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_3_Idle_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[157]"></a>SPI_3_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_3_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[158]"></a>SPI_3_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_3_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[159]"></a>SPI_4_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_4_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[15a]"></a>SPI_4_Idle_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_4_Idle_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[15b]"></a>SPI_4_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_4_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[15c]"></a>SPI_4_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_4_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[15d]"></a>SPI_5_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_5_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[15e]"></a>SPI_5_Idle_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_5_Idle_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[15f]"></a>SPI_5_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_5_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[160]"></a>SPI_5_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_5_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[161]"></a>SPI_6_Err_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_6_Err_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[162]"></a>SPI_6_Idle_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_6_Idle_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[163]"></a>SPI_6_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_6_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[164]"></a>SPI_6_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SPI_6_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[2ae]"></a>SPI_DeInit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, hc32f4a0_spi.o(i.SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_DeInit &rArr; SPI_FunctionCmd &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FunctionCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
</UL>

<P><STRONG><a name="[2af]"></a>SPI_FunctionCmd</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, hc32f4a0_spi.o(i.SPI_FunctionCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_FunctionCmd &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DeInit
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
</UL>

<P><STRONG><a name="[2b0]"></a>SPI_Init</STRONG> (Thumb, 634 bytes, Stack size 16 bytes, hc32f4a0_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
</UL>

<P><STRONG><a name="[2ca]"></a>SPI_StructInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hc32f4a0_spi.o(i.SPI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
</UL>

<P><STRONG><a name="[2b1]"></a>SPI_TransmitReceive</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, hc32f4a0_spi.o(i.SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_TransmitReceive &rArr; SPI_TxRx
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxRx
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>

<P><STRONG><a name="[165]"></a>SVC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SVC_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[29d]"></a>SWDT_Feed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hc32f4a0_swdt.o(i.SWDT_Feed))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSWDT
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_WDG
</UL>

<P><STRONG><a name="[2b3]"></a>SWDT_Init</STRONG> (Thumb, 326 bytes, Stack size 16 bytes, hc32f4a0_swdt.o(i.SWDT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SWDT_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSWDT
</UL>

<P><STRONG><a name="[166]"></a>SWDT_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SWDT_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[167]"></a>SysTick_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.SysTick_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[284]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 190 bytes, Stack size 12 bytes, system_hc32f4a0sitb.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetSysClkSrc
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>SystemInit</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, system_hc32f4a0sitb.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(.text)
</UL>
<P><STRONG><a name="[2b7]"></a>System_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp.o(i.System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = System_Init &rArr; bsp_Init &rArr; W25Q_MB85R_SpiInit &rArr; GPIO_SetFunc &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[168]"></a>TMR0_1_CmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR0_1_CmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[169]"></a>TMR0_1_CmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR0_1_CmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[16a]"></a>TMR0_2_CmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR0_2_CmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[16b]"></a>TMR0_2_CmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR0_2_CmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[16c]"></a>TMR2_1_CmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_1_CmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[16d]"></a>TMR2_1_CmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_1_CmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[16e]"></a>TMR2_1_OvfA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_1_OvfA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[16f]"></a>TMR2_1_OvfB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_1_OvfB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[170]"></a>TMR2_2_CmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_2_CmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[171]"></a>TMR2_2_CmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_2_CmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[172]"></a>TMR2_2_OvfA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_2_OvfA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[173]"></a>TMR2_2_OvfB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_2_OvfB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[174]"></a>TMR2_3_CmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_3_CmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[175]"></a>TMR2_3_CmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_3_CmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[176]"></a>TMR2_3_OvfA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_3_OvfA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[177]"></a>TMR2_3_OvfB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_3_OvfB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[178]"></a>TMR2_4_CmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_4_CmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[179]"></a>TMR2_4_CmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_4_CmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[17a]"></a>TMR2_4_OvfA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_4_OvfA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[17b]"></a>TMR2_4_OvfB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR2_4_OvfB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ131_Handler
</UL>

<P><STRONG><a name="[17c]"></a>TMR4_1_GCmpUH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_GCmpUH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[17d]"></a>TMR4_1_GCmpUL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_GCmpUL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[17e]"></a>TMR4_1_GCmpVH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_GCmpVH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[17f]"></a>TMR4_1_GCmpVL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_GCmpVL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[180]"></a>TMR4_1_GCmpWH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_GCmpWH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[181]"></a>TMR4_1_GCmpWL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_GCmpWL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[182]"></a>TMR4_1_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[183]"></a>TMR4_1_ReloadU_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_ReloadU_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[184]"></a>TMR4_1_ReloadV_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_ReloadV_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[185]"></a>TMR4_1_ReloadW_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_ReloadW_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[186]"></a>TMR4_1_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_1_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[187]"></a>TMR4_2_GCmpUH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_GCmpUH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[188]"></a>TMR4_2_GCmpUL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_GCmpUL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[189]"></a>TMR4_2_GCmpVH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_GCmpVH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[18a]"></a>TMR4_2_GCmpVL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_GCmpVL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[18b]"></a>TMR4_2_GCmpWH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_GCmpWH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[18c]"></a>TMR4_2_GCmpWL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_GCmpWL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[18d]"></a>TMR4_2_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[18e]"></a>TMR4_2_ReloadU_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_ReloadU_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[18f]"></a>TMR4_2_ReloadV_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_ReloadV_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[190]"></a>TMR4_2_ReloadW_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_ReloadW_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[191]"></a>TMR4_2_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_2_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[192]"></a>TMR4_3_GCmpUH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_GCmpUH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[193]"></a>TMR4_3_GCmpUL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_GCmpUL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[194]"></a>TMR4_3_GCmpVH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_GCmpVH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[195]"></a>TMR4_3_GCmpVL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_GCmpVL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[196]"></a>TMR4_3_GCmpWH_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_GCmpWH_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[197]"></a>TMR4_3_GCmpWL_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_GCmpWL_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[198]"></a>TMR4_3_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[199]"></a>TMR4_3_ReloadU_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_ReloadU_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[19a]"></a>TMR4_3_ReloadV_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_ReloadV_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[19b]"></a>TMR4_3_ReloadW_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_ReloadW_IrqHandler), UNUSED, KEPT)

<P><STRONG><a name="[19c]"></a>TMR4_3_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR4_3_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[19d]"></a>TMR6_1_GCmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_GCmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[19e]"></a>TMR6_1_GCmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_GCmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[19f]"></a>TMR6_1_GCmpC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_GCmpC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1a0]"></a>TMR6_1_GCmpD_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_GCmpD_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1a1]"></a>TMR6_1_GCmpE_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_GCmpE_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1a2]"></a>TMR6_1_GCmpF_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_GCmpF_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1a3]"></a>TMR6_1_GOvf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_GOvf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1a4]"></a>TMR6_1_GUdf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_GUdf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1a5]"></a>TMR6_1_Gdte_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_Gdte_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1a6]"></a>TMR6_1_SCmpDownA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_SCmpDownA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1a7]"></a>TMR6_1_SCmpDownB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_SCmpDownB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1a8]"></a>TMR6_1_SCmpUpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_SCmpUpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1a9]"></a>TMR6_1_SCmpUpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_1_SCmpUpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1aa]"></a>TMR6_2_GCmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_GCmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1ab]"></a>TMR6_2_GCmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_GCmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1ac]"></a>TMR6_2_GCmpC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_GCmpC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1ad]"></a>TMR6_2_GCmpD_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_GCmpD_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1ae]"></a>TMR6_2_GCmpE_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_GCmpE_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1af]"></a>TMR6_2_GCmpF_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_GCmpF_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1b0]"></a>TMR6_2_GOvf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_GOvf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1b1]"></a>TMR6_2_GUdf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_GUdf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ132_Handler
</UL>

<P><STRONG><a name="[1b2]"></a>TMR6_2_Gdte_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_Gdte_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1b3]"></a>TMR6_2_SCmpDownA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_SCmpDownA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1b4]"></a>TMR6_2_SCmpDownB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_SCmpDownB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1b5]"></a>TMR6_2_SCmpUpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_SCmpUpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1b6]"></a>TMR6_2_SCmpUpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_2_SCmpUpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1b7]"></a>TMR6_3_GCmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_GCmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1b8]"></a>TMR6_3_GCmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_GCmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1b9]"></a>TMR6_3_GCmpC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_GCmpC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1ba]"></a>TMR6_3_GCmpD_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_GCmpD_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1bb]"></a>TMR6_3_GCmpE_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_GCmpE_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1bc]"></a>TMR6_3_GCmpF_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_GCmpF_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1bd]"></a>TMR6_3_GOvf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_GOvf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1be]"></a>TMR6_3_GUdf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_GUdf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ133_Handler
</UL>

<P><STRONG><a name="[1bf]"></a>TMR6_3_Gdte_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_Gdte_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c0]"></a>TMR6_3_SCmpDownA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_SCmpDownA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c1]"></a>TMR6_3_SCmpDownB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_SCmpDownB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c2]"></a>TMR6_3_SCmpUpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_SCmpUpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c3]"></a>TMR6_3_SCmpUpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_3_SCmpUpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c4]"></a>TMR6_4_GCmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_GCmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c5]"></a>TMR6_4_GCmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_GCmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c6]"></a>TMR6_4_GCmpC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_GCmpC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c7]"></a>TMR6_4_GCmpD_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_GCmpD_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c8]"></a>TMR6_4_GCmpE_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_GCmpE_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1c9]"></a>TMR6_4_GCmpF_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_GCmpF_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1ca]"></a>TMR6_4_GOvf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_GOvf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1cb]"></a>TMR6_4_GUdf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_GUdf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1cc]"></a>TMR6_4_Gdte_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_Gdte_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1cd]"></a>TMR6_4_SCmpDownA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_SCmpDownA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1ce]"></a>TMR6_4_SCmpDownB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_SCmpDownB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1cf]"></a>TMR6_4_SCmpUpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_SCmpUpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1d0]"></a>TMR6_4_SCmpUpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_4_SCmpUpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ134_Handler
</UL>

<P><STRONG><a name="[1d1]"></a>TMR6_5_GCmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_GCmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1d2]"></a>TMR6_5_GCmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_GCmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1d3]"></a>TMR6_5_GCmpC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_GCmpC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1d4]"></a>TMR6_5_GCmpD_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_GCmpD_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1d5]"></a>TMR6_5_GCmpE_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_GCmpE_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1d6]"></a>TMR6_5_GCmpF_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_GCmpF_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1d7]"></a>TMR6_5_GOvf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_GOvf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1d8]"></a>TMR6_5_GUdf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_GUdf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1d9]"></a>TMR6_5_Gdte_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_Gdte_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1da]"></a>TMR6_5_SCmpDownA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_SCmpDownA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1db]"></a>TMR6_5_SCmpDownB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_SCmpDownB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1dc]"></a>TMR6_5_SCmpUpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_SCmpUpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1dd]"></a>TMR6_5_SCmpUpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_5_SCmpUpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1de]"></a>TMR6_6_GCmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_GCmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1df]"></a>TMR6_6_GCmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_GCmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e0]"></a>TMR6_6_GCmpC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_GCmpC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e1]"></a>TMR6_6_GCmpD_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_GCmpD_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e2]"></a>TMR6_6_GCmpE_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_GCmpE_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e3]"></a>TMR6_6_GCmpF_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_GCmpF_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e4]"></a>TMR6_6_GOvf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_GOvf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e5]"></a>TMR6_6_GUdf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_GUdf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e6]"></a>TMR6_6_Gdte_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_Gdte_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e7]"></a>TMR6_6_SCmpDownA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_SCmpDownA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e8]"></a>TMR6_6_SCmpDownB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_SCmpDownB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1e9]"></a>TMR6_6_SCmpUpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_SCmpUpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1ea]"></a>TMR6_6_SCmpUpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_6_SCmpUpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[1eb]"></a>TMR6_7_GCmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_GCmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1ec]"></a>TMR6_7_GCmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_GCmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1ed]"></a>TMR6_7_GCmpC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_GCmpC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1ee]"></a>TMR6_7_GCmpD_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_GCmpD_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1ef]"></a>TMR6_7_GCmpE_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_GCmpE_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f0]"></a>TMR6_7_GCmpF_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_GCmpF_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f1]"></a>TMR6_7_GOvf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_GOvf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f2]"></a>TMR6_7_GUdf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_GUdf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f3]"></a>TMR6_7_Gdte_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_Gdte_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f4]"></a>TMR6_7_SCmpDownA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_SCmpDownA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f5]"></a>TMR6_7_SCmpDownB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_SCmpDownB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f6]"></a>TMR6_7_SCmpUpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_SCmpUpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f7]"></a>TMR6_7_SCmpUpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_7_SCmpUpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f8]"></a>TMR6_8_GCmpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_GCmpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1f9]"></a>TMR6_8_GCmpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_GCmpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1fa]"></a>TMR6_8_GCmpC_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_GCmpC_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1fb]"></a>TMR6_8_GCmpD_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_GCmpD_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1fc]"></a>TMR6_8_GCmpE_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_GCmpE_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1fd]"></a>TMR6_8_GCmpF_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_GCmpF_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1fe]"></a>TMR6_8_GOvf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_GOvf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[1ff]"></a>TMR6_8_GUdf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_GUdf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[200]"></a>TMR6_8_Gdte_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_Gdte_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[201]"></a>TMR6_8_SCmpDownA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_SCmpDownA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[202]"></a>TMR6_8_SCmpDownB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_SCmpDownB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[203]"></a>TMR6_8_SCmpUpA_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_SCmpUpA_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[204]"></a>TMR6_8_SCmpUpB_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMR6_8_SCmpUpB_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[205]"></a>TMRA_10_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_10_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[206]"></a>TMRA_10_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_10_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[207]"></a>TMRA_10_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_10_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[208]"></a>TMRA_10_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_10_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[209]"></a>TMRA_10_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_10_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[20a]"></a>TMRA_10_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_10_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[20b]"></a>TMRA_11_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_11_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[20c]"></a>TMRA_11_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_11_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[20d]"></a>TMRA_11_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_11_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[20e]"></a>TMRA_11_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_11_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[20f]"></a>TMRA_11_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_11_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[210]"></a>TMRA_11_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_11_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[211]"></a>TMRA_12_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_12_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[212]"></a>TMRA_12_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_12_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[213]"></a>TMRA_12_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_12_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[214]"></a>TMRA_12_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_12_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[215]"></a>TMRA_12_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_12_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[216]"></a>TMRA_12_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_12_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[217]"></a>TMRA_1_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_1_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[218]"></a>TMRA_1_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_1_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[219]"></a>TMRA_1_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_1_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[21a]"></a>TMRA_1_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_1_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[21b]"></a>TMRA_1_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_1_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[21c]"></a>TMRA_1_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_1_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[21d]"></a>TMRA_2_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_2_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[21e]"></a>TMRA_2_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_2_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[21f]"></a>TMRA_2_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_2_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[220]"></a>TMRA_2_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_2_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[221]"></a>TMRA_2_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_2_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[222]"></a>TMRA_2_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_2_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ135_Handler
</UL>

<P><STRONG><a name="[223]"></a>TMRA_3_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_3_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[224]"></a>TMRA_3_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_3_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[225]"></a>TMRA_3_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_3_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[226]"></a>TMRA_3_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_3_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[227]"></a>TMRA_3_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_3_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[228]"></a>TMRA_3_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_3_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[229]"></a>TMRA_4_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_4_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[22a]"></a>TMRA_4_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_4_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[22b]"></a>TMRA_4_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_4_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[22c]"></a>TMRA_4_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_4_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[22d]"></a>TMRA_4_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_4_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[22e]"></a>TMRA_4_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_4_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ136_Handler
</UL>

<P><STRONG><a name="[22f]"></a>TMRA_5_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_5_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[230]"></a>TMRA_5_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_5_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[231]"></a>TMRA_5_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_5_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[232]"></a>TMRA_5_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_5_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[233]"></a>TMRA_5_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_5_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[234]"></a>TMRA_5_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_5_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[235]"></a>TMRA_6_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_6_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[236]"></a>TMRA_6_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_6_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[237]"></a>TMRA_6_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_6_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[238]"></a>TMRA_6_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_6_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[239]"></a>TMRA_6_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_6_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[23a]"></a>TMRA_6_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_6_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[23b]"></a>TMRA_7_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_7_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[23c]"></a>TMRA_7_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_7_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[23d]"></a>TMRA_7_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_7_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[23e]"></a>TMRA_7_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_7_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[23f]"></a>TMRA_7_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_7_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[240]"></a>TMRA_7_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_7_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[241]"></a>TMRA_8_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_8_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[242]"></a>TMRA_8_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_8_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[243]"></a>TMRA_8_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_8_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[244]"></a>TMRA_8_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_8_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[245]"></a>TMRA_8_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_8_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[246]"></a>TMRA_8_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_8_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[247]"></a>TMRA_9_Cmp1_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_9_Cmp1_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[248]"></a>TMRA_9_Cmp2_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_9_Cmp2_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[249]"></a>TMRA_9_Cmp3_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_9_Cmp3_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[24a]"></a>TMRA_9_Cmp4_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_9_Cmp4_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[24b]"></a>TMRA_9_Ovf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_9_Ovf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[24c]"></a>TMRA_9_Udf_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.TMRA_9_Udf_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[2b9]"></a>TMRA_ClrStatus</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, hc32f4a0_tmra.o(i.TMRA_ClrStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TMRA_ClrStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUnit1_OvfIrqCallback
</UL>

<P><STRONG><a name="[2ba]"></a>TMRA_GetStatus</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, hc32f4a0_tmra.o(i.TMRA_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TMRA_GetStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUnit1_OvfIrqCallback
</UL>

<P><STRONG><a name="[2bb]"></a>TMRA_Init</STRONG> (Thumb, 394 bytes, Stack size 24 bytes, hc32f4a0_tmra.o(i.TMRA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TMRA_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_Config
</UL>

<P><STRONG><a name="[2bc]"></a>TMRA_IntCmd</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, hc32f4a0_tmra.o(i.TMRA_IntCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TMRA_IntCmd &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_IrqConfig
</UL>

<P><STRONG><a name="[2bd]"></a>TMRA_Start</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, hc32f4a0_tmra.o(i.TMRA_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TMRA_Start &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUintStart
</UL>

<P><STRONG><a name="[2be]"></a>TMRA_Stop</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, hc32f4a0_tmra.o(i.TMRA_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TMRA_Stop &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUintStop
</UL>

<P><STRONG><a name="[2c0]"></a>TMRA_StructInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hc32f4a0_tmra.o(i.TMRA_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_Config
</UL>

<P><STRONG><a name="[2bf]"></a>TimerAUint1_Config</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, bsp_timer.o(i.TimerAUint1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TimerAUint1_Config &rArr; TimerAUint1_IrqConfig &rArr; TMRA_IntCmd &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWC_Fcg2PeriphClockCmd
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_IrqConfig
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_StructInit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[2c6]"></a>TimerAUintStart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bsp_timer.o(i.TimerAUintStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TimerAUintStart &rArr; TMRA_Start &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[2c7]"></a>TimerAUintStop</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bsp_timer.o(i.TimerAUintStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TimerAUintStop &rArr; TMRA_Stop &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[24d]"></a>USART_10_LinBreakField_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_10_LinBreakField_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[24e]"></a>USART_10_LinWakeup_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_10_LinWakeup_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[24f]"></a>USART_10_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_10_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[250]"></a>USART_10_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_10_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[251]"></a>USART_10_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_10_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[252]"></a>USART_10_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_10_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[253]"></a>USART_1_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_1_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[254]"></a>USART_1_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_1_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[255]"></a>USART_1_RxTO_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_1_RxTO_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[256]"></a>USART_1_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_1_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[257]"></a>USART_1_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_1_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[258]"></a>USART_2_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_2_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[259]"></a>USART_2_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_2_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[25a]"></a>USART_2_RxTO_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_2_RxTO_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[25b]"></a>USART_2_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_2_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[25c]"></a>USART_2_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_2_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ137_Handler
</UL>

<P><STRONG><a name="[25d]"></a>USART_3_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_3_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[25e]"></a>USART_3_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_3_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[25f]"></a>USART_3_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_3_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[260]"></a>USART_3_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_3_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[261]"></a>USART_4_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_4_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[262]"></a>USART_4_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_4_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[263]"></a>USART_4_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_4_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[264]"></a>USART_4_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_4_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ138_Handler
</UL>

<P><STRONG><a name="[265]"></a>USART_5_LinBreakField_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_5_LinBreakField_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[266]"></a>USART_5_LinWakeup_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_5_LinWakeup_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[267]"></a>USART_5_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_5_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[268]"></a>USART_5_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_5_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[269]"></a>USART_5_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_5_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[26a]"></a>USART_5_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_5_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[26b]"></a>USART_6_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_6_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[26c]"></a>USART_6_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_6_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[26d]"></a>USART_6_RxTO_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_6_RxTO_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[26e]"></a>USART_6_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_6_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[26f]"></a>USART_6_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_6_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ139_Handler
</UL>

<P><STRONG><a name="[270]"></a>USART_7_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_7_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[271]"></a>USART_7_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_7_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[272]"></a>USART_7_RxTO_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_7_RxTO_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[273]"></a>USART_7_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_7_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[274]"></a>USART_7_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_7_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[275]"></a>USART_8_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_8_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[276]"></a>USART_8_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_8_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[277]"></a>USART_8_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_8_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[278]"></a>USART_8_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_8_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[279]"></a>USART_9_RxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_9_RxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[27a]"></a>USART_9_RxErr_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_9_RxErr_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[27b]"></a>USART_9_TxEmpty_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_9_TxEmpty_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[27c]"></a>USART_9_TxEnd_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USART_9_TxEnd_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ141_Handler
</UL>

<P><STRONG><a name="[27d]"></a>USBFS_Global_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.USBFS_Global_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ140_Handler
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hc32f4a0_interrupts.o(i.UsageFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UsageFault_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32f4a0sitb.o(RESET)
</UL>
<P><STRONG><a name="[27e]"></a>UsageFault_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.UsageFault_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[2c8]"></a>W25Q_MB85R_SpiInit</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bsp_spi.o(i.W25Q_MB85R_SpiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = W25Q_MB85R_SpiInit &rArr; GPIO_SetFunc &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPins
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetFunc
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_StructInit
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FunctionCmd
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DeInit
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWC_Fcg1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[27f]"></a>WDT_IrqHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hc32f4a0_interrupts.o(i.WDT_IrqHandler))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ142_Handler
</UL>

<P><STRONG><a name="[2cb]"></a>__0printf$3</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2de]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[28f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDL_AssertHandler
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>

<P><STRONG><a name="[2df]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2e0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2e1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2ce]"></a>bsp_DelayMS</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_dwt.o(i.bsp_DelayMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[2a9]"></a>bsp_DelayUS</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, bsp_dwt.o(i.bsp_DelayUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Write
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
</UL>

<P><STRONG><a name="[2cf]"></a>bsp_FR_ADDR_InitGPIO</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bsp_gpio.o(i.bsp_FR_ADDR_InitGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_FR_ADDR_InitGPIO &rArr; GPIO_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[2d0]"></a>bsp_HWDG_InitGPIO</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, bsp_gpio.o(i.bsp_HWDG_InitGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_HWDG_InitGPIO &rArr; GPIO_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[2d1]"></a>bsp_InitDWT</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bsp_dwt.o(i.bsp_InitDWT))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[2d2]"></a>bsp_InitLed</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, bsp_led.o(i.bsp_InitLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_InitLed &rArr; GPIO_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[2d3]"></a>bsp_InitSWDT</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, bsp_swdt.o(i.bsp_InitSWDT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_InitSWDT &rArr; SWDT_Init &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWDT_Init
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWDT_Feed
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[9e]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[285]"></a>$Super$$main</STRONG> (Thumb, 310 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = $Super$$main &rArr; System_Init &rArr; bsp_Init &rArr; W25Q_MB85R_SpiInit &rArr; GPIO_SetFunc &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_TogglePins
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPins
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetPins
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SingleProgram
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SectorCmd_Sequential
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUintStop
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_WP
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_WE
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Read
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_CheckWrite
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_APP_Zone
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_FCT_Init
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_JMP_APP
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2b2]"></a>SPI_TxRx</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, hc32f4a0_spi.o(i.SPI_TxRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_TxRx
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TransmitReceive
</UL>

<P><STRONG><a name="[287]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.__set_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_APP_Zone
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_JMP_APP
</UL>

<P><STRONG><a name="[2b4]"></a>SystemClock_Config</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, bsp.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SystemClock_Config &rArr; CLK_PLLHInit &rArr; CLK_PLLHCmd &rArr; CLK_GetStableStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_XtalStrucInit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_XtalInit
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetSysClkSrc
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_PLLHStrucInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_PLLHInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_PLLHCmd
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_ClkDiv
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFM_SetWaitCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[2b8]"></a>bsp_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp.o(i.bsp_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bsp_Init &rArr; W25Q_MB85R_SpiInit &rArr; GPIO_SetFunc &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSWDT
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitLed
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDWT
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_HWDG_InitGPIO
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_FR_ADDR_InitGPIO
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_MB85R_SpiInit
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUintStart
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[2a8]"></a>SPI_ReadWriteByte</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_mb85rs2.o(i.SPI_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_ReadWriteByte &rArr; SPI_TransmitReceive &rArr; SPI_TxRx
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TransmitReceive
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Write
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MB85Ctrl_Read
</UL>

<P><STRONG><a name="[2c1]"></a>TimerAUint1_IrqConfig</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bsp_timer.o(i.TimerAUint1_IrqConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TimerAUint1_IrqConfig &rArr; TMRA_IntCmd &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_IntCmd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTC_IrqSignIn
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_Config
</UL>

<P><STRONG><a name="[9d]"></a>TimerAUnit1_OvfIrqCallback</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_timer.o(i.TimerAUnit1_OvfIrqCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TimerAUnit1_OvfIrqCallback &rArr; TMRA_GetStatus &rArr; DDL_AssertHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_GetStatus
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMRA_ClrStatus
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_WDG
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_timer.o(i.TimerAUint1_IrqConfig)
</UL>
<P><STRONG><a name="[2c3]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsp_timer.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_IrqConfig
</UL>

<P><STRONG><a name="[2c5]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bsp_timer.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_IrqConfig
</UL>

<P><STRONG><a name="[2c4]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_timer.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerAUint1_IrqConfig
</UL>

<P><STRONG><a name="[2cc]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
